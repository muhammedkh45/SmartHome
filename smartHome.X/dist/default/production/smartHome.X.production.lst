

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 10 17:27:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110   000000                     
   111                           ; Generated 12/10/2023 GMT
   112                           ; 
   113                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F46K20 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145   000000                     
   146 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   147   000000                     
   148 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   149   000000                     
   150 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   151   000000                     
   152 ;; Function _EUSART_DefaultFramingErrorCallback is unused but had its address taken
   153   000000                     
   154 ;; Function _EUSART_DefaultOverrunErrorCallback is unused but had its address taken
   155   000000                     
   156                           	psect	idataCOMRAM
   157   0026C0                     __pidataCOMRAM:
   158                           	callstack 0
   159                           
   160                           ;initializer for _ret
   161   0026C0  01                 	db	1
   162                           
   163                           ;initializer for _KeyPad_Value
   164   0026C1  0A                 	db	10
   165                           
   166                           	psect	idataBANK0
   167   002406                     __pidataBANK0:
   168                           	callstack 0
   169                           
   170                           ;initializer for _port_registers
   171   002406  80                 	db	128
   172   002407  0F                 	db	15
   173   002408  81                 	db	129
   174   002409  0F                 	db	15
   175   00240A  82                 	db	130
   176   00240B  0F                 	db	15
   177   00240C  83                 	db	131
   178   00240D  0F                 	db	15
   179   00240E  84                 	db	132
   180   00240F  0F                 	db	15
   181                           
   182                           ;initializer for _lat_registers
   183   002410  89                 	db	137
   184   002411  0F                 	db	15
   185   002412  8A                 	db	138
   186   002413  0F                 	db	15
   187   002414  8B                 	db	139
   188   002415  0F                 	db	15
   189   002416  8C                 	db	140
   190   002417  0F                 	db	15
   191   002418  8D                 	db	141
   192   002419  0F                 	db	15
   193                           
   194                           ;initializer for _tris_registers
   195   00241A  92                 	db	146
   196   00241B  0F                 	db	15
   197   00241C  93                 	db	147
   198   00241D  0F                 	db	15
   199   00241E  94                 	db	148
   200   00241F  0F                 	db	15
   201   002420  95                 	db	149
   202   002421  0F                 	db	15
   203   002422  96                 	db	150
   204   002423  0F                 	db	15
   205                           
   206                           ;initializer for _LCD_1
   207   002424  02                 	db	2
   208   002425  0A                 	db	10
   209   002426  00                 	db	0
   210   002427  08                 	db	8
   211   002428  10                 	db	16
   212   002429  18                 	db	24
   213   00242A  20                 	db	32
   214   00242B  28                 	db	40
   215   00242C  12                 	db	18
   216   00242D  2A                 	db	42
   217                           
   218                           	psect	smallconst
   219   001000                     __psmallconst:
   220                           	callstack 0
   221   001000  00                 	db	0
   222   001001                     _i2c_fsmStateTable:
   223                           	callstack 0
   224   001001  E0                 	db	low _I2C_DO_IDLE
   225   001002  25                 	db	high _I2C_DO_IDLE
   226   001003  AA                 	db	low _I2C_DO_SEND_ADR_READ
   227   001004  25                 	db	high _I2C_DO_SEND_ADR_READ
   228   001005  BA                 	db	low _I2C_DO_SEND_ADR_WRITE
   229   001006  25                 	db	high _I2C_DO_SEND_ADR_WRITE
   230   001007  18                 	db	low _I2C_DO_TX
   231   001008  18                 	db	high _I2C_DO_TX
   232   001009  DC                 	db	low _I2C_DO_RX
   233   00100A  18                 	db	high _I2C_DO_RX
   234   00100B  D4                 	db	low _I2C_DO_RCEN
   235   00100C  25                 	db	high _I2C_DO_RCEN
   236   00100D  28                 	db	low _I2C_DO_TX_EMPTY
   237   00100E  1B                 	db	high _I2C_DO_TX_EMPTY
   238   00100F  60                 	db	low _I2C_DO_SEND_RESTART_READ
   239   001010  26                 	db	high _I2C_DO_SEND_RESTART_READ
   240   001011  58                 	db	low _I2C_DO_SEND_RESTART_WRITE
   241   001012  26                 	db	high _I2C_DO_SEND_RESTART_WRITE
   242   001013  50                 	db	low _I2C_DO_SEND_RESTART
   243   001014  26                 	db	high _I2C_DO_SEND_RESTART
   244   001015  48                 	db	low _I2C_DO_SEND_STOP
   245   001016  26                 	db	high _I2C_DO_SEND_STOP
   246   001017  40                 	db	low _I2C_DO_RX_ACK
   247   001018  26                 	db	high _I2C_DO_RX_ACK
   248   001019  38                 	db	low _I2C_DO_RX_NACK_STOP
   249   00101A  26                 	db	high _I2C_DO_RX_NACK_STOP
   250   00101B  30                 	db	low _I2C_DO_RX_NACK_RESTART
   251   00101C  26                 	db	high _I2C_DO_RX_NACK_RESTART
   252   00101D  C8                 	db	low _I2C_DO_RESET
   253   00101E  25                 	db	high _I2C_DO_RESET
   254   00101F  B2                 	db	low _I2C_DO_ADDRESS_NACK
   255   001020  1E                 	db	high _I2C_DO_ADDRESS_NACK
   256   001021                     __end_of_i2c_fsmStateTable:
   257                           	callstack 0
   258   001021                     _btn_values:
   259                           	callstack 0
   260   001021  37                 	db	55
   261   001022  38                 	db	56
   262   001023  39                 	db	57
   263   001024  2F                 	db	47
   264   001025  34                 	db	52
   265   001026  35                 	db	53
   266   001027  36                 	db	54
   267   001028  2A                 	db	42
   268   001029  31                 	db	49
   269   00102A  32                 	db	50
   270   00102B  33                 	db	51
   271   00102C  2D                 	db	45
   272   00102D  23                 	db	35
   273   00102E  30                 	db	48
   274   00102F  3D                 	db	61
   275   001030  2B                 	db	43
   276   001031                     __end_of_btn_values:
   277                           	callstack 0
   278   001031                     _dpowers:
   279                           	callstack 0
   280   001031  0001               	dw	1
   281   001033  000A               	dw	10
   282   001035  0064               	dw	100
   283   001037  03E8               	dw	1000
   284   001039  2710               	dw	10000
   285   00103B                     __end_of_dpowers:
   286                           	callstack 0
   287   000000                     _TXREG	set	4013
   288   000000                     _RCREG	set	4014
   289   000000                     _SPBRG	set	4015
   290   000000                     _TXSTA	set	4012
   291   000000                     _RCSTA	set	4011
   292   000000                     _BAUDCON	set	4024
   293   000000                     _PIE2bits	set	4000
   294   000000                     _IPR1bits	set	3999
   295   000000                     _EECON2	set	4007
   296   000000                     _EEADRH	set	4010
   297   000000                     _EEDATA	set	4008
   298   000000                     _EEADR	set	4009
   299   000000                     _PIR1bits	set	3998
   300   000000                     _PORTC	set	3970
   301   000000                     _PORTB	set	3969
   302   000000                     _LATC	set	3979
   303   000000                     _LATB	set	3978
   304   000000                     _TRISC	set	3988
   305   000000                     _TRISB	set	3987
   306   000000                     _BAUDCONbits	set	4024
   307   000000                     _TXSTAbits	set	4012
   308   000000                     _RCSTAbits	set	4011
   309   000000                     _SSPSTATbits	set	4039
   310   000000                     _SSPCON2bits	set	4037
   311   000000                     _SSPCON1bits	set	4038
   312   000000                     _WPUB	set	3964
   313   000000                     _ANSELH	set	3967
   314   000000                     _PORTA	set	3968
   315   000000                     _PORTD	set	3971
   316   000000                     _LATD	set	3980
   317   000000                     _TRISD	set	3989
   318   000000                     _OSCTUNE	set	3995
   319   000000                     _PIE1bits	set	3997
   320   000000                     _PIR2bits	set	4001
   321   000000                     _SSPCON2	set	4037
   322   000000                     _SSPCON1	set	4038
   323   000000                     _SSPSTAT	set	4039
   324   000000                     _TRISE	set	3990
   325   000000                     _LATE	set	3981
   326   000000                     _TRISA	set	3986
   327   000000                     _PORTE	set	3972
   328   000000                     _LATA	set	3977
   329   000000                     _RCONbits	set	4048
   330   000000                     _INTCONbits	set	4082
   331   000000                     _SSPBUF	set	4041
   332   000000                     _SSPADD	set	4040
   333   000000                     _IPR2bits	set	4002
   334   000000                     _EECON1bits	set	4006
   335   000000                     _OSCCON	set	4051
   336   000000                     _INTCON3bits	set	4080
   337   000000                     _INTCON2bits	set	4081
   338   000000                     _IOCB	set	3965
   339   000000                     _SPBRGH	set	4016
   340   00103B                     STR_6:
   341   00103B  2D                 	db	45
   342   00103C  2D                 	db	45
   343   00103D  2D                 	db	45
   344   00103E  2D                 	db	45
   345   00103F  2D                 	db	45
   346   001040  2D                 	db	45
   347   001041  2D                 	db	45
   348   001042  2D                 	db	45
   349   001043  2D                 	db	45
   350   001044  2D                 	db	45
   351   001045  2D                 	db	45
   352   001046  2D                 	db	45
   353   001047  2D                 	db	45
   354   001048  2D                 	db	45
   355   001049  2D                 	db	45
   356   00104A  2D                 	db	45
   357   00104B  2D                 	db	45
   358   00104C  2D                 	db	45
   359   00104D  2D                 	db	45
   360   00104E  2D                 	db	45
   361   00104F  2D                 	db	45
   362   001050  2D                 	db	45
   363   001051  2D                 	db	45
   364   001052  2D                 	db	45
   365   001053  0D                 	db	13
   366   001054  00                 	db	0
   367   001055                     STR_8:
   368   001055  46                 	db	70	;'F'
   369   001056  61                 	db	97	;'a'
   370   001057  6E                 	db	110	;'n'
   371   001058  20                 	db	32
   372   001059  69                 	db	105	;'i'
   373   00105A  73                 	db	115	;'s'
   374   00105B  20                 	db	32
   375   00105C  4F                 	db	79	;'O'
   376   00105D  4E                 	db	78	;'N'
   377   00105E  20                 	db	32
   378   00105F  00                 	db	0
   379   001060                     STR_7:
   380   001060  46                 	db	70	;'F'
   381   001061  61                 	db	97	;'a'
   382   001062  6E                 	db	110	;'n'
   383   001063  20                 	db	32
   384   001064  69                 	db	105	;'i'
   385   001065  73                 	db	115	;'s'
   386   001066  20                 	db	32
   387   001067  4F                 	db	79	;'O'
   388   001068  46                 	db	70	;'F'
   389   001069  46                 	db	70	;'F'
   390   00106A  00                 	db	0
   391   00106B                     STR_9:
   392   00106B  54                 	db	84	;'T'
   393   00106C  65                 	db	101	;'e'
   394   00106D  6D                 	db	109	;'m'
   395   00106E  70                 	db	112	;'p'
   396   00106F  3D                 	db	61	;'='
   397   001070  20                 	db	32
   398   001071  00                 	db	0
   399   001072                     STR_4:
   400   001072  54                 	db	84	;'T'
   401   001073  49                 	db	73	;'I'
   402   001074  4D                 	db	77	;'M'
   403   001075  45                 	db	69	;'E'
   404   001076  3A                 	db	58	;':'
   405   001077  20                 	db	32
   406   001078  00                 	db	0
   407   001079                     STR_5:
   408   001079  44                 	db	68	;'D'
   409   00107A  41                 	db	65	;'A'
   410   00107B  54                 	db	84	;'T'
   411   00107C  45                 	db	69	;'E'
   412   00107D  3A                 	db	58	;':'
   413   00107E  20                 	db	32
   414   00107F  00                 	db	0
   415   001080                     STR_1:
   416   001080  25                 	db	37
   417   001081  69                 	db	105	;'i'
   418   001082  00                 	db	0
   419   001083  00                 	db	0	; dummy byte at the end
   420   000000                     
   421                           ; #config settings
   422                           
   423                           	psect	cinit
   424   00209C                     __pcinit:
   425                           	callstack 0
   426   00209C                     start_initialization:
   427                           	callstack 0
   428   00209C                     __initialization:
   429                           	callstack 0
   430                           
   431                           ; Initialize objects allocated to BANK0 (40 bytes)
   432                           ; load TBLPTR registers with __pidataBANK0
   433   00209C  0E06               	movlw	low __pidataBANK0
   434   00209E  6EF6               	movwf	tblptrl,c
   435   0020A0  0E24               	movlw	high __pidataBANK0
   436   0020A2  6EF7               	movwf	tblptrh,c
   437   0020A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   438   0020A6  6EF8               	movwf	tblptru,c
   439   0020A8  EE00  F09C         	lfsr	0,__pdataBANK0
   440   0020AC  EE10 F028          	lfsr	1,40
   441   0020B0                     copy_data0:
   442   0020B0  0009               	tblrd		*+
   443   0020B2  CFF5 FFEE          	movff	tablat,postinc0
   444   0020B6  50E5               	movf	postdec1,w,c
   445   0020B8  50E1               	movf	fsr1l,w,c
   446   0020BA  E1FA               	bnz	copy_data0
   447                           
   448                           ; Initialize objects allocated to COMRAM (2 bytes)
   449                           ; load TBLPTR registers with __pidataCOMRAM
   450   0020BC  0EC0               	movlw	low __pidataCOMRAM
   451   0020BE  6EF6               	movwf	tblptrl,c
   452   0020C0  0E26               	movlw	high __pidataCOMRAM
   453   0020C2  6EF7               	movwf	tblptrh,c
   454   0020C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   455   0020C6  6EF8               	movwf	tblptru,c
   456   0020C8  0009               	tblrd		*+	;fetch initializer
   457   0020CA  CFF5 F058          	movff	tablat,__pdataCOMRAM
   458   0020CE  0009               	tblrd		*+	;fetch initializer
   459   0020D0  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
   460                           
   461                           ; Clear objects allocated to BANK0 (60 bytes)
   462   0020D4  EE00  F060         	lfsr	0,__pbssBANK0
   463   0020D8  0E3C               	movlw	60
   464   0020DA                     clear_0:
   465   0020DA  6AEE               	clrf	postinc0,c
   466   0020DC  06E8               	decf	wreg,f,c
   467   0020DE  E1FD               	bnz	clear_0
   468                           
   469                           ; Clear objects allocated to COMRAM (32 bytes)
   470   0020E0  EE00  F038         	lfsr	0,__pbssCOMRAM
   471   0020E4  0E20               	movlw	32
   472   0020E6                     clear_1:
   473   0020E6  6AEE               	clrf	postinc0,c
   474   0020E8  06E8               	decf	wreg,f,c
   475   0020EA  E1FD               	bnz	clear_1
   476   0020EC                     end_of_initialization:
   477                           	callstack 0
   478   0020EC                     __end_of__initialization:
   479                           	callstack 0
   480   0020EC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   481   0020EE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   482   0020F0  0100               	movlb	0
   483   0020F2  EFA7  F00A         	goto	_main	;jump to C main() function
   484                           
   485                           	psect	bssCOMRAM
   486   000038                     __pbssCOMRAM:
   487                           	callstack 0
   488   000038                     _RealTimeClockDs1307@RealTimeClockDs1307$F381:
   489                           	callstack 0
   490   000038                     	ds	6
   491   00003E                     	ds	6
   492   000044                     _EUSART_OverrunErrorHandler:
   493                           	callstack 0
   494   000044                     	ds	2
   495   000046                     _EUSART_FramingErrorHandler:
   496                           	callstack 0
   497   000046                     	ds	2
   498   000048                     _eusartRxLastError:
   499                           	callstack 0
   500   000048                     	ds	2
   501   00004A                     _INT2_InterruptHandler:
   502                           	callstack 0
   503   00004A                     	ds	2
   504   00004C                     _INT1_InterruptHandler:
   505                           	callstack 0
   506   00004C                     	ds	2
   507   00004E                     _INT0_InterruptHandler:
   508                           	callstack 0
   509   00004E                     	ds	2
   510   000050                     _MSSP_InterruptHandler:
   511                           	callstack 0
   512   000050                     	ds	2
   513   000052                     _NVM_A6_Received:
   514                           	callstack 0
   515   000052                     	ds	1
   516   000053                     _NVM_A2_Received:
   517                           	callstack 0
   518   000053                     	ds	1
   519   000054                     _Temp_A7_Val:
   520                           	callstack 0
   521   000054                     	ds	1
   522   000055                     _dummy:
   523                           	callstack 0
   524   000055                     	ds	3
   525                           
   526                           	psect	dataCOMRAM
   527   000058                     __pdataCOMRAM:
   528                           	callstack 0
   529   000058                     _ret:
   530                           	callstack 0
   531   000058                     	ds	1
   532   000059                     _KeyPad_Value:
   533                           	callstack 0
   534   000059                     	ds	1
   535                           
   536                           	psect	bssBANK0
   537   000060                     __pbssBANK0:
   538                           	callstack 0
   539   000060                     _I2C_Status:
   540                           	callstack 0
   541   000060                     	ds	36
   542   000084                     _RealTimeClockDs1307:
   543                           	callstack 0
   544   000084                     	ds	6
   545   00008A                     _RealTimeClockDS1307_Pack_Date:
   546                           	callstack 0
   547   00008A                     	ds	9
   548   000093                     _RealTimeClockDS1307_Pack_Time:
   549                           	callstack 0
   550   000093                     	ds	9
   551                           
   552                           	psect	dataBANK0
   553   00009C                     __pdataBANK0:
   554                           	callstack 0
   555   00009C                     _port_registers:
   556                           	callstack 0
   557   00009C                     	ds	10
   558   0000A6                     _lat_registers:
   559                           	callstack 0
   560   0000A6                     	ds	10
   561   0000B0                     _tris_registers:
   562                           	callstack 0
   563   0000B0                     	ds	10
   564   0000BA                     _LCD_1:
   565                           	callstack 0
   566   0000BA                     	ds	10
   567                           
   568                           	psect	cstackCOMRAM
   569   000001                     __pcstackCOMRAM:
   570                           	callstack 0
   571   000001                     I2C_MasterSendTxData@data:
   572                           	callstack 0
   573   000001                     i2I2C_SetBuffer@buffer:
   574                           	callstack 0
   575   000001                     i2I2C_SetCallback@cb:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x0
   579   000001                     	ds	1
   580   000002                     
   581                           ; 1 bytes @ 0x1
   582   000002                     	ds	1
   583   000003                     i2I2C_SetBuffer@bufferSize:
   584                           	callstack 0
   585   000003                     i2I2C_SetCallback@ptr:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x2
   589   000003                     	ds	2
   590   000005                     i2I2C_SetCallback@idx:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x4
   594   000005                     	ds	1
   595   000006                     i2I2C_SetDataCompleteCallback@cb:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x5
   599   000006                     	ds	2
   600   000008                     i2I2C_SetDataCompleteCallback@ptr:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x7
   604   000008                     	ds	2
   605   00000A                     rd1RegCompleteHandler@ptr:
   606                           	callstack 0
   607   00000A                     rd2RegCompleteHandler@ptr:
   608                           	callstack 0
   609   00000A                     wr1RegCompleteHandler@ptr:
   610                           	callstack 0
   611   00000A                     wr2RegCompleteHandler@ptr:
   612                           	callstack 0
   613   00000A                     rdBlkRegCompleteHandler@ptr:
   614                           	callstack 0
   615   00000A                     I2C_CallbackReturnReset@funPtr:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x9
   619   00000A                     	ds	2
   620   00000C                     ??_rdBlkRegCompleteHandler:
   621   00000C                     
   622                           ; 1 bytes @ 0xB
   623   00000C                     	ds	1
   624   00000D                     ??_I2C_DO_TX:
   625   00000D                     ??_I2C_DO_RX:
   626   00000D                     ??_I2C_DO_TX_EMPTY:
   627   00000D                     ??_I2C_DO_ADDRESS_NACK:
   628                           
   629                           ; 1 bytes @ 0xC
   630   00000D                     	ds	2
   631   00000F                     ??_I2C_MasterFsm:
   632                           
   633                           ; 1 bytes @ 0xE
   634   00000F                     	ds	3
   635   000012                     ??_INTERRUPT_InterruptManagerHigh:
   636                           
   637                           ; 1 bytes @ 0x11
   638   000012                     	ds	10
   639   00001C                     ?___lwdiv:
   640                           	callstack 0
   641   00001C                     Keypad_Get_Value@Value:
   642                           	callstack 0
   643   00001C                     gpio_pin_direction_intialize@_pin_config:
   644                           	callstack 0
   645   00001C                     gpio_pin_write_logic@_pin_config:
   646                           	callstack 0
   647   00001C                     I2C_Close@returnValue:
   648                           	callstack 0
   649   00001C                     I2C_MasterOperation@read:
   650                           	callstack 0
   651   00001C                     EUSART_Write@txData:
   652                           	callstack 0
   653   00001C                     memset@p1:
   654                           	callstack 0
   655   00001C                     I2C_SetBuffer@buffer:
   656                           	callstack 0
   657   00001C                     I2C_SetInterruptHandler@InterruptHandler:
   658                           	callstack 0
   659   00001C                     I2C_SetCallback@cb:
   660                           	callstack 0
   661   00001C                     INT0_SetInterruptHandler@InterruptHandler:
   662                           	callstack 0
   663   00001C                     INT1_SetInterruptHandler@InterruptHandler:
   664                           	callstack 0
   665   00001C                     INT2_SetInterruptHandler@InterruptHandler:
   666                           	callstack 0
   667   00001C                     EUSART_FramingErrorCallbackRegister@callbackHandler:
   668                           	callstack 0
   669   00001C                     EUSART_OverrunErrorCallbackRegister@callbackHandler:
   670                           	callstack 0
   671   00001C                     ___lwdiv@dividend:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x1B
   675   00001C                     	ds	1
   676   00001D                     ??_Keypad_Get_Value:
   677   00001D                     ??_gpio_pin_direction_intialize:
   678   00001D                     gpio_pin_write_logic@logic:
   679                           	callstack 0
   680   00001D                     I2C_MasterOperation@returnValue:
   681                           	callstack 0
   682   00001D                     UART_Send_String@String:
   683                           	callstack 0
   684   00001D                     memset@c:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1C
   688   00001D                     	ds	1
   689   00001E                     ??_gpio_pin_write_logic:
   690   00001E                     I2C_Open@address:
   691                           	callstack 0
   692   00001E                     I2C_SetBuffer@bufferSize:
   693                           	callstack 0
   694   00001E                     I2C_SetCallback@ptr:
   695                           	callstack 0
   696   00001E                     ___lwdiv@divisor:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x1D
   700   00001E                     	ds	1
   701   00001F                     Keypad_Get_Value@mask:
   702                           	callstack 0
   703   00001F                     I2C_Open@returnValue:
   704                           	callstack 0
   705   00001F                     UART_Send_String@String_Length:
   706                           	callstack 0
   707   00001F                     memset@n:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x1E
   711   00001F                     	ds	1
   712   000020                     Keypad_Get_Value@val:
   713                           	callstack 0
   714   000020                     I2C_SetCallback@idx:
   715                           	callstack 0
   716   000020                     ___lwdiv@quotient:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x1F
   720   000020                     	ds	1
   721   000021                     ??_UART_Send_String:
   722   000021                     Keypad_Get_Value@L_rows_counter:
   723                           	callstack 0
   724   000021                     memset@p:
   725                           	callstack 0
   726   000021                     I2C_SetDataCompleteCallback@cb:
   727                           	callstack 0
   728   000021                     I2C_SetAddressNackCallback@cb:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x20
   732   000021                     	ds	1
   733   000022                     gpio_pin_direction_intialize@ret:
   734                           	callstack 0
   735   000022                     ___lwdiv@counter:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x21
   739   000022                     	ds	1
   740   000023                     ?___lwmod:
   741                           	callstack 0
   742   000023                     gpio_pin_write_logic@ret:
   743                           	callstack 0
   744   000023                     UART_Send_String@str_len_counter:
   745                           	callstack 0
   746   000023                     I2C_SetDataCompleteCallback@ptr:
   747                           	callstack 0
   748   000023                     I2C_SetAddressNackCallback@ptr:
   749                           	callstack 0
   750   000023                     ___lwmod@dividend:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x22
   754   000023                     	ds	1
   755   000024                     lcd_8bit_send_enable_signal@lcd:
   756                           	callstack 0
   757   000024                     gpio_pin_intialize@_pin_config:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x23
   761   000024                     	ds	1
   762   000025                     ??_gpio_pin_intialize:
   763   000025                     lcd_8bit_send_enable_signal@ret:
   764                           	callstack 0
   765   000025                     I2C_Read1ByteRegister@reg:
   766                           	callstack 0
   767   000025                     I2C_Write1ByteRegister@reg:
   768                           	callstack 0
   769   000025                     ___lwmod@divisor:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x24
   773   000025                     	ds	1
   774   000026                     lcd_8bit_send_command@lcd:
   775                           	callstack 0
   776   000026                     lcd_8bit_send_char_data@lcd:
   777                           	callstack 0
   778   000026                     gpio_pin_intialize@ret:
   779                           	callstack 0
   780   000026                     I2C_Read1ByteRegister@address:
   781                           	callstack 0
   782   000026                     I2C_Write1ByteRegister@data:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x25
   786   000026                     	ds	1
   787   000027                     lcd_8bit_send_command@command:
   788                           	callstack 0
   789   000027                     lcd_8bit_send_char_data@data:
   790                           	callstack 0
   791   000027                     I2C_Read1ByteRegister@returnValue:
   792                           	callstack 0
   793   000027                     I2C_Write1ByteRegister@address:
   794                           	callstack 0
   795   000027                     ___lwmod@counter:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x26
   799   000027                     	ds	1
   800   000028                     ??_lcd_8bit_send_command:
   801   000028                     ??_lcd_8bit_send_char_data:
   802   000028                     ?_sprintf:
   803                           	callstack 0
   804   000028                     ?_RealTimeClockDs1307_Get_Date_Time:
   805                           	callstack 0
   806   000028                     TemSensor_TC74_Read_Temp@Temp_Address:
   807                           	callstack 0
   808   000028                     sprintf@sp:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x27
   812   000028                     	ds	1
   813   000029                     TemSensor_TC74_Read_Temp@Received_Temp:
   814                           	callstack 0
   815   000029                     sprintf@f:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x28
   819   000029                     	ds	1
   820   00002A                     lcd_8bit_send_command@ret:
   821                           	callstack 0
   822   00002A                     lcd_8bit_send_char_data@ret:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x29
   826   00002A                     	ds	1
   827   00002B                     lcd_8bit_send_command@l_pin_counter:
   828                           	callstack 0
   829   00002B                     lcd_8bit_send_char_data@l_pin_counter:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x2A
   833   00002B                     	ds	1
   834   00002C                     lcd_8bit_intialize@lcd:
   835                           	callstack 0
   836   00002C                     lcd_8bit_send_string@lcd:
   837                           	callstack 0
   838   00002C                     lcd_8bit_set_cursor@lcd:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x2B
   842   00002C                     	ds	1
   843   00002D                     ??_lcd_8bit_intialize:
   844   00002D                     lcd_8bit_set_cursor@row:
   845                           	callstack 0
   846   00002D                     lcd_8bit_send_string@str:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x2C
   850   00002D                     	ds	1
   851   00002E                     ??_sprintf:
   852   00002E                     lcd_8bit_intialize@l_data_pins_counter:
   853                           	callstack 0
   854   00002E                     lcd_8bit_set_cursor@coulmn:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x2D
   858   00002E                     	ds	1
   859   00002F                     lcd_8bit_intialize@ret:
   860                           	callstack 0
   861   00002F                     lcd_8bit_send_string@ret:
   862                           	callstack 0
   863   00002F                     lcd_8bit_set_cursor@ret:
   864                           	callstack 0
   865   00002F                     sprintf@ap:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x2E
   869   00002F                     	ds	1
   870   000030                     lcd_8bit_send_string_pos@lcd:
   871                           	callstack 0
   872   000030                     sprintf@flag:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x2F
   876   000030                     	ds	1
   877   000031                     lcd_8bit_send_string_pos@row:
   878                           	callstack 0
   879   000031                     sprintf@prec:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x30
   883   000031                     	ds	1
   884   000032                     lcd_8bit_send_string_pos@column:
   885                           	callstack 0
   886   000032                     sprintf@val:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x31
   890   000032                     	ds	1
   891   000033                     lcd_8bit_send_string_pos@str:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x32
   895   000033                     	ds	1
   896   000034                     sprintf@c:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x33
   900   000034                     	ds	1
   901   000035                     lcd_8bit_send_string_pos@ret:
   902                           	callstack 0
   903   000035                     convert_uint8_to_string@str:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x34
   907   000035                     	ds	1
   908   000036                     convert_uint8_to_string@value:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x35
   912   000036                     	ds	1
   913   000037                     convert_uint8_to_string@ret:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x36
   917   000037                     	ds	1
   918   000038                     
   919                           ; 1 bytes @ 0x37
   920 ;;
   921 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   922 ;;
   923 ;; *************** function _main *****************
   924 ;; Defined at:
   925 ;;		line 26 in file "Application.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  2  1146[None  ] int 
   932 ;; Registers used:
   933 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels required when called: 12
   945 ;; This function calls:
   946 ;;		_I2C_Write1ByteRegister
   947 ;;		_Keypad_Get_Value
   948 ;;		_Print_RealTimeClockDS1307
   949 ;;		_RealTimeClockDs1307_Get_Date_Time
   950 ;;		_SYSTEM_Initialize
   951 ;;		_TemSensor_TC74_Read_Temp
   952 ;;		_convert_uint8_to_string
   953 ;;		_keyPad_Init
   954 ;;		_lcd_8bit_intialize
   955 ;;		_lcd_8bit_send_command
   956 ;;		_lcd_8bit_send_string_pos
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text0
   963   00154E                     __ptext0:
   964                           	callstack 0
   965   00154E                     _main:
   966                           	callstack 19
   967   00154E                     
   968                           ;Application.c: 28:     SYSTEM_Initialize();
   969   00154E  EC7C  F012         	call	_SYSTEM_Initialize	;wreg free
   970   001552                     
   971                           ;Application.c: 30:     (INTCONbits.GIEH = 1);
   972   001552  8EF2               	bsf	242,7,c	;volatile
   973   001554                     
   974                           ;Application.c: 32:     (INTCONbits.GIEL = 1);
   975   001554  8CF2               	bsf	242,6,c	;volatile
   976   001556                     
   977                           ;Application.c: 34:     (INTCONbits.PEIE = 1);
   978   001556  8CF2               	bsf	242,6,c	;volatile
   979   001558                     
   980                           ;Application.c: 36:     ret = lcd_8bit_intialize(&LCD_1);
   981   001558  0EBA               	movlw	low _LCD_1
   982   00155A  6E2C               	movwf	lcd_8bit_intialize@lcd^0,c
   983   00155C  EC21  F00B         	call	_lcd_8bit_intialize	;wreg free
   984   001560  6E58               	movwf	_ret^0,c
   985   001562                     
   986                           ;Application.c: 37:     ret = lcd_8bit_send_command(&LCD_1,0x0C);
   987   001562  0EBA               	movlw	low _LCD_1
   988   001564  6E26               	movwf	lcd_8bit_send_command@lcd^0,c
   989   001566  0E0C               	movlw	12
   990   001568  6E27               	movwf	lcd_8bit_send_command@command^0,c
   991   00156A  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
   992   00156E  6E58               	movwf	_ret^0,c
   993   001570                     
   994                           ;Application.c: 38:     keyPad_Init();
   995   001570  ECF6  F012         	call	_keyPad_Init	;wreg free
   996   001574                     l5482:
   997                           
   998                           ;Application.c: 43:     {;Application.c: 44:         Temp_A7_Val = TemSensor_TC74_Read_T
      +                          emp(0x9E);
   999   001574  0E9E               	movlw	158
  1000   001576  ECCC  F012         	call	_TemSensor_TC74_Read_Temp
  1001   00157A  6E54               	movwf	_Temp_A7_Val^0,c
  1002   00157C                     
  1003                           ;Application.c: 45:         ret = convert_uint8_to_string(Temp_A7_Val,&dummy);
  1004   00157C  0E55               	movlw	low _dummy
  1005   00157E  6E35               	movwf	convert_uint8_to_string@str^0,c
  1006   001580  5054               	movf	_Temp_A7_Val^0,w,c
  1007   001582  ECA8  F010         	call	_convert_uint8_to_string
  1008   001586  6E58               	movwf	_ret^0,c
  1009   001588                     
  1010                           ;Application.c: 46:         if(Temp_A7_Val<36)
  1011   001588  0E24               	movlw	36
  1012   00158A  6054               	cpfslt	_Temp_A7_Val^0,c
  1013   00158C  EFCA  F00A         	goto	u3021
  1014   001590  EFCC  F00A         	goto	u3020
  1015   001594                     u3021:
  1016   001594  EFDD  F00A         	goto	l5490
  1017   001598                     u3020:
  1018   001598                     
  1019                           ;Application.c: 47:             ret = lcd_8bit_send_string_pos(&LCD_1,1,8,"Fan is OFF");
  1020   001598  0EBA               	movlw	low _LCD_1
  1021   00159A  6E30               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1022   00159C  0E01               	movlw	1
  1023   00159E  6E31               	movwf	lcd_8bit_send_string_pos@row^0,c
  1024   0015A0  0E08               	movlw	8
  1025   0015A2  6E32               	movwf	lcd_8bit_send_string_pos@column^0,c
  1026   0015A4  0E60               	movlw	low STR_7
  1027   0015A6  6E33               	movwf	lcd_8bit_send_string_pos@str^0,c
  1028   0015A8  5033               	movf	lcd_8bit_send_string_pos@str^0,w,c
  1029   0015AA  A4D8               	btfss	status,2,c
  1030   0015AC  0E10               	movlw	high __smallconst
  1031   0015AE  6E34               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1032   0015B0  EC0F  F011         	call	_lcd_8bit_send_string_pos	;wreg free
  1033   0015B4  6E58               	movwf	_ret^0,c
  1034   0015B6  EFEC  F00A         	goto	l1149
  1035   0015BA                     l5490:
  1036                           
  1037                           ;Application.c: 49:             ret = lcd_8bit_send_string_pos(&LCD_1,1,8,"Fan is ON ");
  1038   0015BA  0EBA               	movlw	low _LCD_1
  1039   0015BC  6E30               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1040   0015BE  0E01               	movlw	1
  1041   0015C0  6E31               	movwf	lcd_8bit_send_string_pos@row^0,c
  1042   0015C2  0E08               	movlw	8
  1043   0015C4  6E32               	movwf	lcd_8bit_send_string_pos@column^0,c
  1044   0015C6  0E55               	movlw	low STR_8
  1045   0015C8  6E33               	movwf	lcd_8bit_send_string_pos@str^0,c
  1046   0015CA  5033               	movf	lcd_8bit_send_string_pos@str^0,w,c
  1047   0015CC  A4D8               	btfss	status,2,c
  1048   0015CE  0E10               	movlw	high __smallconst
  1049   0015D0  6E34               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1050   0015D2  EC0F  F011         	call	_lcd_8bit_send_string_pos	;wreg free
  1051   0015D6  6E58               	movwf	_ret^0,c
  1052   0015D8                     l1149:
  1053                           
  1054                           ;Application.c: 50:         ret = lcd_8bit_send_string_pos(&LCD_1,2,8,"Temp= ");
  1055   0015D8  0EBA               	movlw	low _LCD_1
  1056   0015DA  6E30               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1057   0015DC  0E02               	movlw	2
  1058   0015DE  6E31               	movwf	lcd_8bit_send_string_pos@row^0,c
  1059   0015E0  0E08               	movlw	8
  1060   0015E2  6E32               	movwf	lcd_8bit_send_string_pos@column^0,c
  1061   0015E4  0E6B               	movlw	low STR_9
  1062   0015E6  6E33               	movwf	lcd_8bit_send_string_pos@str^0,c
  1063   0015E8  5033               	movf	lcd_8bit_send_string_pos@str^0,w,c
  1064   0015EA  A4D8               	btfss	status,2,c
  1065   0015EC  0E10               	movlw	high __smallconst
  1066   0015EE  6E34               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1067   0015F0  EC0F  F011         	call	_lcd_8bit_send_string_pos	;wreg free
  1068   0015F4  6E58               	movwf	_ret^0,c
  1069                           
  1070                           ;Application.c: 51:         ret = lcd_8bit_send_string_pos(&LCD_1,2,14,&dummy);
  1071   0015F6  0EBA               	movlw	low _LCD_1
  1072   0015F8  6E30               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1073   0015FA  0E02               	movlw	2
  1074   0015FC  6E31               	movwf	lcd_8bit_send_string_pos@row^0,c
  1075   0015FE  0E0E               	movlw	14
  1076   001600  6E32               	movwf	lcd_8bit_send_string_pos@column^0,c
  1077   001602  0E55               	movlw	low _dummy
  1078   001604  6E33               	movwf	lcd_8bit_send_string_pos@str^0,c
  1079   001606  6A34               	clrf	(lcd_8bit_send_string_pos@str+1)^0,c
  1080   001608  EC0F  F011         	call	_lcd_8bit_send_string_pos	;wreg free
  1081   00160C  6E58               	movwf	_ret^0,c
  1082   00160E                     
  1083                           ;Application.c: 52:         RealTimeClockDs1307 = RealTimeClockDs1307_Get_Date_Time();
  1084   00160E  EC20  F010         	call	_RealTimeClockDs1307_Get_Date_Time	;wreg free
  1085   001612  EE20  F084         	lfsr	2,_RealTimeClockDs1307
  1086   001616  0E05               	movlw	5
  1087   001618                     u3031:
  1088   001618  CFEB FFDB          	movff	plusw0,plusw2
  1089   00161C  06E8               	decf	wreg,f,c
  1090   00161E  E2FC               	bc	u3031
  1091   001620                     
  1092                           ;Application.c: 53:         Print_RealTimeClockDS1307();
  1093   001620  EC98  F00B         	call	_Print_RealTimeClockDS1307	;wreg free
  1094   001624                     
  1095                           ;Application.c: 54:         I2C_Write1ByteRegister(0x8,0x00,Temp_A7_Val);
  1096   001624  0E00               	movlw	0
  1097   001626  6E25               	movwf	I2C_Write1ByteRegister@reg^0,c
  1098   001628  C054  F026         	movff	_Temp_A7_Val,I2C_Write1ByteRegister@data
  1099   00162C  0E08               	movlw	8
  1100   00162E  ECF1  F00E         	call	_I2C_Write1ByteRegister
  1101   001632                     
  1102                           ;Application.c: 55:         Keypad_Get_Value(&KeyPad_Value);
  1103   001632  0E59               	movlw	low _KeyPad_Value
  1104   001634  6E1C               	movwf	Keypad_Get_Value@Value^0,c
  1105   001636  EC96  F009         	call	_Keypad_Get_Value	;wreg free
  1106   00163A  EFBA  F00A         	goto	l5482
  1107   00163E  EF5B  F000         	goto	start
  1108   001642                     __end_of_main:
  1109                           	callstack 0
  1110                           
  1111 ;; *************** function _lcd_8bit_send_string_pos *****************
  1112 ;; Defined at:
  1113 ;;		line 350 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  lcd             1   47[COMRAM] PTR const struct .
  1116 ;;		 -> LCD_1(10), 
  1117 ;;  row             1   48[COMRAM] unsigned char 
  1118 ;;  column          1   49[COMRAM] unsigned char 
  1119 ;;  str             2   50[COMRAM] PTR unsigned char 
  1120 ;;		 -> STR_9(7), STR_8(11), STR_7(11), dummy(3), 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  ret             1   52[COMRAM] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      unsigned char 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1132 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;Total ram usage:        6 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 11
  1139 ;; This function calls:
  1140 ;;		_lcd_8bit_send_string
  1141 ;;		_lcd_8bit_set_cursor
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text1
  1148   00221E                     __ptext1:
  1149                           	callstack 0
  1150   00221E                     _lcd_8bit_send_string_pos:
  1151                           	callstack 19
  1152   00221E                     
  1153                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 352:     if((0) == lcd){
  1154   00221E  5030               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  1155   002220  A4D8               	btfss	status,2,c
  1156   002222  EF15  F011         	goto	u2911
  1157   002226  EF17  F011         	goto	u2910
  1158   00222A                     u2911:
  1159   00222A  EF1B  F011         	goto	l5324
  1160   00222E                     u2910:
  1161   00222E                     
  1162                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 353:         ret = 0;
  1163   00222E  0E00               	movlw	0
  1164   002230  6E35               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1165                           
  1166                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 354:     }
  1167   002232  EF2C  F011         	goto	l5328
  1168   002236                     l5324:
  1169   002236  C030  F02C         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  1170   00223A  C031  F02D         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1171   00223E  C032  F02E         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@coulmn
  1172   002242  EC10  F00D         	call	_lcd_8bit_set_cursor	;wreg free
  1173   002246                     
  1174                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 357:         ret = lcd_8bit_send_string(lcd, str);
  1175   002246  C030  F02C         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
  1176   00224A  C033  F02D         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
  1177   00224E  C034  F02E         	movff	lcd_8bit_send_string_pos@str+1,lcd_8bit_send_string@str+1
  1178   002252  EC52  F00D         	call	_lcd_8bit_send_string	;wreg free
  1179   002256  6E35               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1180   002258                     l5328:
  1181                           
  1182                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 359:     return ret;
  1183   002258  5035               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1184   00225A  0012               	return		;funcret
  1185   00225C                     __end_of_lcd_8bit_send_string_pos:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _lcd_8bit_set_cursor *****************
  1189 ;; Defined at:
  1190 ;;		line 513 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  lcd             1   43[COMRAM] PTR const struct .
  1193 ;;		 -> LCD_1(10), 
  1194 ;;  row             1   44[COMRAM] unsigned char 
  1195 ;;  coulmn          1   45[COMRAM] unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  ret             1   46[COMRAM] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      unsigned char 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1207 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;Total ram usage:        4 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 10
  1214 ;; This function calls:
  1215 ;;		_lcd_8bit_send_command
  1216 ;; This function is called by:
  1217 ;;		_lcd_8bit_send_string_pos
  1218 ;;		_lcd_8bit_send_char_data_pos
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text2
  1223   001A20                     __ptext2:
  1224                           	callstack 0
  1225   001A20                     _lcd_8bit_set_cursor:
  1226                           	callstack 19
  1227   001A20                     
  1228                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 514:     uint8_t ret = 1;
  1229   001A20  0E01               	movlw	1
  1230   001A22  6E2F               	movwf	lcd_8bit_set_cursor@ret^0,c
  1231   001A24                     
  1232                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 515:     coulmn--;
  1233   001A24  062E               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
  1234                           
  1235                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 516:     switch(row){
  1236   001A26  EF3D  F00D         	goto	l5220
  1237   001A2A                     l5212:
  1238   001A2A  C02C  F026         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1239   001A2E  502E               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1240   001A30  0F80               	addlw	128
  1241   001A32  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1242   001A34  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1243   001A38  6E2F               	movwf	lcd_8bit_set_cursor@ret^0,c
  1244   001A3A  EF50  F00D         	goto	l5222
  1245   001A3E                     l5214:
  1246   001A3E  C02C  F026         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1247   001A42  502E               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1248   001A44  0FC0               	addlw	192
  1249   001A46  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1250   001A48  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1251   001A4C  6E2F               	movwf	lcd_8bit_set_cursor@ret^0,c
  1252   001A4E  EF50  F00D         	goto	l5222
  1253   001A52                     l5216:
  1254   001A52  C02C  F026         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1255   001A56  502E               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1256   001A58  0F94               	addlw	148
  1257   001A5A  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1258   001A5C  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1259   001A60  6E2F               	movwf	lcd_8bit_set_cursor@ret^0,c
  1260   001A62  EF50  F00D         	goto	l5222
  1261   001A66                     l5218:
  1262   001A66  C02C  F026         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1263   001A6A  502E               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1264   001A6C  0FD4               	addlw	212
  1265   001A6E  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1266   001A70  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1267   001A74  6E2F               	movwf	lcd_8bit_set_cursor@ret^0,c
  1268   001A76  EF50  F00D         	goto	l5222
  1269   001A7A                     l5220:
  1270   001A7A  502D               	movf	lcd_8bit_set_cursor@row^0,w,c
  1271                           
  1272                           ; Switch size 1, requested type "simple"
  1273                           ; Number of cases is 4, Range of values is 1 to 4
  1274                           ; switch strategies available:
  1275                           ; Name         Instructions Cycles
  1276                           ; simple_byte           13     7 (average)
  1277                           ;	Chosen strategy is simple_byte
  1278   001A7C  0A01               	xorlw	1	; case 1
  1279   001A7E  B4D8               	btfsc	status,2,c
  1280   001A80  EF15  F00D         	goto	l5212
  1281   001A84  0A03               	xorlw	3	; case 2
  1282   001A86  B4D8               	btfsc	status,2,c
  1283   001A88  EF1F  F00D         	goto	l5214
  1284   001A8C  0A01               	xorlw	1	; case 3
  1285   001A8E  B4D8               	btfsc	status,2,c
  1286   001A90  EF29  F00D         	goto	l5216
  1287   001A94  0A07               	xorlw	7	; case 4
  1288   001A96  B4D8               	btfsc	status,2,c
  1289   001A98  EF33  F00D         	goto	l5218
  1290   001A9C  EF50  F00D         	goto	l5222
  1291   001AA0                     l5222:
  1292                           
  1293                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 523:     return ret;
  1294   001AA0  502F               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1295   001AA2  0012               	return		;funcret
  1296   001AA4                     __end_of_lcd_8bit_set_cursor:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function _lcd_8bit_send_string *****************
  1300 ;; Defined at:
  1301 ;;		line 327 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  lcd             1   43[COMRAM] PTR const struct .
  1304 ;;		 -> LCD_1(10), 
  1305 ;;  str             2   44[COMRAM] PTR unsigned char 
  1306 ;;		 -> STR_9(7), STR_8(11), STR_7(11), dummy(3), 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  ret             1   46[COMRAM] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      unsigned char 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:        4 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 10
  1325 ;; This function calls:
  1326 ;;		_lcd_8bit_send_char_data
  1327 ;; This function is called by:
  1328 ;;		_lcd_8bit_send_string_pos
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text3
  1333   001AA4                     __ptext3:
  1334                           	callstack 0
  1335   001AA4                     _lcd_8bit_send_string:
  1336                           	callstack 19
  1337   001AA4                     
  1338                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 328:     uint8_t ret = 1;
  1339   001AA4  0E01               	movlw	1
  1340   001AA6  6E2F               	movwf	lcd_8bit_send_string@ret^0,c
  1341                           
  1342                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 329:     if((0) == lcd){
  1343   001AA8  502C               	movf	lcd_8bit_send_string@lcd^0,w,c
  1344   001AAA  A4D8               	btfss	status,2,c
  1345   001AAC  EF5A  F00D         	goto	u2821
  1346   001AB0  EF5C  F00D         	goto	u2820
  1347   001AB4                     u2821:
  1348   001AB4  EF79  F00D         	goto	l5234
  1349   001AB8                     u2820:
  1350   001AB8                     
  1351                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 330:         ret = 0;
  1352   001AB8  0E00               	movlw	0
  1353   001ABA  6E2F               	movwf	lcd_8bit_send_string@ret^0,c
  1354                           
  1355                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 331:     }
  1356   001ABC  EF92  F00D         	goto	l5236
  1357   001AC0                     l5230:
  1358                           
  1359                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 334:             ret = lcd_8bit_send_char_data(lcd, *s
      +                          tr++);
  1360   001AC0  C02C  F026         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
  1361   001AC4  C02D  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1362   001AC8  C02E  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
  1363   001ACC  0E00               	movlw	low (__smallconst shr (0+16))
  1364   001ACE  6EF8               	movwf	tblptru,c
  1365   001AD0  0E0F               	movlw	(high __ramtop+-1)
  1366   001AD2  64F7               	cpfsgt	tblptrh,c
  1367   001AD4  D003               	bra	u2837
  1368   001AD6  0008               	tblrd		*
  1369   001AD8  50F5               	movf	tablat,w,c
  1370   001ADA  D005               	bra	u2830
  1371   001ADC                     u2837:
  1372   001ADC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1373   001AE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1374   001AE4  50EF               	movf	indf0,w,c
  1375   001AE6                     u2830:
  1376   001AE6  6E27               	movwf	lcd_8bit_send_char_data@data^0,c
  1377   001AE8  ECD2  F00D         	call	_lcd_8bit_send_char_data	;wreg free
  1378   001AEC  6E2F               	movwf	lcd_8bit_send_string@ret^0,c
  1379   001AEE  4A2D               	infsnz	lcd_8bit_send_string@str^0,f,c
  1380   001AF0  2A2E               	incf	(lcd_8bit_send_string@str+1)^0,f,c
  1381   001AF2                     l5234:
  1382                           
  1383                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 333:         while(*str){
  1384   001AF2  C02D  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1385   001AF6  C02E  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
  1386   001AFA  0E00               	movlw	low (__smallconst shr (0+16))
  1387   001AFC  6EF8               	movwf	tblptru,c
  1388   001AFE  0E0F               	movlw	(high __ramtop+-1)
  1389   001B00  64F7               	cpfsgt	tblptrh,c
  1390   001B02  D003               	bra	u2847
  1391   001B04  0008               	tblrd		*
  1392   001B06  50F5               	movf	tablat,w,c
  1393   001B08  D005               	bra	u2840
  1394   001B0A                     u2847:
  1395   001B0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1396   001B0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1397   001B12  50EF               	movf	indf0,w,c
  1398   001B14                     u2840:
  1399   001B14  0900               	iorlw	0
  1400   001B16  A4D8               	btfss	status,2,c
  1401   001B18  EF90  F00D         	goto	u2851
  1402   001B1C  EF92  F00D         	goto	u2850
  1403   001B20                     u2851:
  1404   001B20  EF60  F00D         	goto	l5230
  1405   001B24                     u2850:
  1406   001B24                     l5236:
  1407                           
  1408                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 337:     return ret;
  1409   001B24  502F               	movf	lcd_8bit_send_string@ret^0,w,c
  1410   001B26  0012               	return		;funcret
  1411   001B28                     __end_of_lcd_8bit_send_string:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _lcd_8bit_send_char_data *****************
  1415 ;; Defined at:
  1416 ;;		line 277 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  lcd             1   37[COMRAM] PTR const struct .
  1419 ;;		 -> LCD_1(10), 
  1420 ;;  data            1   38[COMRAM] unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  l_pin_counte    1   42[COMRAM] unsigned char 
  1423 ;;  ret             1   41[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      unsigned char 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;Total ram usage:        6 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 9
  1440 ;; This function calls:
  1441 ;;		_gpio_pin_write_logic
  1442 ;;		_lcd_8bit_send_enable_signal
  1443 ;; This function is called by:
  1444 ;;		_lcd_8bit_send_string
  1445 ;;		_lcd_8bit_send_char_data_pos
  1446 ;;		_lcd_8bit_send_custom_char
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text4
  1451   001BA4                     __ptext4:
  1452                           	callstack 0
  1453   001BA4                     _lcd_8bit_send_char_data:
  1454                           	callstack 19
  1455   001BA4                     
  1456                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 279:     uint8_t l_pin_counter = 0;
  1457   001BA4  0E00               	movlw	0
  1458   001BA6  6E2B               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1459                           
  1460                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 280:     if((0) == lcd){
  1461   001BA8  5026               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1462   001BAA  A4D8               	btfss	status,2,c
  1463   001BAC  EFDA  F00D         	goto	u2711
  1464   001BB0  EFDC  F00D         	goto	u2710
  1465   001BB4                     u2711:
  1466   001BB4  EFE0  F00D         	goto	l5122
  1467   001BB8                     u2710:
  1468   001BB8                     
  1469                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 281:         ret = 0;
  1470   001BB8  0E00               	movlw	0
  1471   001BBA  6E2A               	movwf	lcd_8bit_send_char_data@ret^0,c
  1472                           
  1473                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 282:     }
  1474   001BBC  EF0B  F00E         	goto	l5138
  1475   001BC0                     l5122:
  1476   001BC0  C026  F01C         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1477   001BC4  0E01               	movlw	1
  1478   001BC6  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1479   001BC8  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1480   001BCC                     
  1481                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 288:         for(l_pin_counter=0; l_pin_counter<8; ++l
      +                          _pin_counter){
  1482   001BCC  0E00               	movlw	0
  1483   001BCE  6E2B               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1484   001BD0                     l5130:
  1485   001BD0  5026               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1486   001BD2  242B               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
  1487   001BD4  0F02               	addlw	2
  1488   001BD6  6E1C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1489   001BD8  C02B  F028         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
  1490   001BDC  C027  F029         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1491   001BE0  2A28               	incf	??_lcd_8bit_send_char_data^0,f,c
  1492   001BE2  EFF5  F00D         	goto	u2724
  1493   001BE6                     u2725:
  1494   001BE6  90D8               	bcf	status,0,c
  1495   001BE8  3229               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1496   001BEA                     u2724:
  1497   001BEA  2E28               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1498   001BEC  EFF3  F00D         	goto	u2725
  1499   001BF0  5029               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1500   001BF2  0B01               	andlw	1
  1501   001BF4  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1502   001BF6  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1503   001BFA                     
  1504                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 290:         }
  1505   001BFA  2A2B               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
  1506   001BFC  0E07               	movlw	7
  1507   001BFE  642B               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
  1508   001C00  EF04  F00E         	goto	u2731
  1509   001C04  EF06  F00E         	goto	u2730
  1510   001C08                     u2731:
  1511   001C08  EFE8  F00D         	goto	l5130
  1512   001C0C                     u2730:
  1513   001C0C                     
  1514                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 292:         ret = lcd_8bit_send_enable_signal(lcd);
  1515   001C0C  C026  F024         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1516   001C10  EC17  F012         	call	_lcd_8bit_send_enable_signal	;wreg free
  1517   001C14  6E2A               	movwf	lcd_8bit_send_char_data@ret^0,c
  1518   001C16                     l5138:
  1519                           
  1520                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 294:     return ret;
  1521   001C16  502A               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1522   001C18  0012               	return		;funcret
  1523   001C1A                     __end_of_lcd_8bit_send_char_data:
  1524                           	callstack 0
  1525                           
  1526 ;; *************** function _lcd_8bit_intialize *****************
  1527 ;; Defined at:
  1528 ;;		line 212 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  lcd             1   43[COMRAM] PTR const struct .
  1531 ;;		 -> LCD_1(10), 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  ret             1   46[COMRAM] unsigned char 
  1534 ;;  l_data_pins_    1   45[COMRAM] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      unsigned char 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1544 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;Total ram usage:        4 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 10
  1551 ;; This function calls:
  1552 ;;		_gpio_pin_intialize
  1553 ;;		_lcd_8bit_send_command
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text5
  1560   001642                     __ptext5:
  1561                           	callstack 0
  1562   001642                     _lcd_8bit_intialize:
  1563                           	callstack 20
  1564   001642                     
  1565                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 214:     uint8_t l_data_pins_counter = 0;
  1566   001642  0E00               	movlw	0
  1567   001644  6E2E               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  1568                           
  1569                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 215:     if((0) == lcd){
  1570   001646  502C               	movf	lcd_8bit_intialize@lcd^0,w,c
  1571   001648  A4D8               	btfss	status,2,c
  1572   00164A  EF29  F00B         	goto	u2881
  1573   00164E  EF2B  F00B         	goto	u2880
  1574   001652                     u2881:
  1575   001652  EF2F  F00B         	goto	l5268
  1576   001656                     u2880:
  1577   001656                     
  1578                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 216:         ret = 0;
  1579   001656  0E00               	movlw	0
  1580   001658  6E2F               	movwf	lcd_8bit_intialize@ret^0,c
  1581                           
  1582                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 217:     }
  1583   00165A  EF96  F00B         	goto	l5304
  1584   00165E                     l5268:
  1585                           
  1586                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 219:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1587   00165E  C02C  F024         	movff	lcd_8bit_intialize@lcd,gpio_pin_intialize@_pin_config
  1588   001662  ECF1  F00F         	call	_gpio_pin_intialize	;wreg free
  1589   001666  6E2F               	movwf	lcd_8bit_intialize@ret^0,c
  1590                           
  1591                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 220:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1592   001668  282C               	incf	lcd_8bit_intialize@lcd^0,w,c
  1593   00166A  6E24               	movwf	gpio_pin_intialize@_pin_config^0,c
  1594   00166C  ECF1  F00F         	call	_gpio_pin_intialize	;wreg free
  1595   001670  6E2F               	movwf	lcd_8bit_intialize@ret^0,c
  1596   001672                     
  1597                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 221:         for(l_data_pins_counter=0; l_data_pins_co
      +                          unter<8; l_data_pins_counter++){
  1598   001672  0E00               	movlw	0
  1599   001674  6E2E               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  1600   001676                     l5276:
  1601   001676  502C               	movf	lcd_8bit_intialize@lcd^0,w,c
  1602   001678  242E               	addwf	lcd_8bit_intialize@l_data_pins_counter^0,w,c
  1603   00167A  0F02               	addlw	2
  1604   00167C  6E24               	movwf	gpio_pin_intialize@_pin_config^0,c
  1605   00167E  ECF1  F00F         	call	_gpio_pin_intialize	;wreg free
  1606   001682                     
  1607                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 223:         }
  1608   001682  2A2E               	incf	lcd_8bit_intialize@l_data_pins_counter^0,f,c
  1609   001684  0E07               	movlw	7
  1610   001686  642E               	cpfsgt	lcd_8bit_intialize@l_data_pins_counter^0,c
  1611   001688  EF48  F00B         	goto	u2891
  1612   00168C  EF4A  F00B         	goto	u2890
  1613   001690                     u2891:
  1614   001690  EF3B  F00B         	goto	l5276
  1615   001694                     u2890:
  1616   001694                     
  1617                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 224:         _delay((unsigned long)((20)*(16000000/400
      +                          0.0)));
  1618   001694  0E68               	movlw	104
  1619   001696  6E2D               	movwf	??_lcd_8bit_intialize^0,c
  1620   001698  0EE4               	movlw	228
  1621   00169A                     u3047:
  1622   00169A  2EE8               	decfsz	wreg,f,c
  1623   00169C  D7FE               	bra	u3047
  1624   00169E  2E2D               	decfsz	??_lcd_8bit_intialize^0,f,c
  1625   0016A0  D7FC               	bra	u3047
  1626   0016A2  F000 F000          	nop2	
  1627   0016A6  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1628   0016AA  0E38               	movlw	56
  1629   0016AC  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1630   0016AE  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1631   0016B2                     
  1632                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 226:         _delay((unsigned long)((5)*(16000000/4000
      +                          .0)));
  1633   0016B2  0E1A               	movlw	26
  1634   0016B4  6E2D               	movwf	??_lcd_8bit_intialize^0,c
  1635   0016B6  0EF8               	movlw	248
  1636   0016B8                     u3057:
  1637   0016B8  2EE8               	decfsz	wreg,f,c
  1638   0016BA  D7FE               	bra	u3057
  1639   0016BC  2E2D               	decfsz	??_lcd_8bit_intialize^0,f,c
  1640   0016BE  D7FC               	bra	u3057
  1641   0016C0  F000 F000          	nop2	
  1642   0016C4  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1643   0016C8  0E38               	movlw	56
  1644   0016CA  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1645   0016CC  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1646   0016D0                     
  1647                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 228:         _delay((unsigned long)((150)*(16000000/40
      +                          00000.0)));
  1648   0016D0  0EC8               	movlw	200
  1649   0016D2                     u3067:
  1650   0016D2  2EE8               	decfsz	wreg,f,c
  1651   0016D4  D7FE               	bra	u3067
  1652   0016D6  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1653   0016DA  0E38               	movlw	56
  1654   0016DC  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1655   0016DE  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1656   0016E2  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1657   0016E6  0E01               	movlw	1
  1658   0016E8  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1659   0016EA  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1660   0016EE  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1661   0016F2  0E02               	movlw	2
  1662   0016F4  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1663   0016F6  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1664   0016FA  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1665   0016FE  0E06               	movlw	6
  1666   001700  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1667   001702  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1668   001706  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1669   00170A  0E0C               	movlw	12
  1670   00170C  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1671   00170E  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1672   001712  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1673   001716  0E38               	movlw	56
  1674   001718  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1675   00171A  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1676   00171E                     
  1677                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 236:         ret = lcd_8bit_send_command(lcd, 0x80);
  1678   00171E  C02C  F026         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1679   001722  0E80               	movlw	128
  1680   001724  6E27               	movwf	lcd_8bit_send_command@command^0,c
  1681   001726  EC0D  F00E         	call	_lcd_8bit_send_command	;wreg free
  1682   00172A  6E2F               	movwf	lcd_8bit_intialize@ret^0,c
  1683   00172C                     l5304:
  1684                           
  1685                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 238:     return ret;
  1686   00172C  502F               	movf	lcd_8bit_intialize@ret^0,w,c
  1687   00172E  0012               	return		;funcret
  1688   001730                     __end_of_lcd_8bit_intialize:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _lcd_8bit_send_command *****************
  1692 ;; Defined at:
  1693 ;;		line 249 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  lcd             1   37[COMRAM] PTR const struct .
  1696 ;;		 -> LCD_1(10), 
  1697 ;;  command         1   38[COMRAM] unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  l_pin_counte    1   42[COMRAM] unsigned char 
  1700 ;;  ret             1   41[COMRAM] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      unsigned char 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        6 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 9
  1717 ;; This function calls:
  1718 ;;		_gpio_pin_write_logic
  1719 ;;		_lcd_8bit_send_enable_signal
  1720 ;; This function is called by:
  1721 ;;		_lcd_8bit_intialize
  1722 ;;		_lcd_8bit_set_cursor
  1723 ;;		_main
  1724 ;;		_lcd_8bit_send_custom_char
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text6
  1729   001C1A                     __ptext6:
  1730                           	callstack 0
  1731   001C1A                     _lcd_8bit_send_command:
  1732                           	callstack 19
  1733   001C1A                     
  1734                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 251:     uint8_t l_pin_counter = 0;
  1735   001C1A  0E00               	movlw	0
  1736   001C1C  6E2B               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1737                           
  1738                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 252:     if((0) == lcd){
  1739   001C1E  5026               	movf	lcd_8bit_send_command@lcd^0,w,c
  1740   001C20  A4D8               	btfss	status,2,c
  1741   001C22  EF15  F00E         	goto	u2681
  1742   001C26  EF17  F00E         	goto	u2680
  1743   001C2A                     u2681:
  1744   001C2A  EF1B  F00E         	goto	l5098
  1745   001C2E                     u2680:
  1746   001C2E                     
  1747                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 253:         ret = 0;
  1748   001C2E  0E00               	movlw	0
  1749   001C30  6E2A               	movwf	lcd_8bit_send_command@ret^0,c
  1750                           
  1751                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 254:     }
  1752   001C32  EF46  F00E         	goto	l5114
  1753   001C36                     l5098:
  1754   001C36  C026  F01C         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1755   001C3A  0E00               	movlw	0
  1756   001C3C  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1757   001C3E  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1758   001C42                     
  1759                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 260:         for(l_pin_counter=0; l_pin_counter<8; ++l
      +                          _pin_counter){
  1760   001C42  0E00               	movlw	0
  1761   001C44  6E2B               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1762   001C46                     l5106:
  1763   001C46  5026               	movf	lcd_8bit_send_command@lcd^0,w,c
  1764   001C48  242B               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1765   001C4A  0F02               	addlw	2
  1766   001C4C  6E1C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1767   001C4E  C02B  F028         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1768   001C52  C027  F029         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1769   001C56  2A28               	incf	??_lcd_8bit_send_command^0,f,c
  1770   001C58  EF30  F00E         	goto	u2694
  1771   001C5C                     u2695:
  1772   001C5C  90D8               	bcf	status,0,c
  1773   001C5E  3229               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1774   001C60                     u2694:
  1775   001C60  2E28               	decfsz	??_lcd_8bit_send_command^0,f,c
  1776   001C62  EF2E  F00E         	goto	u2695
  1777   001C66  5029               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1778   001C68  0B01               	andlw	1
  1779   001C6A  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1780   001C6C  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1781   001C70                     
  1782                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 262:         }
  1783   001C70  2A2B               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1784   001C72  0E07               	movlw	7
  1785   001C74  642B               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1786   001C76  EF3F  F00E         	goto	u2701
  1787   001C7A  EF41  F00E         	goto	u2700
  1788   001C7E                     u2701:
  1789   001C7E  EF23  F00E         	goto	l5106
  1790   001C82                     u2700:
  1791   001C82                     
  1792                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 264:         ret = lcd_8bit_send_enable_signal(lcd);
  1793   001C82  C026  F024         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1794   001C86  EC17  F012         	call	_lcd_8bit_send_enable_signal	;wreg free
  1795   001C8A  6E2A               	movwf	lcd_8bit_send_command@ret^0,c
  1796   001C8C                     l5114:
  1797                           
  1798                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 266:     return ret;
  1799   001C8C  502A               	movf	lcd_8bit_send_command@ret^0,w,c
  1800   001C8E  0012               	return		;funcret
  1801   001C90                     __end_of_lcd_8bit_send_command:
  1802                           	callstack 0
  1803                           
  1804 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1805 ;; Defined at:
  1806 ;;		line 496 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  lcd             1   35[COMRAM] PTR const struct .
  1809 ;;		 -> LCD_1(10), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  ret             1   36[COMRAM] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      unsigned char 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1821 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;Total ram usage:        2 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; Hardware stack levels required when called: 8
  1828 ;; This function calls:
  1829 ;;		_gpio_pin_write_logic
  1830 ;; This function is called by:
  1831 ;;		_lcd_8bit_send_command
  1832 ;;		_lcd_8bit_send_char_data
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text7
  1837   00242E                     __ptext7:
  1838                           	callstack 0
  1839   00242E                     _lcd_8bit_send_enable_signal:
  1840                           	callstack 19
  1841   00242E  2824               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1842   002430  6E1C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1843   002432  0E01               	movlw	1
  1844   002434  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1845   002436  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1846   00243A                     
  1847                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 499:     _delay((unsigned long)((5)*(16000000/4000000.
      +                          0)));
  1848   00243A  0E06               	movlw	6
  1849   00243C                     u3077:
  1850   00243C  2EE8               	decfsz	wreg,f,c
  1851   00243E  D7FE               	bra	u3077
  1852   002440  F000 F000          	nop2	
  1853   002444                     
  1854                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 500:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  1855   002444  2824               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1856   002446  6E1C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1857   002448  0E00               	movlw	0
  1858   00244A  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1859   00244C  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1860   002450  6E25               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1861   002452                     
  1862                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 501:     return ret;
  1863   002452  5025               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1864   002454  0012               	return		;funcret
  1865   002456                     __end_of_lcd_8bit_send_enable_signal:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _gpio_pin_intialize *****************
  1869 ;; Defined at:
  1870 ;;		line 144 in file "MCAL/GPIO/hal_gpio.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  _pin_config     1   35[COMRAM] PTR const struct .
  1873 ;;		 -> LCD_1$lcd_data(8), LCD_1(10), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  ret             1   37[COMRAM] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      unsigned char 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;Total ram usage:        3 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 8
  1892 ;; This function calls:
  1893 ;;		_gpio_pin_direction_intialize
  1894 ;;		_gpio_pin_write_logic
  1895 ;; This function is called by:
  1896 ;;		_lcd_8bit_intialize
  1897 ;;		_lcd_4bit_intialize
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text8
  1902   001FE2                     __ptext8:
  1903                           	callstack 0
  1904   001FE2                     _gpio_pin_intialize:
  1905                           	callstack 21
  1906   001FE2                     
  1907                           ;MCAL/GPIO/hal_gpio.c: 146:     if((0) == _pin_config || _pin_config->pin > 8 -1){
  1908   001FE2  5024               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1909   001FE4  B4D8               	btfsc	status,2,c
  1910   001FE6  EFF7  F00F         	goto	u2791
  1911   001FEA  EFF9  F00F         	goto	u2790
  1912   001FEE                     u2791:
  1913   001FEE  EF09  F010         	goto	l5164
  1914   001FF2                     u2790:
  1915   001FF2  5024               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1916   001FF4  6ED9               	movwf	fsr2l,c
  1917   001FF6  6ADA               	clrf	fsr2h,c
  1918   001FF8  30DF               	rrcf	223,w,c
  1919   001FFA  32E8               	rrcf	wreg,f,c
  1920   001FFC  32E8               	rrcf	wreg,f,c
  1921   001FFE  0B07               	andlw	7
  1922   002000  6E25               	movwf	??_gpio_pin_intialize^0,c
  1923   002002  0E07               	movlw	7
  1924   002004  6425               	cpfsgt	??_gpio_pin_intialize^0,c
  1925   002006  EF07  F010         	goto	u2801
  1926   00200A  EF09  F010         	goto	u2800
  1927   00200E                     u2801:
  1928   00200E  EF0D  F010         	goto	l5166
  1929   002012                     u2800:
  1930   002012                     l5164:
  1931                           
  1932                           ;MCAL/GPIO/hal_gpio.c: 147:         ret = 0;
  1933   002012  0E00               	movlw	0
  1934   002014  6E26               	movwf	gpio_pin_intialize@ret^0,c
  1935                           
  1936                           ;MCAL/GPIO/hal_gpio.c: 148:     }
  1937   002016  EF1E  F010         	goto	l5168
  1938   00201A                     l5166:
  1939                           
  1940                           ;MCAL/GPIO/hal_gpio.c: 150:         ret = gpio_pin_direction_intialize(_pin_config);
  1941   00201A  C024  F01C         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1942   00201E  EC0D  F009         	call	_gpio_pin_direction_intialize	;wreg free
  1943   002022  6E26               	movwf	gpio_pin_intialize@ret^0,c
  1944                           
  1945                           ;MCAL/GPIO/hal_gpio.c: 151:         ret = gpio_pin_write_logic(_pin_config, _pin_config-
      +                          >logic);
  1946   002024  C024  F01C         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1947   002028  5024               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1948   00202A  6ED9               	movwf	fsr2l,c
  1949   00202C  6ADA               	clrf	fsr2h,c
  1950   00202E  0E00               	movlw	0
  1951   002030  BEDF               	btfsc	indf2,7,c
  1952   002032  0E01               	movlw	1
  1953   002034  6E1D               	movwf	gpio_pin_write_logic@logic^0,c
  1954   002036  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1955   00203A  6E26               	movwf	gpio_pin_intialize@ret^0,c
  1956   00203C                     l5168:
  1957                           
  1958                           ;MCAL/GPIO/hal_gpio.c: 153:     return ret;
  1959   00203C  5026               	movf	gpio_pin_intialize@ret^0,w,c
  1960   00203E  0012               	return		;funcret
  1961   002040                     __end_of_gpio_pin_intialize:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _gpio_pin_write_logic *****************
  1965 ;; Defined at:
  1966 ;;		line 75 in file "MCAL/GPIO/hal_gpio.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  _pin_config     1   27[COMRAM] PTR const struct .
  1969 ;;		 -> LCD_1$lcd_data(8), LCD_1(10), 
  1970 ;;  logic           1   28[COMRAM] enum E2716
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  ret             1   34[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      unsigned char 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:        8 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 7
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_lcd_8bit_send_command
  1993 ;;		_lcd_8bit_send_char_data
  1994 ;;		_lcd_8bit_send_enable_signal
  1995 ;;		_gpio_pin_intialize
  1996 ;;		_lcd_4bit_send_command
  1997 ;;		_lcd_4bit_send_char_data
  1998 ;;		_lcd_send_4bits
  1999 ;;		_lcd_4bit_send_enable_signal
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text9
  2004   00143E                     __ptext9:
  2005                           	callstack 0
  2006   00143E                     _gpio_pin_write_logic:
  2007                           	callstack 19
  2008   00143E                     
  2009                           ;MCAL/GPIO/hal_gpio.c: 76:     uint8_t ret = 1;
  2010   00143E  0E01               	movlw	1
  2011   001440  6E23               	movwf	gpio_pin_write_logic@ret^0,c
  2012                           
  2013                           ;MCAL/GPIO/hal_gpio.c: 77:     if((0) == _pin_config || _pin_config->pin > 8 -1){
  2014   001442  501C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2015   001444  B4D8               	btfsc	status,2,c
  2016   001446  EF27  F00A         	goto	u2641
  2017   00144A  EF29  F00A         	goto	u2640
  2018   00144E                     u2641:
  2019   00144E  EF39  F00A         	goto	l5064
  2020   001452                     u2640:
  2021   001452  501C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2022   001454  6ED9               	movwf	fsr2l,c
  2023   001456  6ADA               	clrf	fsr2h,c
  2024   001458  30DF               	rrcf	223,w,c
  2025   00145A  32E8               	rrcf	wreg,f,c
  2026   00145C  32E8               	rrcf	wreg,f,c
  2027   00145E  0B07               	andlw	7
  2028   001460  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  2029   001462  0E07               	movlw	7
  2030   001464  641E               	cpfsgt	??_gpio_pin_write_logic^0,c
  2031   001466  EF37  F00A         	goto	u2651
  2032   00146A  EF39  F00A         	goto	u2650
  2033   00146E                     u2651:
  2034   00146E  EF90  F00A         	goto	l5072
  2035   001472                     u2650:
  2036   001472                     l5064:
  2037                           
  2038                           ;MCAL/GPIO/hal_gpio.c: 78:         ret = 0;
  2039   001472  0E00               	movlw	0
  2040   001474  6E23               	movwf	gpio_pin_write_logic@ret^0,c
  2041                           
  2042                           ;MCAL/GPIO/hal_gpio.c: 79:     }
  2043   001476  EFA5  F00A         	goto	l5074
  2044   00147A                     l5066:
  2045                           
  2046                           ;MCAL/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~((uint
      +                          8_t)1 << _pin_config->pin));
  2047   00147A  501C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2048   00147C  6ED9               	movwf	fsr2l,c
  2049   00147E  6ADA               	clrf	fsr2h,c
  2050   001480  30DF               	rrcf	223,w,c
  2051   001482  32E8               	rrcf	wreg,f,c
  2052   001484  32E8               	rrcf	wreg,f,c
  2053   001486  0B07               	andlw	7
  2054   001488  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  2055   00148A  0E01               	movlw	1
  2056   00148C  6E1F               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2057   00148E  2A1E               	incf	??_gpio_pin_write_logic^0,f,c
  2058   001490  EF4C  F00A         	goto	u2664
  2059   001494                     u2665:
  2060   001494  90D8               	bcf	status,0,c
  2061   001496  361F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2062   001498                     u2664:
  2063   001498  2E1E               	decfsz	??_gpio_pin_write_logic^0,f,c
  2064   00149A  EF4A  F00A         	goto	u2665
  2065   00149E  501F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2066   0014A0  0AFF               	xorlw	255
  2067   0014A2  6E20               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2068   0014A4  501C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2069   0014A6  6ED9               	movwf	fsr2l,c
  2070   0014A8  6ADA               	clrf	fsr2h,c
  2071   0014AA  50DF               	movf	223,w,c
  2072   0014AC  0B07               	andlw	7
  2073   0014AE  0D02               	mullw	2
  2074   0014B0  50F3               	movf	243,w,c
  2075   0014B2  0FA6               	addlw	low _lat_registers
  2076   0014B4  6ED9               	movwf	fsr2l,c
  2077   0014B6  6ADA               	clrf	fsr2h,c
  2078   0014B8  CFDE F021          	movff	postinc2,??_gpio_pin_write_logic+3
  2079   0014BC  CFDD F022          	movff	postdec2,??_gpio_pin_write_logic+4
  2080   0014C0  C021  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2081   0014C4  C022  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2082   0014C8  5020               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2083   0014CA  16DF               	andwf	indf2,f,c
  2084                           
  2085                           ;MCAL/GPIO/hal_gpio.c: 84:                 break;
  2086   0014CC  EFA5  F00A         	goto	l5074
  2087   0014D0                     l5068:
  2088                           
  2089                           ;MCAL/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= ((uint8
      +                          _t)1 << _pin_config->pin));
  2090   0014D0  501C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2091   0014D2  6ED9               	movwf	fsr2l,c
  2092   0014D4  6ADA               	clrf	fsr2h,c
  2093   0014D6  30DF               	rrcf	223,w,c
  2094   0014D8  32E8               	rrcf	wreg,f,c
  2095   0014DA  32E8               	rrcf	wreg,f,c
  2096   0014DC  0B07               	andlw	7
  2097   0014DE  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  2098   0014E0  0E01               	movlw	1
  2099   0014E2  6E1F               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2100   0014E4  2A1E               	incf	??_gpio_pin_write_logic^0,f,c
  2101   0014E6  EF77  F00A         	goto	u2674
  2102   0014EA                     u2675:
  2103   0014EA  90D8               	bcf	status,0,c
  2104   0014EC  361F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2105   0014EE                     u2674:
  2106   0014EE  2E1E               	decfsz	??_gpio_pin_write_logic^0,f,c
  2107   0014F0  EF75  F00A         	goto	u2675
  2108   0014F4  501C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2109   0014F6  6ED9               	movwf	fsr2l,c
  2110   0014F8  6ADA               	clrf	fsr2h,c
  2111   0014FA  50DF               	movf	223,w,c
  2112   0014FC  0B07               	andlw	7
  2113   0014FE  0D02               	mullw	2
  2114   001500  50F3               	movf	243,w,c
  2115   001502  0FA6               	addlw	low _lat_registers
  2116   001504  6ED9               	movwf	fsr2l,c
  2117   001506  6ADA               	clrf	fsr2h,c
  2118   001508  CFDE F020          	movff	postinc2,??_gpio_pin_write_logic+2
  2119   00150C  CFDD F021          	movff	postdec2,??_gpio_pin_write_logic+3
  2120   001510  C020  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2121   001514  C021  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2122   001518  501F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2123   00151A  12DF               	iorwf	indf2,f,c
  2124                           
  2125                           ;MCAL/GPIO/hal_gpio.c: 87:                 break;
  2126   00151C  EFA5  F00A         	goto	l5074
  2127   001520                     l5072:
  2128   001520  501D               	movf	gpio_pin_write_logic@logic^0,w,c
  2129   001522  6E1E               	movwf	??_gpio_pin_write_logic^0,c
  2130   001524  6A1F               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2131                           
  2132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 1, Range of values is 0 to 0
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte            4     3 (average)
  2138                           ;	Chosen strategy is simple_byte
  2139   001526  501F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2140   001528  0A00               	xorlw	0	; case 0
  2141   00152A  B4D8               	btfsc	status,2,c
  2142   00152C  EF9A  F00A         	goto	l5600
  2143   001530  EF39  F00A         	goto	l5064
  2144   001534                     l5600:
  2145                           
  2146                           ; Switch size 1, requested type "simple"
  2147                           ; Number of cases is 2, Range of values is 0 to 1
  2148                           ; switch strategies available:
  2149                           ; Name         Instructions Cycles
  2150                           ; simple_byte            7     4 (average)
  2151                           ;	Chosen strategy is simple_byte
  2152   001534  501E               	movf	??_gpio_pin_write_logic^0,w,c
  2153   001536  0A00               	xorlw	0	; case 0
  2154   001538  B4D8               	btfsc	status,2,c
  2155   00153A  EF3D  F00A         	goto	l5066
  2156   00153E  0A01               	xorlw	1	; case 1
  2157   001540  B4D8               	btfsc	status,2,c
  2158   001542  EF68  F00A         	goto	l5068
  2159   001546  EF39  F00A         	goto	l5064
  2160   00154A                     l5074:
  2161                           
  2162                           ;MCAL/GPIO/hal_gpio.c: 91:     return ret;
  2163   00154A  5023               	movf	gpio_pin_write_logic@ret^0,w,c
  2164   00154C  0012               	return		;funcret
  2165   00154E                     __end_of_gpio_pin_write_logic:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _gpio_pin_direction_intialize *****************
  2169 ;; Defined at:
  2170 ;;		line 25 in file "MCAL/GPIO/hal_gpio.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  _pin_config     1   27[COMRAM] PTR const struct .
  2173 ;;		 -> LCD_1$lcd_data(8), LCD_1(10), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  ret             1   33[COMRAM] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      unsigned char 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2185 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;Total ram usage:        7 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 7
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_gpio_pin_intialize
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text10
  2200   00121A                     __ptext10:
  2201                           	callstack 0
  2202   00121A                     _gpio_pin_direction_intialize:
  2203                           	callstack 21
  2204   00121A                     
  2205                           ;MCAL/GPIO/hal_gpio.c: 26:     uint8_t ret = 1;
  2206   00121A  0E01               	movlw	1
  2207   00121C  6E22               	movwf	gpio_pin_direction_intialize@ret^0,c
  2208                           
  2209                           ;MCAL/GPIO/hal_gpio.c: 27:     if((0) == _pin_config || _pin_config->pin > 8 -1){
  2210   00121E  501C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2211   001220  B4D8               	btfsc	status,2,c
  2212   001222  EF15  F009         	goto	u2741
  2213   001226  EF17  F009         	goto	u2740
  2214   00122A                     u2741:
  2215   00122A  EF27  F009         	goto	l5146
  2216   00122E                     u2740:
  2217   00122E  501C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2218   001230  6ED9               	movwf	fsr2l,c
  2219   001232  6ADA               	clrf	fsr2h,c
  2220   001234  30DF               	rrcf	223,w,c
  2221   001236  32E8               	rrcf	wreg,f,c
  2222   001238  32E8               	rrcf	wreg,f,c
  2223   00123A  0B07               	andlw	7
  2224   00123C  6E1D               	movwf	??_gpio_pin_direction_intialize^0,c
  2225   00123E  0E07               	movlw	7
  2226   001240  641D               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2227   001242  EF25  F009         	goto	u2751
  2228   001246  EF27  F009         	goto	u2750
  2229   00124A                     u2751:
  2230   00124A  EF7E  F009         	goto	l5154
  2231   00124E                     u2750:
  2232   00124E                     l5146:
  2233                           
  2234                           ;MCAL/GPIO/hal_gpio.c: 28:         ret = 0;
  2235   00124E  0E00               	movlw	0
  2236   001250  6E22               	movwf	gpio_pin_direction_intialize@ret^0,c
  2237                           
  2238                           ;MCAL/GPIO/hal_gpio.c: 29:     }
  2239   001252  EF94  F009         	goto	l5156
  2240   001256                     l5148:
  2241                           
  2242                           ;MCAL/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((uin
      +                          t8_t)1 << _pin_config->pin));
  2243   001256  501C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2244   001258  6ED9               	movwf	fsr2l,c
  2245   00125A  6ADA               	clrf	fsr2h,c
  2246   00125C  30DF               	rrcf	223,w,c
  2247   00125E  32E8               	rrcf	wreg,f,c
  2248   001260  32E8               	rrcf	wreg,f,c
  2249   001262  0B07               	andlw	7
  2250   001264  6E1D               	movwf	??_gpio_pin_direction_intialize^0,c
  2251   001266  0E01               	movlw	1
  2252   001268  6E1E               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2253   00126A  2A1D               	incf	??_gpio_pin_direction_intialize^0,f,c
  2254   00126C  EF3A  F009         	goto	u2764
  2255   001270                     u2765:
  2256   001270  90D8               	bcf	status,0,c
  2257   001272  361E               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2258   001274                     u2764:
  2259   001274  2E1D               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2260   001276  EF38  F009         	goto	u2765
  2261   00127A  501E               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2262   00127C  0AFF               	xorlw	255
  2263   00127E  6E1F               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2264   001280  501C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2265   001282  6ED9               	movwf	fsr2l,c
  2266   001284  6ADA               	clrf	fsr2h,c
  2267   001286  50DF               	movf	223,w,c
  2268   001288  0B07               	andlw	7
  2269   00128A  0D02               	mullw	2
  2270   00128C  50F3               	movf	243,w,c
  2271   00128E  0FB0               	addlw	low _tris_registers
  2272   001290  6ED9               	movwf	fsr2l,c
  2273   001292  6ADA               	clrf	fsr2h,c
  2274   001294  CFDE F020          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2275   001298  CFDD F021          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2276   00129C  C020  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2277   0012A0  C021  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2278   0012A4  501F               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2279   0012A6  16DF               	andwf	indf2,f,c
  2280                           
  2281                           ;MCAL/GPIO/hal_gpio.c: 34:                 break;
  2282   0012A8  EF94  F009         	goto	l5156
  2283   0012AC                     l5150:
  2284                           
  2285                           ;MCAL/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((uint
      +                          8_t)1 << _pin_config->pin));
  2286   0012AC  501C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2287   0012AE  6ED9               	movwf	fsr2l,c
  2288   0012B0  6ADA               	clrf	fsr2h,c
  2289   0012B2  30DF               	rrcf	223,w,c
  2290   0012B4  32E8               	rrcf	wreg,f,c
  2291   0012B6  32E8               	rrcf	wreg,f,c
  2292   0012B8  0B07               	andlw	7
  2293   0012BA  6E1D               	movwf	??_gpio_pin_direction_intialize^0,c
  2294   0012BC  0E01               	movlw	1
  2295   0012BE  6E1E               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2296   0012C0  2A1D               	incf	??_gpio_pin_direction_intialize^0,f,c
  2297   0012C2  EF65  F009         	goto	u2774
  2298   0012C6                     u2775:
  2299   0012C6  90D8               	bcf	status,0,c
  2300   0012C8  361E               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2301   0012CA                     u2774:
  2302   0012CA  2E1D               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2303   0012CC  EF63  F009         	goto	u2775
  2304   0012D0  501C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2305   0012D2  6ED9               	movwf	fsr2l,c
  2306   0012D4  6ADA               	clrf	fsr2h,c
  2307   0012D6  50DF               	movf	223,w,c
  2308   0012D8  0B07               	andlw	7
  2309   0012DA  0D02               	mullw	2
  2310   0012DC  50F3               	movf	243,w,c
  2311   0012DE  0FB0               	addlw	low _tris_registers
  2312   0012E0  6ED9               	movwf	fsr2l,c
  2313   0012E2  6ADA               	clrf	fsr2h,c
  2314   0012E4  CFDE F01F          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2315   0012E8  CFDD F020          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2316   0012EC  C01F  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2317   0012F0  C020  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2318   0012F4  501E               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2319   0012F6  12DF               	iorwf	indf2,f,c
  2320                           
  2321                           ;MCAL/GPIO/hal_gpio.c: 37:                 break;
  2322   0012F8  EF94  F009         	goto	l5156
  2323   0012FC                     l5154:
  2324   0012FC  501C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2325   0012FE  6ED9               	movwf	fsr2l,c
  2326   001300  6ADA               	clrf	fsr2h,c
  2327   001302  BCDF               	btfsc	indf2,6,c
  2328   001304  EF86  F009         	goto	u2781
  2329   001308  EF89  F009         	goto	u2780
  2330   00130C                     u2781:
  2331   00130C  0E01               	movlw	1
  2332   00130E  EF8A  F009         	goto	u2786
  2333   001312                     u2780:
  2334   001312  0E00               	movlw	0
  2335   001314                     u2786:
  2336                           
  2337                           ; Switch size 1, requested type "simple"
  2338                           ; Number of cases is 2, Range of values is 0 to 1
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte            7     4 (average)
  2342                           ;	Chosen strategy is simple_byte
  2343   001314  0A00               	xorlw	0	; case 0
  2344   001316  B4D8               	btfsc	status,2,c
  2345   001318  EF2B  F009         	goto	l5148
  2346   00131C  0A01               	xorlw	1	; case 1
  2347   00131E  B4D8               	btfsc	status,2,c
  2348   001320  EF56  F009         	goto	l5150
  2349   001324  EF27  F009         	goto	l5146
  2350   001328                     l5156:
  2351                           
  2352                           ;MCAL/GPIO/hal_gpio.c: 41:     return ret;
  2353   001328  5022               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2354   00132A  0012               	return		;funcret
  2355   00132C                     __end_of_gpio_pin_direction_intialize:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _keyPad_Init *****************
  2359 ;; Defined at:
  2360 ;;		line 16 in file "AECUL_Modules/Keypad/KeyPad.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 7
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text11
  2389   0025EC                     __ptext11:
  2390                           	callstack 0
  2391   0025EC                     _keyPad_Init:
  2392                           	callstack 23
  2393   0025EC                     
  2394                           ;AECUL_Modules/Keypad/KeyPad.c: 17:     TRISD=0XF0;
  2395   0025EC  0EF0               	movlw	240
  2396   0025EE  6E95               	movwf	149,c	;volatile
  2397                           
  2398                           ;AECUL_Modules/Keypad/KeyPad.c: 18:     LATD=0X00;
  2399   0025F0  0E00               	movlw	0
  2400   0025F2  6E8C               	movwf	140,c	;volatile
  2401   0025F4  0012               	return		;funcret
  2402   0025F6                     __end_of_keyPad_Init:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _convert_uint8_to_string *****************
  2406 ;; Defined at:
  2407 ;;		line 398 in file "AECUL_Modules/LCD/ecu_chr_lcd.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  value           1    wreg     unsigned char 
  2410 ;;  str             1   52[COMRAM] PTR unsigned char 
  2411 ;;		 -> dummy(3), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  value           1   53[COMRAM] unsigned char 
  2414 ;;  ret             1   54[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        3 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 9
  2431 ;; This function calls:
  2432 ;;		_memset
  2433 ;;		_sprintf
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text12
  2440   002150                     __ptext12:
  2441                           	callstack 0
  2442   002150                     _convert_uint8_to_string:
  2443                           	callstack 21
  2444                           
  2445                           ;incstack = 0
  2446                           ;convert_uint8_to_string@value stored from wreg
  2447   002150  6E36               	movwf	convert_uint8_to_string@value^0,c
  2448   002152                     
  2449                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 399:     uint8_t ret = 1;
  2450   002152  0E01               	movlw	1
  2451   002154  6E37               	movwf	convert_uint8_to_string@ret^0,c
  2452   002156                     
  2453                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 400:     if((0) == str){
  2454   002156  5035               	movf	convert_uint8_to_string@str^0,w,c
  2455   002158  A4D8               	btfss	status,2,c
  2456   00215A  EFB1  F010         	goto	u2111
  2457   00215E  EFB3  F010         	goto	u2110
  2458   002162                     u2111:
  2459   002162  EFB7  F010         	goto	l4464
  2460   002166                     u2110:
  2461   002166                     
  2462                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 401:         ret = 0;
  2463   002166  0E00               	movlw	0
  2464   002168  6E37               	movwf	convert_uint8_to_string@ret^0,c
  2465                           
  2466                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 402:     }
  2467   00216A  EFCC  F010         	goto	l4468
  2468   00216E                     l4464:
  2469                           
  2470                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 404:         memset((char *)str, '\0', 4);
  2471   00216E  C035  F01C         	movff	convert_uint8_to_string@str,memset@p1
  2472   002172  0E00               	movlw	0
  2473   002174  6E1E               	movwf	(memset@c+1)^0,c
  2474   002176  0E00               	movlw	0
  2475   002178  6E1D               	movwf	memset@c^0,c
  2476   00217A  0E00               	movlw	0
  2477   00217C  6E20               	movwf	(memset@n+1)^0,c
  2478   00217E  0E04               	movlw	4
  2479   002180  6E1F               	movwf	memset@n^0,c
  2480   002182  EC65  F011         	call	_memset	;wreg free
  2481   002186                     
  2482                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 405:         sprintf(str, "%i", value);
  2483   002186  C035  F028         	movff	convert_uint8_to_string@str,sprintf@sp
  2484   00218A  0E80               	movlw	low STR_1
  2485   00218C  6E29               	movwf	sprintf@f^0,c
  2486   00218E  C036  F02A         	movff	convert_uint8_to_string@value,?_sprintf+2
  2487   002192  6A2B               	clrf	(?_sprintf+3)^0,c
  2488   002194  EC42  F008         	call	_sprintf	;wreg free
  2489   002198                     l4468:
  2490                           
  2491                           ;AECUL_Modules/LCD/ecu_chr_lcd.c: 407:     return ret;
  2492   002198  5037               	movf	convert_uint8_to_string@ret^0,w,c
  2493   00219A  0012               	return		;funcret
  2494   00219C                     __end_of_convert_uint8_to_string:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _sprintf *****************
  2498 ;; Defined at:
  2499 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  sp              1   39[COMRAM] PTR unsigned char 
  2502 ;;		 -> dummy(3), convert_uint16_to_string@Temp_String(6), 
  2503 ;;  f               1   40[COMRAM] PTR const unsigned char 
  2504 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  tmpval          4    0        struct .
  2507 ;;  cp              3    0        PTR const unsigned char 
  2508 ;;  val             2   49[COMRAM] unsigned int 
  2509 ;;  len             2    0        unsigned int 
  2510 ;;  c               1   51[COMRAM] unsigned char 
  2511 ;;  prec            1   48[COMRAM] char 
  2512 ;;  flag            1   47[COMRAM] unsigned char 
  2513 ;;  ap              1   46[COMRAM] PTR void [1]
  2514 ;;		 -> ?_sprintf(2), 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  2   39[COMRAM] int 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2524 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;Total ram usage:       13 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 8
  2531 ;; This function calls:
  2532 ;;		___lwdiv
  2533 ;;		___lwmod
  2534 ;; This function is called by:
  2535 ;;		_convert_uint8_to_string
  2536 ;;		_convert_uint16_to_string
  2537 ;;		_convert_uint32_to_string
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text13
  2542   001084                     __ptext13:
  2543                           	callstack 0
  2544   001084                     _sprintf:
  2545                           	callstack 21
  2546   001084                     
  2547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2548   001084  0E2A               	movlw	low (?_sprintf+2)
  2549   001086  6E2F               	movwf	sprintf@ap^0,c
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2552   001088  EFF5  F008         	goto	l4258
  2553   00108C                     l4206:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2556   00108C  0E25               	movlw	37
  2557   00108E  1834               	xorwf	sprintf@c^0,w,c
  2558   001090  B4D8               	btfsc	status,2,c
  2559   001092  EF4D  F008         	goto	u1901
  2560   001096  EF4F  F008         	goto	u1900
  2561   00109A                     u1901:
  2562   00109A  EF57  F008         	goto	l4212
  2563   00109E                     u1900:
  2564   00109E                     
  2565                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2566   00109E  5028               	movf	sprintf@sp^0,w,c
  2567   0010A0  6ED9               	movwf	fsr2l,c
  2568   0010A2  6ADA               	clrf	fsr2h,c
  2569   0010A4  C034  FFDF         	movff	sprintf@c,indf2
  2570   0010A8  2A28               	incf	sprintf@sp^0,f,c
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 559:    continue;
  2573   0010AA  EFF5  F008         	goto	l4258
  2574   0010AE                     l4212:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2577   0010AE  0E00               	movlw	0
  2578   0010B0  6E30               	movwf	sprintf@flag^0,c
  2579   0010B2  2A29               	incf	sprintf@f^0,f,c
  2580   0010B4  0429               	decf	sprintf@f^0,w,c
  2581   0010B6  6E2E               	movwf	??_sprintf^0,c
  2582   0010B8  C02E  FFF6         	movff	??_sprintf,tblptrl
  2583   0010BC                     	if	1	;There is more than 1 active tblptr byte
  2584   0010BC  0E10               	movlw	high __smallconst
  2585   0010BE  6EF7               	movwf	tblptrh,c
  2586   0010C0                     	endif
  2587   0010C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2588   0010C0  6AF8               	clrf	tblptru,c
  2589   0010C2                     	endif
  2590   0010C2                     	if	0	;tblptru may be non-zero
  2591   0010C2                     	endif
  2592   0010C2  0008               	tblrd		*
  2593   0010C4  CFF5 F034          	movff	tablat,sprintf@c
  2594   0010C8  5034               	movf	sprintf@c^0,w,c
  2595                           
  2596                           ; Switch size 1, requested type "simple"
  2597                           ; Number of cases is 3, Range of values is 0 to 105
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte           10     6 (average)
  2601                           ;	Chosen strategy is simple_byte
  2602   0010CA  0A00               	xorlw	0	; case 0
  2603   0010CC  B4D8               	btfsc	status,2,c
  2604   0010CE  EF08  F009         	goto	l4260
  2605   0010D2  0A64               	xorlw	100	; case 100
  2606   0010D4  B4D8               	btfsc	status,2,c
  2607   0010D6  EF73  F008         	goto	l4218
  2608   0010DA  0A0D               	xorlw	13	; case 105
  2609   0010DC  B4D8               	btfsc	status,2,c
  2610   0010DE  EF73  F008         	goto	l4218
  2611   0010E2  EFF5  F008         	goto	l4258
  2612   0010E6                     l4218:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2615   0010E6  502F               	movf	sprintf@ap^0,w,c
  2616   0010E8  6ED9               	movwf	fsr2l,c
  2617   0010EA  6ADA               	clrf	fsr2h,c
  2618   0010EC  CFDE F032          	movff	postinc2,sprintf@val
  2619   0010F0  CFDD F033          	movff	postdec2,sprintf@val+1
  2620   0010F4  0E02               	movlw	2
  2621   0010F6  262F               	addwf	sprintf@ap^0,f,c
  2622   0010F8                     
  2623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2624   0010F8  BE33               	btfsc	(sprintf@val+1)^0,7,c
  2625   0010FA  EF83  F008         	goto	u1910
  2626   0010FE  EF81  F008         	goto	u1911
  2627   001102                     u1911:
  2628   001102  EF89  F008         	goto	l4228
  2629   001106                     u1910:
  2630   001106                     
  2631                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2632   001106  0E03               	movlw	3
  2633   001108  1230               	iorwf	sprintf@flag^0,f,c
  2634   00110A                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2636   00110A  6C32               	negf	sprintf@val^0,c
  2637   00110C  1E33               	comf	(sprintf@val+1)^0,f,c
  2638   00110E  B0D8               	btfsc	status,0,c
  2639   001110  2A33               	incf	(sprintf@val+1)^0,f,c
  2640   001112                     l4228:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2643   001112  0E01               	movlw	1
  2644   001114  6E34               	movwf	sprintf@c^0,c
  2645   001116                     l4234:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2648   001116  5034               	movf	sprintf@c^0,w,c
  2649   001118  0D02               	mullw	2
  2650   00111A  50F3               	movf	243,w,c
  2651   00111C  0F31               	addlw	low _dpowers
  2652   00111E  6E2E               	movwf	??_sprintf^0,c
  2653   001120  C02E  FFF6         	movff	??_sprintf,tblptrl
  2654   001124                     	if	1	;There is more than 1 active tblptr byte
  2655   001124  0E10               	movlw	high __smallconst
  2656   001126  6EF7               	movwf	tblptrh,c
  2657   001128                     	endif
  2658   001128                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2659   001128  6AF8               	clrf	tblptru,c
  2660   00112A                     	endif
  2661   00112A                     	if	0	;tblptru may be non-zero
  2662   00112A                     	endif
  2663   00112A  0009               	tblrd		*+
  2664   00112C  50F5               	movf	tablat,w,c
  2665   00112E  5C32               	subwf	sprintf@val^0,w,c
  2666   001130  0009               	tblrd		*+
  2667   001132  50F5               	movf	tablat,w,c
  2668   001134  5833               	subwfb	(sprintf@val+1)^0,w,c
  2669   001136  B0D8               	btfsc	status,0,c
  2670   001138  EFA0  F008         	goto	u1921
  2671   00113C  EFA2  F008         	goto	u1920
  2672   001140                     u1921:
  2673   001140  EFA4  F008         	goto	l4238
  2674   001144                     u1920:
  2675   001144  EFAE  F008         	goto	l4242
  2676   001148                     l4238:
  2677   001148  2A34               	incf	sprintf@c^0,f,c
  2678   00114A  0E05               	movlw	5
  2679   00114C  1834               	xorwf	sprintf@c^0,w,c
  2680   00114E  A4D8               	btfss	status,2,c
  2681   001150  EFAC  F008         	goto	u1931
  2682   001154  EFAE  F008         	goto	u1930
  2683   001158                     u1931:
  2684   001158  EF8B  F008         	goto	l4234
  2685   00115C                     u1930:
  2686   00115C                     l4242:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2689   00115C  C030  F02E         	movff	sprintf@flag,??_sprintf
  2690   001160  0E03               	movlw	3
  2691   001162  162E               	andwf	??_sprintf^0,f,c
  2692   001164  B4D8               	btfsc	status,2,c
  2693   001166  EFB7  F008         	goto	u1941
  2694   00116A  EFB9  F008         	goto	u1940
  2695   00116E                     u1941:
  2696   00116E  EFBF  F008         	goto	l4248
  2697   001172                     u1940:
  2698   001172                     
  2699                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2700   001172  5028               	movf	sprintf@sp^0,w,c
  2701   001174  6ED9               	movwf	fsr2l,c
  2702   001176  6ADA               	clrf	fsr2h,c
  2703   001178  0E2D               	movlw	45
  2704   00117A  6EDF               	movwf	indf2,c
  2705   00117C  2A28               	incf	sprintf@sp^0,f,c
  2706   00117E                     l4248:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2709   00117E  C034  F031         	movff	sprintf@c,sprintf@prec
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2712   001182  EFEC  F008         	goto	l4256
  2713   001186                     l4250:
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2716   001186  5031               	movf	sprintf@prec^0,w,c
  2717   001188  0D02               	mullw	2
  2718   00118A  50F3               	movf	243,w,c
  2719   00118C  0F31               	addlw	low _dpowers
  2720   00118E  6E2E               	movwf	??_sprintf^0,c
  2721   001190  C02E  FFF6         	movff	??_sprintf,tblptrl
  2722   001194                     	if	1	;There is more than 1 active tblptr byte
  2723   001194  0E10               	movlw	high __smallconst
  2724   001196  6EF7               	movwf	tblptrh,c
  2725   001198                     	endif
  2726   001198                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2727   001198  6AF8               	clrf	tblptru,c
  2728   00119A                     	endif
  2729   00119A                     	if	0	;tblptru may be non-zero
  2730   00119A                     	endif
  2731   00119A  0009               	tblrd		*+
  2732   00119C  CFF5 F01E          	movff	tablat,___lwdiv@divisor
  2733   0011A0  000A               	tblrd		*-
  2734   0011A2  CFF5 F01F          	movff	tablat,___lwdiv@divisor+1
  2735   0011A6  C032  F01C         	movff	sprintf@val,___lwdiv@dividend
  2736   0011AA  C033  F01D         	movff	sprintf@val+1,___lwdiv@dividend+1
  2737   0011AE  EC48  F00E         	call	___lwdiv	;wreg free
  2738   0011B2  C01C  F023         	movff	?___lwdiv,___lwmod@dividend
  2739   0011B6  C01D  F024         	movff	?___lwdiv+1,___lwmod@dividend+1
  2740   0011BA  0E00               	movlw	0
  2741   0011BC  6E26               	movwf	(___lwmod@divisor+1)^0,c
  2742   0011BE  0E0A               	movlw	10
  2743   0011C0  6E25               	movwf	___lwmod@divisor^0,c
  2744   0011C2  ECBF  F00F         	call	___lwmod	;wreg free
  2745   0011C6  5023               	movf	?___lwmod^0,w,c
  2746   0011C8  0F30               	addlw	48
  2747   0011CA  6E34               	movwf	sprintf@c^0,c
  2748   0011CC                     
  2749                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2750   0011CC  5028               	movf	sprintf@sp^0,w,c
  2751   0011CE  6ED9               	movwf	fsr2l,c
  2752   0011D0  6ADA               	clrf	fsr2h,c
  2753   0011D2  C034  FFDF         	movff	sprintf@c,indf2
  2754   0011D6  2A28               	incf	sprintf@sp^0,f,c
  2755   0011D8                     l4256:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2758   0011D8  0631               	decf	sprintf@prec^0,f,c
  2759   0011DA  2831               	incf	sprintf@prec^0,w,c
  2760   0011DC  A4D8               	btfss	status,2,c
  2761   0011DE  EFF3  F008         	goto	u1951
  2762   0011E2  EFF5  F008         	goto	u1950
  2763   0011E6                     u1951:
  2764   0011E6  EFC3  F008         	goto	l4250
  2765   0011EA                     u1950:
  2766   0011EA                     l4258:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2769   0011EA  2A29               	incf	sprintf@f^0,f,c
  2770   0011EC  0429               	decf	sprintf@f^0,w,c
  2771   0011EE  6E2E               	movwf	??_sprintf^0,c
  2772   0011F0  C02E  FFF6         	movff	??_sprintf,tblptrl
  2773   0011F4                     	if	1	;There is more than 1 active tblptr byte
  2774   0011F4  0E10               	movlw	high __smallconst
  2775   0011F6  6EF7               	movwf	tblptrh,c
  2776   0011F8                     	endif
  2777   0011F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2778   0011F8  6AF8               	clrf	tblptru,c
  2779   0011FA                     	endif
  2780   0011FA                     	if	0	;tblptru may be non-zero
  2781   0011FA                     	endif
  2782   0011FA  0008               	tblrd		*
  2783   0011FC  CFF5 F034          	movff	tablat,sprintf@c
  2784   001200  5034               	movf	sprintf@c^0,w,c
  2785   001202  A4D8               	btfss	status,2,c
  2786   001204  EF06  F009         	goto	u1961
  2787   001208  EF08  F009         	goto	u1960
  2788   00120C                     u1961:
  2789   00120C  EF46  F008         	goto	l4206
  2790   001210                     u1960:
  2791   001210                     l4260:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2794   001210  5028               	movf	sprintf@sp^0,w,c
  2795   001212  6ED9               	movwf	fsr2l,c
  2796   001214  6ADA               	clrf	fsr2h,c
  2797   001216  6ADF               	clrf	indf2,c
  2798   001218  0012               	return		;funcret
  2799   00121A                     __end_of_sprintf:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function ___lwmod *****************
  2803 ;; Defined at:
  2804 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwmod.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  dividend        2   34[COMRAM] unsigned int 
  2807 ;;  divisor         2   36[COMRAM] unsigned int 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  counter         1   38[COMRAM] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  2   34[COMRAM] unsigned int 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;Total ram usage:        5 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 7
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_sprintf
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text14
  2834   001F7E                     __ptext14:
  2835                           	callstack 0
  2836   001F7E                     ___lwmod:
  2837                           	callstack 21
  2838   001F7E  5025               	movf	___lwmod@divisor^0,w,c
  2839   001F80  1026               	iorwf	(___lwmod@divisor+1)^0,w,c
  2840   001F82  B4D8               	btfsc	status,2,c
  2841   001F84  EFC6  F00F         	goto	u1771
  2842   001F88  EFC8  F00F         	goto	u1770
  2843   001F8C                     u1771:
  2844   001F8C  EFEC  F00F         	goto	l1672
  2845   001F90                     u1770:
  2846   001F90  0E01               	movlw	1
  2847   001F92  6E27               	movwf	___lwmod@counter^0,c
  2848   001F94  EFD0  F00F         	goto	l4086
  2849   001F98                     l4084:
  2850   001F98  90D8               	bcf	status,0,c
  2851   001F9A  3625               	rlcf	___lwmod@divisor^0,f,c
  2852   001F9C  3626               	rlcf	(___lwmod@divisor+1)^0,f,c
  2853   001F9E  2A27               	incf	___lwmod@counter^0,f,c
  2854   001FA0                     l4086:
  2855   001FA0  AE26               	btfss	(___lwmod@divisor+1)^0,7,c
  2856   001FA2  EFD5  F00F         	goto	u1781
  2857   001FA6  EFD7  F00F         	goto	u1780
  2858   001FAA                     u1781:
  2859   001FAA  EFCC  F00F         	goto	l4084
  2860   001FAE                     u1780:
  2861   001FAE                     l4088:
  2862   001FAE  5025               	movf	___lwmod@divisor^0,w,c
  2863   001FB0  5C23               	subwf	___lwmod@dividend^0,w,c
  2864   001FB2  5026               	movf	(___lwmod@divisor+1)^0,w,c
  2865   001FB4  5824               	subwfb	(___lwmod@dividend+1)^0,w,c
  2866   001FB6  A0D8               	btfss	status,0,c
  2867   001FB8  EFE0  F00F         	goto	u1791
  2868   001FBC  EFE2  F00F         	goto	u1790
  2869   001FC0                     u1791:
  2870   001FC0  EFE6  F00F         	goto	l4092
  2871   001FC4                     u1790:
  2872   001FC4  5025               	movf	___lwmod@divisor^0,w,c
  2873   001FC6  5E23               	subwf	___lwmod@dividend^0,f,c
  2874   001FC8  5026               	movf	(___lwmod@divisor+1)^0,w,c
  2875   001FCA  5A24               	subwfb	(___lwmod@dividend+1)^0,f,c
  2876   001FCC                     l4092:
  2877   001FCC  90D8               	bcf	status,0,c
  2878   001FCE  3226               	rrcf	(___lwmod@divisor+1)^0,f,c
  2879   001FD0  3225               	rrcf	___lwmod@divisor^0,f,c
  2880   001FD2  2E27               	decfsz	___lwmod@counter^0,f,c
  2881   001FD4  EFD7  F00F         	goto	l4088
  2882   001FD8                     l1672:
  2883   001FD8  C023  F023         	movff	___lwmod@dividend,?___lwmod
  2884   001FDC  C024  F024         	movff	___lwmod@dividend+1,?___lwmod+1
  2885   001FE0  0012               	return		;funcret
  2886   001FE2                     __end_of___lwmod:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function ___lwdiv *****************
  2890 ;; Defined at:
  2891 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\lwdiv.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  dividend        2   27[COMRAM] unsigned int 
  2894 ;;  divisor         2   29[COMRAM] unsigned int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  quotient        2   31[COMRAM] unsigned int 
  2897 ;;  counter         1   33[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  2   27[COMRAM] unsigned int 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        7 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 7
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_sprintf
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text15
  2922   001C90                     __ptext15:
  2923                           	callstack 0
  2924   001C90                     ___lwdiv:
  2925                           	callstack 21
  2926   001C90  0E00               	movlw	0
  2927   001C92  6E21               	movwf	(___lwdiv@quotient+1)^0,c
  2928   001C94  0E00               	movlw	0
  2929   001C96  6E20               	movwf	___lwdiv@quotient^0,c
  2930   001C98  501E               	movf	___lwdiv@divisor^0,w,c
  2931   001C9A  101F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2932   001C9C  B4D8               	btfsc	status,2,c
  2933   001C9E  EF53  F00E         	goto	u1741
  2934   001CA2  EF55  F00E         	goto	u1740
  2935   001CA6                     u1741:
  2936   001CA6  EF7D  F00E         	goto	l1662
  2937   001CAA                     u1740:
  2938   001CAA  0E01               	movlw	1
  2939   001CAC  6E22               	movwf	___lwdiv@counter^0,c
  2940   001CAE  EF5D  F00E         	goto	l4066
  2941   001CB2                     l4064:
  2942   001CB2  90D8               	bcf	status,0,c
  2943   001CB4  361E               	rlcf	___lwdiv@divisor^0,f,c
  2944   001CB6  361F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2945   001CB8  2A22               	incf	___lwdiv@counter^0,f,c
  2946   001CBA                     l4066:
  2947   001CBA  AE1F               	btfss	(___lwdiv@divisor+1)^0,7,c
  2948   001CBC  EF62  F00E         	goto	u1751
  2949   001CC0  EF64  F00E         	goto	u1750
  2950   001CC4                     u1751:
  2951   001CC4  EF59  F00E         	goto	l4064
  2952   001CC8                     u1750:
  2953   001CC8                     l4068:
  2954   001CC8  90D8               	bcf	status,0,c
  2955   001CCA  3620               	rlcf	___lwdiv@quotient^0,f,c
  2956   001CCC  3621               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2957   001CCE  501E               	movf	___lwdiv@divisor^0,w,c
  2958   001CD0  5C1C               	subwf	___lwdiv@dividend^0,w,c
  2959   001CD2  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  2960   001CD4  581D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2961   001CD6  A0D8               	btfss	status,0,c
  2962   001CD8  EF70  F00E         	goto	u1761
  2963   001CDC  EF72  F00E         	goto	u1760
  2964   001CE0                     u1761:
  2965   001CE0  EF77  F00E         	goto	l4076
  2966   001CE4                     u1760:
  2967   001CE4  501E               	movf	___lwdiv@divisor^0,w,c
  2968   001CE6  5E1C               	subwf	___lwdiv@dividend^0,f,c
  2969   001CE8  501F               	movf	(___lwdiv@divisor+1)^0,w,c
  2970   001CEA  5A1D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2971   001CEC  8020               	bsf	___lwdiv@quotient^0,0,c
  2972   001CEE                     l4076:
  2973   001CEE  90D8               	bcf	status,0,c
  2974   001CF0  321F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2975   001CF2  321E               	rrcf	___lwdiv@divisor^0,f,c
  2976   001CF4  2E22               	decfsz	___lwdiv@counter^0,f,c
  2977   001CF6  EF64  F00E         	goto	l4068
  2978   001CFA                     l1662:
  2979   001CFA  C020  F01C         	movff	___lwdiv@quotient,?___lwdiv
  2980   001CFE  C021  F01D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2981   001D02  0012               	return		;funcret
  2982   001D04                     __end_of___lwdiv:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _memset *****************
  2986 ;; Defined at:
  2987 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\memset.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  p1              1   27[COMRAM] PTR void 
  2990 ;;		 -> dummy(3), 
  2991 ;;  c               2   28[COMRAM] int 
  2992 ;;  n               2   30[COMRAM] unsigned int 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  p               1   32[COMRAM] PTR unsigned char 
  2995 ;;		 -> dummy(3), 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      PTR void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 7
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_convert_uint8_to_string
  3016 ;;		_convert_uint16_to_string
  3017 ;;		_convert_uint32_to_string
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text16
  3022   0022CA                     __ptext16:
  3023                           	callstack 0
  3024   0022CA                     _memset:
  3025                           	callstack 22
  3026   0022CA  C01C  F021         	movff	memset@p1,memset@p
  3027   0022CE  EF6F  F011         	goto	l4202
  3028   0022D2                     l4198:
  3029   0022D2  5021               	movf	memset@p^0,w,c
  3030   0022D4  6ED9               	movwf	fsr2l,c
  3031   0022D6  6ADA               	clrf	fsr2h,c
  3032   0022D8  C01D  FFDF         	movff	memset@c,indf2
  3033   0022DC  2A21               	incf	memset@p^0,f,c
  3034   0022DE                     l4202:
  3035   0022DE  061F               	decf	memset@n^0,f,c
  3036   0022E0  A0D8               	btfss	status,0,c
  3037   0022E2  0620               	decf	(memset@n+1)^0,f,c
  3038   0022E4  281F               	incf	memset@n^0,w,c
  3039   0022E6  E106               	bnz	u1891
  3040   0022E8  2820               	incf	(memset@n+1)^0,w,c
  3041   0022EA  A4D8               	btfss	status,2,c
  3042   0022EC  EF7A  F011         	goto	u1891
  3043   0022F0  EF7C  F011         	goto	u1890
  3044   0022F4                     u1891:
  3045   0022F4  EF69  F011         	goto	l4198
  3046   0022F8                     u1890:
  3047   0022F8  0012               	return		;funcret
  3048   0022FA                     __end_of_memset:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _TemSensor_TC74_Read_Temp *****************
  3052 ;; Defined at:
  3053 ;;		line 9 in file "AECUL_Modules/TemSensor_TC74/TemSensor_TC74.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  Temp_Address    1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  Temp_Address    1   39[COMRAM] unsigned char 
  3058 ;;  Received_Tem    1   40[COMRAM] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      unsigned char 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;Total ram usage:        2 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 11
  3075 ;; This function calls:
  3076 ;;		_I2C_Read1ByteRegister
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text17
  3083   002598                     __ptext17:
  3084                           	callstack 0
  3085   002598                     _TemSensor_TC74_Read_Temp:
  3086                           	callstack 19
  3087                           
  3088                           ;incstack = 0
  3089                           ;TemSensor_TC74_Read_Temp@Temp_Address stored from wreg
  3090   002598  6E28               	movwf	TemSensor_TC74_Read_Temp@Temp_Address^0,c
  3091   00259A                     
  3092                           ;AECUL_Modules/TemSensor_TC74/TemSensor_TC74.c: 11:     Received_Temp = I2C_Read1ByteReg
      +                          ister(Temp_Address,0x00);
  3093   00259A  0E00               	movlw	0
  3094   00259C  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  3095   00259E  5028               	movf	TemSensor_TC74_Read_Temp@Temp_Address^0,w,c
  3096   0025A0  EC82  F00E         	call	_I2C_Read1ByteRegister
  3097   0025A4  6E29               	movwf	TemSensor_TC74_Read_Temp@Received_Temp^0,c
  3098   0025A6                     
  3099                           ;AECUL_Modules/TemSensor_TC74/TemSensor_TC74.c: 12:     return Received_Temp;
  3100   0025A6  5029               	movf	TemSensor_TC74_Read_Temp@Received_Temp^0,w,c
  3101   0025A8  0012               	return		;funcret
  3102   0025AA                     __end_of_TemSensor_TC74_Read_Temp:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _SYSTEM_Initialize *****************
  3106 ;; Defined at:
  3107 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 9
  3128 ;; This function calls:
  3129 ;;		_CLOCK_Initialize
  3130 ;;		_EUSART_Initialize
  3131 ;;		_I2C_Initialize
  3132 ;;		_INTERRUPT_Initialize
  3133 ;;		_NVM_Initialize
  3134 ;;		_PIN_MANAGER_Initialize
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text18
  3141   0024F8                     __ptext18:
  3142                           	callstack 0
  3143   0024F8                     _SYSTEM_Initialize:
  3144                           	callstack 21
  3145   0024F8                     
  3146                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  3147   0024F8  EC0A  F013         	call	_CLOCK_Initialize	;wreg free
  3148                           
  3149                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  3150   0024FC  EC7D  F011         	call	_PIN_MANAGER_Initialize	;wreg free
  3151   002500                     
  3152                           ;mcc_generated_files/system/src/system.c: 43:     EUSART_Initialize();
  3153   002500  EC4A  F011         	call	_EUSART_Initialize	;wreg free
  3154   002504                     
  3155                           ;mcc_generated_files/system/src/system.c: 44:     I2C_Initialize();
  3156   002504  ECB8  F012         	call	_I2C_Initialize	;wreg free
  3157   002508                     
  3158                           ;mcc_generated_files/system/src/system.c: 45:     NVM_Initialize();
  3159   002508  EC38  F013         	call	_NVM_Initialize	;wreg free
  3160   00250C                     
  3161                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  3162   00250C  EC2E  F011         	call	_INTERRUPT_Initialize	;wreg free
  3163   002510  0012               	return		;funcret
  3164   002512                     __end_of_SYSTEM_Initialize:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _PIN_MANAGER_Initialize *****************
  3168 ;; Defined at:
  3169 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 7
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_SYSTEM_Initialize
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text19
  3198   0022FA                     __ptext19:
  3199                           	callstack 0
  3200   0022FA                     _PIN_MANAGER_Initialize:
  3201                           	callstack 22
  3202   0022FA                     
  3203                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  3204   0022FA  0E00               	movlw	0
  3205   0022FC  6E89               	movwf	137,c	;volatile
  3206                           
  3207                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  3208   0022FE  0E00               	movlw	0
  3209   002300  6E8A               	movwf	138,c	;volatile
  3210                           
  3211                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x18;
  3212   002302  0E18               	movlw	24
  3213   002304  6E8B               	movwf	139,c	;volatile
  3214                           
  3215                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  3216   002306  0E00               	movlw	0
  3217   002308  6E8C               	movwf	140,c	;volatile
  3218                           
  3219                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  3220   00230A  0E00               	movlw	0
  3221   00230C  6E8D               	movwf	141,c	;volatile
  3222   00230E                     
  3223                           ;mcc_generated_files/system/src/pins.c: 55:     TRISA = 0xFF;
  3224   00230E  6892               	setf	146,c	;volatile
  3225   002310                     
  3226                           ;mcc_generated_files/system/src/pins.c: 56:     TRISB = 0xFF;
  3227   002310  6893               	setf	147,c	;volatile
  3228                           
  3229                           ;mcc_generated_files/system/src/pins.c: 57:     TRISC = 0xBF;
  3230   002312  0EBF               	movlw	191
  3231   002314  6E94               	movwf	148,c	;volatile
  3232   002316                     
  3233                           ;mcc_generated_files/system/src/pins.c: 58:     TRISD = 0xFF;
  3234   002316  6895               	setf	149,c	;volatile
  3235                           
  3236                           ;mcc_generated_files/system/src/pins.c: 59:     TRISE = 0x7;
  3237   002318  0E07               	movlw	7
  3238   00231A  6E96               	movwf	150,c	;volatile
  3239                           
  3240                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELH = 0x1F;
  3241   00231C  0E1F               	movlw	31
  3242   00231E  6E7F               	movwf	127,c	;volatile
  3243   002320                     
  3244                           ;mcc_generated_files/system/src/pins.c: 69:     WPUB = 0xFF;
  3245   002320  687C               	setf	124,c	;volatile
  3246                           
  3247                           ;mcc_generated_files/system/src/pins.c: 90:     IOCB = 0x0;
  3248   002322  0E00               	movlw	0
  3249   002324  6E7D               	movwf	125,c	;volatile
  3250   002326                     
  3251                           ;mcc_generated_files/system/src/pins.c: 94:     INTCONbits.RBIE = 1;
  3252   002326  86F2               	bsf	242,3,c	;volatile
  3253   002328  0012               	return		;funcret
  3254   00232A                     __end_of_PIN_MANAGER_Initialize:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _NVM_Initialize *****************
  3258 ;; Defined at:
  3259 ;;		line 42 in file "mcc_generated_files/nvm/src/nvm.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 8
  3280 ;; This function calls:
  3281 ;;		_NVM_StatusClear
  3282 ;; This function is called by:
  3283 ;;		_SYSTEM_Initialize
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text20
  3288   002670                     __ptext20:
  3289                           	callstack 0
  3290   002670                     _NVM_Initialize:
  3291                           	callstack 21
  3292   002670                     
  3293                           ;mcc_generated_files/nvm/src/nvm.c: 44:     NVM_StatusClear();
  3294   002670  EC44  F013         	call	_NVM_StatusClear	;wreg free
  3295   002674  0012               	return		;funcret
  3296   002676                     __end_of_NVM_Initialize:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _NVM_StatusClear *****************
  3300 ;; Defined at:
  3301 ;;		line 64 in file "mcc_generated_files/nvm/src/nvm.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		None
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 7
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_NVM_Initialize
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text21
  3330   002688                     __ptext21:
  3331                           	callstack 0
  3332   002688                     _NVM_StatusClear:
  3333                           	callstack 21
  3334   002688                     
  3335                           ;mcc_generated_files/nvm/src/nvm.c: 66:     EECON1bits.WRERR = 0;
  3336   002688  96A6               	bcf	166,3,c	;volsfr
  3337   00268A  0012               	return		;funcret
  3338   00268C                     __end_of_NVM_StatusClear:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _INTERRUPT_Initialize *****************
  3342 ;; Defined at:
  3343 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 8
  3364 ;; This function calls:
  3365 ;;		_INT0_SetInterruptHandler
  3366 ;;		_INT1_SetInterruptHandler
  3367 ;;		_INT2_SetInterruptHandler
  3368 ;; This function is called by:
  3369 ;;		_SYSTEM_Initialize
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text22
  3374   00225C                     __ptext22:
  3375                           	callstack 0
  3376   00225C                     _INTERRUPT_Initialize:
  3377                           	callstack 21
  3378   00225C                     
  3379                           ;mcc_generated_files/system/src/interrupt.c: 45:     RCONbits.IPEN = 1;
  3380   00225C  8ED0               	bsf	208,7,c	;volatile
  3381                           
  3382                           ;mcc_generated_files/system/src/interrupt.c: 50:     IPR2bits.BCLIP = 1;
  3383   00225E  86A2               	bsf	162,3,c	;volatile
  3384                           
  3385                           ;mcc_generated_files/system/src/interrupt.c: 53:     IPR1bits.SSPIP = 1;
  3386   002260  869F               	bsf	159,3,c	;volatile
  3387                           
  3388                           ;mcc_generated_files/system/src/interrupt.c: 59:     (INTCONbits.INT0IF = 0);
  3389   002262  92F2               	bcf	242,1,c	;volatile
  3390                           
  3391                           ;mcc_generated_files/system/src/interrupt.c: 60:     (INTCON2bits.INTEDG0 = 1);
  3392   002264  8CF1               	bsf	241,6,c	;volatile
  3393   002266                     
  3394                           ;mcc_generated_files/system/src/interrupt.c: 62:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  3395   002266  0E00               	movlw	0
  3396   002268  6E1C               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3397   00226A  0E00               	movlw	0
  3398   00226C  6E1D               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3399   00226E  EC05  F013         	call	_INT0_SetInterruptHandler	;wreg free
  3400   002272                     
  3401                           ;mcc_generated_files/system/src/interrupt.c: 67:     (INTCON3bits.INT1IF = 0);
  3402   002272  90F0               	bcf	240,0,c	;volatile
  3403   002274                     
  3404                           ;mcc_generated_files/system/src/interrupt.c: 68:     (INTCON2bits.INTEDG1 = 1);
  3405   002274  8AF1               	bsf	241,5,c	;volatile
  3406                           
  3407                           ;mcc_generated_files/system/src/interrupt.c: 70:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  3408   002276  0E00               	movlw	0
  3409   002278  6E1C               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3410   00227A  0E00               	movlw	0
  3411   00227C  6E1D               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3412   00227E  EC00  F013         	call	_INT1_SetInterruptHandler	;wreg free
  3413   002282                     
  3414                           ;mcc_generated_files/system/src/interrupt.c: 75:     (INTCON3bits.INT2IF = 0);
  3415   002282  92F0               	bcf	240,1,c	;volatile
  3416   002284                     
  3417                           ;mcc_generated_files/system/src/interrupt.c: 76:     (INTCON2bits.INTEDG2 = 1);
  3418   002284  88F1               	bsf	241,4,c	;volatile
  3419                           
  3420                           ;mcc_generated_files/system/src/interrupt.c: 78:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  3421   002286  0E00               	movlw	0
  3422   002288  6E1C               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  3423   00228A  0E00               	movlw	0
  3424   00228C  6E1D               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  3425   00228E  ECFB  F012         	call	_INT2_SetInterruptHandler	;wreg free
  3426   002292  0012               	return		;funcret
  3427   002294                     __end_of_INTERRUPT_Initialize:
  3428                           	callstack 0
  3429                           
  3430 ;; *************** function _INT2_SetInterruptHandler *****************
  3431 ;; Defined at:
  3432 ;;		line 178 in file "mcc_generated_files/system/src/interrupt.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  InterruptHan    2   27[COMRAM] PTR FTN()void 
  3435 ;;		 -> INT2_DefaultInterruptHandler(1), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;Total ram usage:        2 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; Hardware stack levels required when called: 7
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_INTERRUPT_Initialize
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text23
  3462   0025F6                     __ptext23:
  3463                           	callstack 0
  3464   0025F6                     _INT2_SetInterruptHandler:
  3465                           	callstack 21
  3466   0025F6                     
  3467                           ;mcc_generated_files/system/src/interrupt.c: 179:     INT2_InterruptHandler = InterruptH
      +                          andler;
  3468   0025F6  C01C  F04A         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3469   0025FA  C01D  F04B         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3470   0025FE  0012               	return		;funcret
  3471   002600                     __end_of_INT2_SetInterruptHandler:
  3472                           	callstack 0
  3473                           
  3474 ;; *************** function _INT1_SetInterruptHandler *****************
  3475 ;; Defined at:
  3476 ;;		line 152 in file "mcc_generated_files/system/src/interrupt.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  InterruptHan    2   27[COMRAM] PTR FTN()void 
  3479 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;Total ram usage:        2 bytes
  3496 ;; Hardware stack levels used: 1
  3497 ;; Hardware stack levels required when called: 7
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_INTERRUPT_Initialize
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text24
  3506   002600                     __ptext24:
  3507                           	callstack 0
  3508   002600                     _INT1_SetInterruptHandler:
  3509                           	callstack 21
  3510   002600                     
  3511                           ;mcc_generated_files/system/src/interrupt.c: 153:     INT1_InterruptHandler = InterruptH
      +                          andler;
  3512   002600  C01C  F04C         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3513   002604  C01D  F04D         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3514   002608  0012               	return		;funcret
  3515   00260A                     __end_of_INT1_SetInterruptHandler:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _INT0_SetInterruptHandler *****************
  3519 ;; Defined at:
  3520 ;;		line 126 in file "mcc_generated_files/system/src/interrupt.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  InterruptHan    2   27[COMRAM] PTR FTN()void 
  3523 ;;		 -> INT0_DefaultInterruptHandler(1), 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:        2 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 7
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_INTERRUPT_Initialize
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text25
  3550   00260A                     __ptext25:
  3551                           	callstack 0
  3552   00260A                     _INT0_SetInterruptHandler:
  3553                           	callstack 21
  3554   00260A                     
  3555                           ;mcc_generated_files/system/src/interrupt.c: 127:     INT0_InterruptHandler = InterruptH
      +                          andler;
  3556   00260A  C01C  F04E         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3557   00260E  C01D  F04F         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3558   002612  0012               	return		;funcret
  3559   002614                     __end_of_INT0_SetInterruptHandler:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _I2C_Initialize *****************
  3563 ;; Defined at:
  3564 ;;		line 167 in file "mcc_generated_files/i2c_host/src/mssp.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 7
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_SYSTEM_Initialize
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text26
  3593   002570                     __ptext26:
  3594                           	callstack 0
  3595   002570                     _I2C_Initialize:
  3596                           	callstack 22
  3597   002570                     
  3598                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:     SSPSTAT = 0x80;
  3599   002570  0E80               	movlw	128
  3600   002572  6EC7               	movwf	199,c	;volatile
  3601                           
  3602                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:     SSPCON1 = 0x08;
  3603   002574  0E08               	movlw	8
  3604   002576  6EC6               	movwf	198,c	;volatile
  3605                           
  3606                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:     SSPCON2 = 0x00;
  3607   002578  0E00               	movlw	0
  3608   00257A  6EC5               	movwf	197,c	;volatile
  3609                           
  3610                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:     SSPADD = 0x27;
  3611   00257C  0E27               	movlw	39
  3612   00257E  6EC8               	movwf	200,c	;volatile
  3613   002580                     
  3614                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:     SSPCON1bits.SSPEN = 0;
  3615   002580  9AC6               	bcf	198,5,c	;volatile
  3616   002582  0012               	return		;funcret
  3617   002584                     __end_of_I2C_Initialize:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _EUSART_Initialize *****************
  3621 ;; Defined at:
  3622 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 8
  3643 ;; This function calls:
  3644 ;;		_EUSART_FramingErrorCallbackRegister
  3645 ;;		_EUSART_OverrunErrorCallbackRegister
  3646 ;; This function is called by:
  3647 ;;		_SYSTEM_Initialize
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text27
  3652   002294                     __ptext27:
  3653                           	callstack 0
  3654   002294                     _EUSART_Initialize:
  3655                           	callstack 21
  3656   002294                     
  3657                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUDCON = 0x48;
  3658   002294  0E48               	movlw	72
  3659   002296  6EB8               	movwf	184,c	;volatile
  3660                           
  3661                           ;mcc_generated_files/uart/src/eusart.c: 101:     RCSTA = 0x90;
  3662   002298  0E90               	movlw	144
  3663   00229A  6EAB               	movwf	171,c	;volatile
  3664                           
  3665                           ;mcc_generated_files/uart/src/eusart.c: 103:     TXSTA = 0x26;
  3666   00229C  0E26               	movlw	38
  3667   00229E  6EAC               	movwf	172,c	;volatile
  3668                           
  3669                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRG = 0xA0;
  3670   0022A0  0EA0               	movlw	160
  3671   0022A2  6EAF               	movwf	175,c	;volatile
  3672                           
  3673                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  3674   0022A4  0E01               	movlw	1
  3675   0022A6  6EB0               	movwf	176,c	;volatile
  3676   0022A8                     
  3677                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  3678   0022A8  0E00               	movlw	0
  3679   0022AA  6E1C               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^0,c
  3680   0022AC  0E00               	movlw	0
  3681   0022AE  6E1D               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  3682   0022B0  EC6E  F012         	call	_EUSART_FramingErrorCallbackRegister	;wreg free
  3683   0022B4                     
  3684                           ;mcc_generated_files/uart/src/eusart.c: 111:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  3685   0022B4  0E00               	movlw	0
  3686   0022B6  6E1C               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^0,c
  3687   0022B8  0E00               	movlw	0
  3688   0022BA  6E1D               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  3689   0022BC  EC60  F012         	call	_EUSART_OverrunErrorCallbackRegister	;wreg free
  3690                           
  3691                           ;mcc_generated_files/uart/src/eusart.c: 112:     eusartRxLastError.status = 0;
  3692   0022C0  0E00               	movlw	0
  3693   0022C2  6E49               	movwf	(_eusartRxLastError+1)^0,c	;volatile
  3694   0022C4  0E00               	movlw	0
  3695   0022C6  6E48               	movwf	_eusartRxLastError^0,c	;volatile
  3696   0022C8  0012               	return		;funcret
  3697   0022CA                     __end_of_EUSART_Initialize:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  3701 ;; Defined at:
  3702 ;;		line 259 in file "mcc_generated_files/uart/src/eusart.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  callbackHand    2   27[COMRAM] PTR FTN()void 
  3705 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;Total ram usage:        2 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 7
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_EUSART_Initialize
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text28
  3732   0024C0                     __ptext28:
  3733                           	callstack 0
  3734   0024C0                     _EUSART_OverrunErrorCallbackRegister:
  3735                           	callstack 21
  3736   0024C0                     
  3737                           ;mcc_generated_files/uart/src/eusart.c: 259: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 260: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 261:     if((0) != callbackHandler)
  3738   0024C0  501C               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  3739   0024C2  101D               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  3740   0024C4  B4D8               	btfsc	status,2,c
  3741   0024C6  EF67  F012         	goto	u1731
  3742   0024CA  EF69  F012         	goto	u1730
  3743   0024CE                     u1731:
  3744   0024CE  EF6D  F012         	goto	l1098
  3745   0024D2                     u1730:
  3746   0024D2                     
  3747                           ;mcc_generated_files/uart/src/eusart.c: 262:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 263:         EUSART_OverrunErrorHandler = callbackHandler;
  3748   0024D2  C01C  F044         	movff	EUSART_OverrunErrorCallbackRegister@callbackHandler,_EUSART_OverrunErrorHandler
  3749   0024D6  C01D  F045         	movff	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART_OverrunErrorHandler
      +                          +1
  3750   0024DA                     l1098:
  3751   0024DA  0012               	return		;funcret
  3752   0024DC                     __end_of_EUSART_OverrunErrorCallbackRegister:
  3753                           	callstack 0
  3754                           
  3755 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  3756 ;; Defined at:
  3757 ;;		line 251 in file "mcc_generated_files/uart/src/eusart.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  callbackHand    2   27[COMRAM] PTR FTN()void 
  3760 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;Total ram usage:        2 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 7
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_EUSART_Initialize
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text29
  3787   0024DC                     __ptext29:
  3788                           	callstack 0
  3789   0024DC                     _EUSART_FramingErrorCallbackRegister:
  3790                           	callstack 21
  3791   0024DC                     
  3792                           ;mcc_generated_files/uart/src/eusart.c: 251: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 252: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 253:     if((0) != callbackHandler)
  3793   0024DC  501C               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^0,w,c
  3794   0024DE  101D               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  3795   0024E0  B4D8               	btfsc	status,2,c
  3796   0024E2  EF75  F012         	goto	u1721
  3797   0024E6  EF77  F012         	goto	u1720
  3798   0024EA                     u1721:
  3799   0024EA  EF7B  F012         	goto	l1094
  3800   0024EE                     u1720:
  3801   0024EE                     
  3802                           ;mcc_generated_files/uart/src/eusart.c: 254:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 255:         EUSART_FramingErrorHandler = callbackHandler;
  3803   0024EE  C01C  F046         	movff	EUSART_FramingErrorCallbackRegister@callbackHandler,_EUSART_FramingErrorHandler
  3804   0024F2  C01D  F047         	movff	EUSART_FramingErrorCallbackRegister@callbackHandler+1,_EUSART_FramingErrorHandler
      +                          +1
  3805   0024F6                     l1094:
  3806   0024F6  0012               	return		;funcret
  3807   0024F8                     __end_of_EUSART_FramingErrorCallbackRegister:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _CLOCK_Initialize *****************
  3811 ;; Defined at:
  3812 ;;		line 40 in file "mcc_generated_files/system/src/clock.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 7
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_SYSTEM_Initialize
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text30
  3841   002614                     __ptext30:
  3842                           	callstack 0
  3843   002614                     _CLOCK_Initialize:
  3844                           	callstack 22
  3845   002614                     
  3846                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON = (0 << 0x0)
  3847   002614  0E70               	movlw	112
  3848   002616  6ED3               	movwf	211,c	;volatile
  3849                           
  3850                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0)
  3851   002618  0E00               	movlw	0
  3852   00261A  6E9B               	movwf	155,c	;volatile
  3853   00261C  0012               	return		;funcret
  3854   00261E                     __end_of_CLOCK_Initialize:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _RealTimeClockDs1307_Get_Date_Time *****************
  3858 ;; Defined at:
  3859 ;;		line 11 in file "AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  6   39[COMRAM] struct .
  3866 ;; Registers used:
  3867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:        6 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 11
  3880 ;; This function calls:
  3881 ;;		_I2C_Read1ByteRegister
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text31
  3888   002040                     __ptext31:
  3889                           	callstack 0
  3890   002040                     _RealTimeClockDs1307_Get_Date_Time:
  3891                           	callstack 19
  3892   002040                     
  3893                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 13:     RealTimeClockDs1307.Se
      +                          conds = I2C_Read1ByteRegister (0xD0,0x00);
  3894   002040  0E00               	movlw	0
  3895   002042  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  3896   002044  0ED0               	movlw	208
  3897   002046  EC82  F00E         	call	_I2C_Read1ByteRegister
  3898   00204A  6E3A               	movwf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+2)^0,c
  3899                           
  3900                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 14:     RealTimeClockDs1307.Mi
      +                          nuts = I2C_Read1ByteRegister (0xD0,0x01);
  3901   00204C  0E01               	movlw	1
  3902   00204E  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  3903   002050  0ED0               	movlw	208
  3904   002052  EC82  F00E         	call	_I2C_Read1ByteRegister
  3905   002056  6E39               	movwf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+1)^0,c
  3906                           
  3907                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 15:     RealTimeClockDs1307.Ho
      +                          urs =I2C_Read1ByteRegister (0xD0,0x02);
  3908   002058  0E02               	movlw	2
  3909   00205A  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  3910   00205C  0ED0               	movlw	208
  3911   00205E  EC82  F00E         	call	_I2C_Read1ByteRegister
  3912   002062  6E38               	movwf	_RealTimeClockDs1307@RealTimeClockDs1307$F381^0,c
  3913                           
  3914                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 16:     RealTimeClockDs1307.Da
      +                          y = I2C_Read1ByteRegister (0xD0,0x04);
  3915   002064  0E04               	movlw	4
  3916   002066  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  3917   002068  0ED0               	movlw	208
  3918   00206A  EC82  F00E         	call	_I2C_Read1ByteRegister
  3919   00206E  6E3D               	movwf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+5)^0,c
  3920                           
  3921                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 17:     RealTimeClockDs1307.Mo
      +                          nth = I2C_Read1ByteRegister (0xD0,0x05);
  3922   002070  0E05               	movlw	5
  3923   002072  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  3924   002074  0ED0               	movlw	208
  3925   002076  EC82  F00E         	call	_I2C_Read1ByteRegister
  3926   00207A  6E3C               	movwf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+4)^0,c
  3927                           
  3928                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 18:     RealTimeClockDs1307.Ye
      +                          ar = I2C_Read1ByteRegister (0xD0,0x06);
  3929   00207C  0E06               	movlw	6
  3930   00207E  6E25               	movwf	I2C_Read1ByteRegister@reg^0,c
  3931   002080  0ED0               	movlw	208
  3932   002082  EC82  F00E         	call	_I2C_Read1ByteRegister
  3933   002086  6E3B               	movwf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+3)^0,c
  3934   002088                     
  3935                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 21:     return RealTimeClockDs
      +                          1307;
  3936   002088  EE20  F038         	lfsr	2,_RealTimeClockDs1307@RealTimeClockDs1307$F381
  3937   00208C  EE00  F028         	lfsr	0,?_RealTimeClockDs1307_Get_Date_Time
  3938   002090  0E05               	movlw	5
  3939   002092                     u2121:
  3940   002092  CFDB FFEB          	movff	plusw2,plusw0
  3941   002096  06E8               	decf	wreg,f,c
  3942   002098  E2FC               	bc	u2121
  3943   00209A  0012               	return		;funcret
  3944   00209C                     __end_of_RealTimeClockDs1307_Get_Date_Time:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _I2C_Read1ByteRegister *****************
  3948 ;; Defined at:
  3949 ;;		line 63 in file "mcc_generated_files/i2c_host/src/i2c_master_example.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  address         1    wreg     unsigned char 
  3952 ;;  reg             1   36[COMRAM] unsigned char 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  address         1   37[COMRAM] unsigned char 
  3955 ;;  returnValue     1   38[COMRAM] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      unsigned char 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3965 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;Total ram usage:        3 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 10
  3972 ;; This function calls:
  3973 ;;		_I2C_Close
  3974 ;;		_I2C_MasterWrite
  3975 ;;		_I2C_Open
  3976 ;;		_I2C_SetAddressNackCallback
  3977 ;;		_I2C_SetBuffer
  3978 ;;		_I2C_SetDataCompleteCallback
  3979 ;; This function is called by:
  3980 ;;		_RealTimeClockDs1307_Get_Date_Time
  3981 ;;		_TemSensor_TC74_Read_Temp
  3982 ;;		_EEPROM_24c02c_Read_Byte
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text32
  3987   001D04                     __ptext32:
  3988                           	callstack 0
  3989   001D04                     _I2C_Read1ByteRegister:
  3990                           	callstack 19
  3991                           
  3992                           ;incstack = 0
  3993                           ;I2C_Read1ByteRegister@address stored from wreg
  3994   001D04  6E26               	movwf	I2C_Read1ByteRegister@address^0,c
  3995   001D06                     
  3996                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegiste
      +                          r(i2c_address_t address, uint8_t reg);mcc_generated_files/i2c_host/src/i2c_master_exampl
      +                          e.c: 64: {;mcc_generated_files/i2c_host/src/i2c_master_example.c: 65:     uint8_t return
      +                          Value = 0x00;
  3997   001D06  0E00               	movlw	0
  3998   001D08  6E27               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  3999   001D0A                     l4100:
  4000   001D0A  5026               	movf	I2C_Read1ByteRegister@address^0,w,c
  4001   001D0C  ECC1  F00C         	call	_I2C_Open
  4002   001D10  0900               	iorlw	0
  4003   001D12  B4D8               	btfsc	status,2,c
  4004   001D14  EF8E  F00E         	goto	u1801
  4005   001D18  EF90  F00E         	goto	u1800
  4006   001D1C                     u1801:
  4007   001D1C  EF85  F00E         	goto	l4100
  4008   001D20                     u1800:
  4009   001D20                     
  4010                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 68:     I2C_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&returnValue);
  4011   001D20  0EAE               	movlw	low _rd1RegCompleteHandler
  4012   001D22  6E21               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  4013   001D24  0E23               	movlw	high _rd1RegCompleteHandler
  4014   001D26  6E22               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  4015   001D28  0E27               	movlw	low I2C_Read1ByteRegister@returnValue
  4016   001D2A  6E23               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  4017   001D2C  6A24               	clrf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  4018   001D2E  EC89  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  4019   001D32                     
  4020                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  4021   001D32  0E25               	movlw	low I2C_Read1ByteRegister@reg
  4022   001D34  6E1C               	movwf	I2C_SetBuffer@buffer^0,c
  4023   001D36  6A1D               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  4024   001D38  0E00               	movlw	0
  4025   001D3A  6E1F               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4026   001D3C  0E01               	movlw	1
  4027   001D3E  6E1E               	movwf	I2C_SetBuffer@bufferSize^0,c
  4028   001D40  EC2B  F012         	call	_I2C_SetBuffer	;wreg free
  4029   001D44                     
  4030                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 70:     I2C_SetAddressNackCallba
      +                          ck((0),(0));
  4031   001D44  0E00               	movlw	0
  4032   001D46  6E21               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4033   001D48  0E00               	movlw	0
  4034   001D4A  6E22               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4035   001D4C  0E00               	movlw	0
  4036   001D4E  6E23               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4037   001D50  0E00               	movlw	0
  4038   001D52  6E24               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4039   001D54  EC95  F012         	call	_I2C_SetAddressNackCallback	;wreg free
  4040   001D58                     
  4041                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 71:     I2C_MasterWrite();
  4042   001D58  EC14  F013         	call	_I2C_MasterWrite	;wreg free
  4043   001D5C                     l4110:
  4044   001D5C  EC95  F011         	call	_I2C_Close	;wreg free
  4045   001D60  06E8               	decf	wreg,f,c
  4046   001D62  B4D8               	btfsc	status,2,c
  4047   001D64  EFB6  F00E         	goto	u1811
  4048   001D68  EFB8  F00E         	goto	u1810
  4049   001D6C                     u1811:
  4050   001D6C  EFAE  F00E         	goto	l4110
  4051   001D70                     u1810:
  4052   001D70                     
  4053                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 74:     return returnValue;
  4054   001D70  5027               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  4055   001D72  0012               	return		;funcret
  4056   001D74                     __end_of_I2C_Read1ByteRegister:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _Print_RealTimeClockDS1307 *****************
  4060 ;; Defined at:
  4061 ;;		line 27 in file "AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 9
  4082 ;; This function calls:
  4083 ;;		_UART_Send_String
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text33
  4090   001730                     __ptext33:
  4091                           	callstack 0
  4092   001730                     _Print_RealTimeClockDS1307:
  4093                           	callstack 21
  4094   001730                     
  4095                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 29:   RealTimeClockDS1307_Pack
      +                          _Date[0] = ((RealTimeClockDs1307.Day >> 4) + '0');
  4096   001730  383D               	swapf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+5)^0,w,c
  4097   001732  0B0F               	andlw	15
  4098   001734  0F30               	addlw	48
  4099   001736  0100               	movlb	0	; () banked
  4100   001738  6F8A               	movwf	_RealTimeClockDS1307_Pack_Date& (0+255),b
  4101                           
  4102                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 30:   RealTimeClockDS1307_Pack
      +                          _Date[1] = ((RealTimeClockDs1307.Day & 0x0F) + '0');
  4103   00173A  503D               	movf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+5)^0,w,c
  4104   00173C  0B0F               	andlw	15
  4105   00173E  0F30               	addlw	48
  4106   001740  6F8B               	movwf	(_RealTimeClockDS1307_Pack_Date+1)& (0+255),b
  4107   001742                     
  4108                           ; BSR set to: 0
  4109                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 31:   RealTimeClockDS1307_Pack
      +                          _Date[2] = '-';
  4110   001742  0E2D               	movlw	45
  4111   001744  6F8C               	movwf	(_RealTimeClockDS1307_Pack_Date+2)& (0+255),b
  4112   001746                     
  4113                           ; BSR set to: 0
  4114                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 32:   RealTimeClockDS1307_Pack
      +                          _Date[3] = ((RealTimeClockDs1307.Month >> 4) + '0');
  4115   001746  383C               	swapf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+4)^0,w,c
  4116   001748  0B0F               	andlw	15
  4117   00174A  0F30               	addlw	48
  4118   00174C  6F8D               	movwf	(_RealTimeClockDS1307_Pack_Date+3)& (0+255),b
  4119   00174E                     
  4120                           ; BSR set to: 0
  4121                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 33:   RealTimeClockDS1307_Pack
      +                          _Date[4] = ((RealTimeClockDs1307.Month & 0x0F) + '0');
  4122   00174E  503C               	movf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+4)^0,w,c
  4123   001750  0B0F               	andlw	15
  4124   001752  0F30               	addlw	48
  4125   001754  6F8E               	movwf	(_RealTimeClockDS1307_Pack_Date+4)& (0+255),b
  4126   001756                     
  4127                           ; BSR set to: 0
  4128                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 34:   RealTimeClockDS1307_Pack
      +                          _Date[5] = '-';
  4129   001756  0E2D               	movlw	45
  4130   001758  6F8F               	movwf	(_RealTimeClockDS1307_Pack_Date+5)& (0+255),b
  4131                           
  4132                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 35:   RealTimeClockDS1307_Pack
      +                          _Date[6] = ((RealTimeClockDs1307.Year >> 4) + '0');
  4133   00175A  383B               	swapf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+3)^0,w,c
  4134   00175C  0B0F               	andlw	15
  4135   00175E  0F30               	addlw	48
  4136   001760  6F90               	movwf	(_RealTimeClockDS1307_Pack_Date+6)& (0+255),b
  4137                           
  4138                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 36:   RealTimeClockDS1307_Pack
      +                          _Date[7] = ((RealTimeClockDs1307.Year & 0x0F) + '0');
  4139   001762  503B               	movf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+3)^0,w,c
  4140   001764  0B0F               	andlw	15
  4141   001766  0F30               	addlw	48
  4142   001768  6F91               	movwf	(_RealTimeClockDS1307_Pack_Date+7)& (0+255),b
  4143   00176A                     
  4144                           ; BSR set to: 0
  4145                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 37:   RealTimeClockDS1307_Pack
      +                          _Date[8] = '\r';
  4146   00176A  0E0D               	movlw	13
  4147   00176C  6F92               	movwf	(_RealTimeClockDS1307_Pack_Date+8)& (0+255),b
  4148   00176E                     
  4149                           ; BSR set to: 0
  4150                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 39:   RealTimeClockDS1307_Pack
      +                          _Time[0] = ((RealTimeClockDs1307.Hours >> 4) + '0');
  4151   00176E  3838               	swapf	_RealTimeClockDs1307@RealTimeClockDs1307$F381^0,w,c
  4152   001770  0B0F               	andlw	15
  4153   001772  0F30               	addlw	48
  4154   001774  6F93               	movwf	_RealTimeClockDS1307_Pack_Time& (0+255),b
  4155   001776                     
  4156                           ; BSR set to: 0
  4157                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 40:   RealTimeClockDS1307_Pack
      +                          _Time[1] = ((RealTimeClockDs1307.Hours &0x0F) + '0');
  4158   001776  5038               	movf	_RealTimeClockDs1307@RealTimeClockDs1307$F381^0,w,c
  4159   001778  0B0F               	andlw	15
  4160   00177A  0F30               	addlw	48
  4161   00177C  6F94               	movwf	(_RealTimeClockDS1307_Pack_Time+1)& (0+255),b
  4162   00177E                     
  4163                           ; BSR set to: 0
  4164                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 41:   RealTimeClockDS1307_Pack
      +                          _Time[2] = '-';
  4165   00177E  0E2D               	movlw	45
  4166   001780  6F95               	movwf	(_RealTimeClockDS1307_Pack_Time+2)& (0+255),b
  4167                           
  4168                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 42:   RealTimeClockDS1307_Pack
      +                          _Time[3] = ((RealTimeClockDs1307.Minuts >> 4) + '0');
  4169   001782  3839               	swapf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+1)^0,w,c
  4170   001784  0B0F               	andlw	15
  4171   001786  0F30               	addlw	48
  4172   001788  6F96               	movwf	(_RealTimeClockDS1307_Pack_Time+3)& (0+255),b
  4173                           
  4174                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 43:   RealTimeClockDS1307_Pack
      +                          _Time[4] = ((RealTimeClockDs1307.Minuts &0x0F) + '0');
  4175   00178A  5039               	movf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+1)^0,w,c
  4176   00178C  0B0F               	andlw	15
  4177   00178E  0F30               	addlw	48
  4178   001790  6F97               	movwf	(_RealTimeClockDS1307_Pack_Time+4)& (0+255),b
  4179   001792                     
  4180                           ; BSR set to: 0
  4181                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 44:   RealTimeClockDS1307_Pack
      +                          _Time[5] = '-';
  4182   001792  0E2D               	movlw	45
  4183   001794  6F98               	movwf	(_RealTimeClockDS1307_Pack_Time+5)& (0+255),b
  4184   001796                     
  4185                           ; BSR set to: 0
  4186                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 45:   RealTimeClockDS1307_Pack
      +                          _Time[6] = ((RealTimeClockDs1307.Seconds >> 4) + '0');
  4187   001796  383A               	swapf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+2)^0,w,c
  4188   001798  0B0F               	andlw	15
  4189   00179A  0F30               	addlw	48
  4190   00179C  6F99               	movwf	(_RealTimeClockDS1307_Pack_Time+6)& (0+255),b
  4191   00179E                     
  4192                           ; BSR set to: 0
  4193                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 46:   RealTimeClockDS1307_Pack
      +                          _Time[7] = ((RealTimeClockDs1307.Seconds &0x0F) + '0');
  4194   00179E  503A               	movf	(_RealTimeClockDs1307@RealTimeClockDs1307$F381+2)^0,w,c
  4195   0017A0  0B0F               	andlw	15
  4196   0017A2  0F30               	addlw	48
  4197   0017A4  6F9A               	movwf	(_RealTimeClockDS1307_Pack_Time+7)& (0+255),b
  4198   0017A6                     
  4199                           ; BSR set to: 0
  4200                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 47:   RealTimeClockDS1307_Pack
      +                          _Time[8] = '\r';
  4201   0017A6  0E0D               	movlw	13
  4202   0017A8  6F9B               	movwf	(_RealTimeClockDS1307_Pack_Time+8)& (0+255),b
  4203   0017AA                     
  4204                           ; BSR set to: 0
  4205                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 48:   UART_Send_String("TIME: 
      +                          ",6);
  4206   0017AA  0E72               	movlw	low STR_4
  4207   0017AC  6E1D               	movwf	UART_Send_String@String^0,c
  4208   0017AE  501D               	movf	UART_Send_String@String^0,w,c
  4209   0017B0  A4D8               	btfss	status,2,c
  4210   0017B2  0E10               	movlw	high __smallconst
  4211   0017B4  6E1E               	movwf	(UART_Send_String@String+1)^0,c
  4212   0017B6  0E00               	movlw	0
  4213   0017B8  6E20               	movwf	(UART_Send_String@String_Length+1)^0,c
  4214   0017BA  0E06               	movlw	6
  4215   0017BC  6E1F               	movwf	UART_Send_String@String_Length^0,c
  4216   0017BE  EC7B  F010         	call	_UART_Send_String	;wreg free
  4217   0017C2                     
  4218                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 49:   UART_Send_String(RealTim
      +                          eClockDS1307_Pack_Time,9);
  4219   0017C2  0E93               	movlw	low _RealTimeClockDS1307_Pack_Time
  4220   0017C4  6E1D               	movwf	UART_Send_String@String^0,c
  4221   0017C6  6A1E               	clrf	(UART_Send_String@String+1)^0,c
  4222   0017C8  0E00               	movlw	0
  4223   0017CA  6E20               	movwf	(UART_Send_String@String_Length+1)^0,c
  4224   0017CC  0E09               	movlw	9
  4225   0017CE  6E1F               	movwf	UART_Send_String@String_Length^0,c
  4226   0017D0  EC7B  F010         	call	_UART_Send_String	;wreg free
  4227   0017D4                     
  4228                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 50:   UART_Send_String("DATE: 
      +                          ",6);
  4229   0017D4  0E79               	movlw	low STR_5
  4230   0017D6  6E1D               	movwf	UART_Send_String@String^0,c
  4231   0017D8  501D               	movf	UART_Send_String@String^0,w,c
  4232   0017DA  A4D8               	btfss	status,2,c
  4233   0017DC  0E10               	movlw	high __smallconst
  4234   0017DE  6E1E               	movwf	(UART_Send_String@String+1)^0,c
  4235   0017E0  0E00               	movlw	0
  4236   0017E2  6E20               	movwf	(UART_Send_String@String_Length+1)^0,c
  4237   0017E4  0E06               	movlw	6
  4238   0017E6  6E1F               	movwf	UART_Send_String@String_Length^0,c
  4239   0017E8  EC7B  F010         	call	_UART_Send_String	;wreg free
  4240   0017EC                     
  4241                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 51:   UART_Send_String(RealTim
      +                          eClockDS1307_Pack_Date,9);
  4242   0017EC  0E8A               	movlw	low _RealTimeClockDS1307_Pack_Date
  4243   0017EE  6E1D               	movwf	UART_Send_String@String^0,c
  4244   0017F0  6A1E               	clrf	(UART_Send_String@String+1)^0,c
  4245   0017F2  0E00               	movlw	0
  4246   0017F4  6E20               	movwf	(UART_Send_String@String_Length+1)^0,c
  4247   0017F6  0E09               	movlw	9
  4248   0017F8  6E1F               	movwf	UART_Send_String@String_Length^0,c
  4249   0017FA  EC7B  F010         	call	_UART_Send_String	;wreg free
  4250   0017FE                     
  4251                           ;AECUL_Modules/RealTimeClockDs1307/RealTimeClockDs1307.c: 53:   UART_Send_String("------
      +                          ------------------\r",25);
  4252   0017FE  0E3B               	movlw	low STR_6
  4253   001800  6E1D               	movwf	UART_Send_String@String^0,c
  4254   001802  501D               	movf	UART_Send_String@String^0,w,c
  4255   001804  A4D8               	btfss	status,2,c
  4256   001806  0E10               	movlw	high __smallconst
  4257   001808  6E1E               	movwf	(UART_Send_String@String+1)^0,c
  4258   00180A  0E00               	movlw	0
  4259   00180C  6E20               	movwf	(UART_Send_String@String_Length+1)^0,c
  4260   00180E  0E19               	movlw	25
  4261   001810  6E1F               	movwf	UART_Send_String@String_Length^0,c
  4262   001812  EC7B  F010         	call	_UART_Send_String	;wreg free
  4263   001816  0012               	return		;funcret
  4264   001818                     __end_of_Print_RealTimeClockDS1307:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _UART_Send_String *****************
  4268 ;; Defined at:
  4269 ;;		line 10 in file "AECUL_Modules/USART_LoggingDebuggingData/UART_LoggingDebugData.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  String          2   28[COMRAM] PTR unsigned char 
  4272 ;;		 -> STR_6(26), STR_5(7), STR_4(7), RealTimeClockDS1307_Pack_Time(9), 
  4273 ;;		 -> RealTimeClockDS1307_Pack_Date(9), 
  4274 ;;  String_Lengt    2   30[COMRAM] unsigned int 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  str_len_coun    2   34[COMRAM] unsigned int 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;Total ram usage:        8 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 8
  4293 ;; This function calls:
  4294 ;;		_EUSART_Write
  4295 ;; This function is called by:
  4296 ;;		_Print_RealTimeClockDS1307
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text34
  4301   0020F6                     __ptext34:
  4302                           	callstack 0
  4303   0020F6                     _UART_Send_String:
  4304                           	callstack 21
  4305   0020F6                     
  4306                           ;AECUL_Modules/USART_LoggingDebuggingData/UART_LoggingDebugData.c: 11:     uint16_t str_
      +                          len_counter ;;AECUL_Modules/USART_LoggingDebuggingData/UART_LoggingDebugData.c: 12:     
      +                          for(str_len_counter = 0; str_len_counter < String_Length; ++str_len_counter){
  4307   0020F6  0E00               	movlw	0
  4308   0020F8  6E24               	movwf	(UART_Send_String@str_len_counter+1)^0,c
  4309   0020FA  0E00               	movlw	0
  4310   0020FC  6E23               	movwf	UART_Send_String@str_len_counter^0,c
  4311   0020FE  EF9C  F010         	goto	l4270
  4312   002102                     l4266:
  4313                           
  4314                           ;AECUL_Modules/USART_LoggingDebuggingData/UART_LoggingDebugData.c: 13:         EUSART_Wr
      +                          ite(String[str_len_counter]);
  4315   002102  5023               	movf	UART_Send_String@str_len_counter^0,w,c
  4316   002104  241D               	addwf	UART_Send_String@String^0,w,c
  4317   002106  6E21               	movwf	??_UART_Send_String^0,c
  4318   002108  5024               	movf	(UART_Send_String@str_len_counter+1)^0,w,c
  4319   00210A  201E               	addwfc	(UART_Send_String@String+1)^0,w,c
  4320   00210C  6E22               	movwf	(??_UART_Send_String+1)^0,c
  4321   00210E  C021  FFF6         	movff	??_UART_Send_String,tblptrl
  4322   002112  C022  FFF7         	movff	??_UART_Send_String+1,tblptrh
  4323   002116  0E00               	movlw	low (__smallconst shr (0+16))
  4324   002118  6EF8               	movwf	tblptru,c
  4325   00211A  0E0F               	movlw	(high __ramtop+-1)
  4326   00211C  64F7               	cpfsgt	tblptrh,c
  4327   00211E  D003               	bra	u1977
  4328   002120  0008               	tblrd		*
  4329   002122  50F5               	movf	tablat,w,c
  4330   002124  D005               	bra	u1970
  4331   002126                     u1977:
  4332   002126  CFF6 FFE9          	movff	tblptrl,fsr0l
  4333   00212A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4334   00212E  50EF               	movf	indf0,w,c
  4335   002130                     u1970:
  4336   002130  ECAD  F012         	call	_EUSART_Write
  4337   002134                     
  4338                           ;AECUL_Modules/USART_LoggingDebuggingData/UART_LoggingDebugData.c: 15:     }
  4339   002134  4A23               	infsnz	UART_Send_String@str_len_counter^0,f,c
  4340   002136  2A24               	incf	(UART_Send_String@str_len_counter+1)^0,f,c
  4341   002138                     l4270:
  4342   002138  501F               	movf	UART_Send_String@String_Length^0,w,c
  4343   00213A  5C23               	subwf	UART_Send_String@str_len_counter^0,w,c
  4344   00213C  5020               	movf	(UART_Send_String@String_Length+1)^0,w,c
  4345   00213E  5824               	subwfb	(UART_Send_String@str_len_counter+1)^0,w,c
  4346   002140  A0D8               	btfss	status,0,c
  4347   002142  EFA5  F010         	goto	u1981
  4348   002146  EFA7  F010         	goto	u1980
  4349   00214A                     u1981:
  4350   00214A  EF81  F010         	goto	l4266
  4351   00214E                     u1980:
  4352   00214E  0012               	return		;funcret
  4353   002150                     __end_of_UART_Send_String:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _EUSART_Write *****************
  4357 ;; Defined at:
  4358 ;;		line 233 in file "mcc_generated_files/uart/src/eusart.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  txData          1    wreg     unsigned char 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  txData          1   27[COMRAM] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;Total ram usage:        1 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 7
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_UART_Send_String
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text35
  4387   00255A                     __ptext35:
  4388                           	callstack 0
  4389   00255A                     _EUSART_Write:
  4390                           	callstack 21
  4391                           
  4392                           ;incstack = 0
  4393                           ;EUSART_Write@txData stored from wreg
  4394   00255A  6E1C               	movwf	EUSART_Write@txData^0,c
  4395   00255C                     l1081:
  4396   00255C  A89E               	btfss	158,4,c	;volatile
  4397   00255E  EFB3  F012         	goto	u1561
  4398   002562  EFB5  F012         	goto	u1560
  4399   002566                     u1561:
  4400   002566  EFAE  F012         	goto	l1081
  4401   00256A                     u1560:
  4402   00256A                     
  4403                           ;mcc_generated_files/uart/src/eusart.c: 236:     TXREG = txData;
  4404   00256A  C01C  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  4405   00256E  0012               	return		;funcret
  4406   002570                     __end_of_EUSART_Write:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _Keypad_Get_Value *****************
  4410 ;; Defined at:
  4411 ;;		line 20 in file "AECUL_Modules/Keypad/KeyPad.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  Value           1   27[COMRAM] PTR unsigned char 
  4414 ;;		 -> KeyPad_Value(1), 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  mask            1   30[COMRAM] unsigned char 
  4417 ;;  L_rows_count    1   32[COMRAM] unsigned char 
  4418 ;;  val             1   31[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4428 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;Total ram usage:        6 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 7
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text36
  4443   00132C                     __ptext36:
  4444                           	callstack 0
  4445   00132C                     _Keypad_Get_Value:
  4446                           	callstack 23
  4447   00132C                     
  4448                           ;AECUL_Modules/Keypad/KeyPad.c: 21:     uint8_t L_rows_counter ;;AECUL_Modules/Keypad/Ke
      +                          yPad.c: 22:     uint8_t val=1;
  4449   00132C  0E01               	movlw	1
  4450   00132E  6E20               	movwf	Keypad_Get_Value@val^0,c
  4451                           
  4452                           ;AECUL_Modules/Keypad/KeyPad.c: 23:     for(L_rows_counter=0;L_rows_counter<4;L_rows_cou
      +                          nter++){
  4453   001330  0E00               	movlw	0
  4454   001332  6E21               	movwf	Keypad_Get_Value@L_rows_counter^0,c
  4455   001334                     l4342:
  4456                           
  4457                           ;AECUL_Modules/Keypad/KeyPad.c: 24:         LATD=0X00;
  4458   001334  0E00               	movlw	0
  4459   001336  6E8C               	movwf	140,c	;volatile
  4460   001338                     
  4461                           ;AECUL_Modules/Keypad/KeyPad.c: 25:         LATD=0x0F & val;
  4462   001338  5020               	movf	Keypad_Get_Value@val^0,w,c
  4463   00133A  0B0F               	andlw	15
  4464   00133C  6E8C               	movwf	140,c	;volatile
  4465   00133E                     
  4466                           ;AECUL_Modules/Keypad/KeyPad.c: 26:         uint8_t mask = PORTD & 0xF0;
  4467   00133E  5083               	movf	131,w,c	;volatile
  4468   001340  0BF0               	andlw	240
  4469   001342  6E1F               	movwf	Keypad_Get_Value@mask^0,c
  4470                           
  4471                           ;AECUL_Modules/Keypad/KeyPad.c: 27:         switch(mask){
  4472   001344  EFF8  F009         	goto	l4358
  4473   001348                     l4348:
  4474                           
  4475                           ;AECUL_Modules/Keypad/KeyPad.c: 29:                 *Value = btn_values[L_rows_counter][
      +                          0];
  4476   001348  5021               	movf	Keypad_Get_Value@L_rows_counter^0,w,c
  4477   00134A  0D04               	mullw	4
  4478   00134C  50F3               	movf	243,w,c
  4479   00134E  0F21               	addlw	low _btn_values
  4480   001350  6E1D               	movwf	??_Keypad_Get_Value^0,c
  4481   001352  C01D  FFF6         	movff	??_Keypad_Get_Value,tblptrl
  4482   001356                     	if	1	;There is more than 1 active tblptr byte
  4483   001356  0E10               	movlw	high __smallconst
  4484   001358  6EF7               	movwf	tblptrh,c
  4485   00135A                     	endif
  4486   00135A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4487   00135A  6AF8               	clrf	tblptru,c
  4488   00135C                     	endif
  4489   00135C                     	if	0	;tblptru may be non-zero
  4490   00135C                     	endif
  4491   00135C  501C               	movf	Keypad_Get_Value@Value^0,w,c
  4492   00135E  6ED9               	movwf	fsr2l,c
  4493   001360  6ADA               	clrf	fsr2h,c
  4494   001362  0008               	tblrd		*
  4495   001364  CFF5 FFDF          	movff	tablat,indf2
  4496                           
  4497                           ;AECUL_Modules/Keypad/KeyPad.c: 30:                 break;
  4498   001368  EF0B  F00A         	goto	l4360
  4499   00136C                     l4350:
  4500                           
  4501                           ;AECUL_Modules/Keypad/KeyPad.c: 32:                 *Value = btn_values[L_rows_counter][
      +                          1];
  4502   00136C  5021               	movf	Keypad_Get_Value@L_rows_counter^0,w,c
  4503   00136E  0D04               	mullw	4
  4504   001370  CFF3 F01D          	movff	prodl,??_Keypad_Get_Value
  4505   001374  0E01               	movlw	1
  4506   001376  261D               	addwf	??_Keypad_Get_Value^0,f,c
  4507   001378  501D               	movf	??_Keypad_Get_Value^0,w,c
  4508   00137A  0F21               	addlw	low _btn_values
  4509   00137C  6E1E               	movwf	(??_Keypad_Get_Value+1)^0,c
  4510   00137E  C01E  FFF6         	movff	??_Keypad_Get_Value+1,tblptrl
  4511   001382                     	if	1	;There is more than 1 active tblptr byte
  4512   001382  0E10               	movlw	high __smallconst
  4513   001384  6EF7               	movwf	tblptrh,c
  4514   001386                     	endif
  4515   001386                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4516   001386  6AF8               	clrf	tblptru,c
  4517   001388                     	endif
  4518   001388                     	if	0	;tblptru may be non-zero
  4519   001388                     	endif
  4520   001388  501C               	movf	Keypad_Get_Value@Value^0,w,c
  4521   00138A  6ED9               	movwf	fsr2l,c
  4522   00138C  6ADA               	clrf	fsr2h,c
  4523   00138E  0008               	tblrd		*
  4524   001390  CFF5 FFDF          	movff	tablat,indf2
  4525                           
  4526                           ;AECUL_Modules/Keypad/KeyPad.c: 33:                 break;
  4527   001394  EF0B  F00A         	goto	l4360
  4528   001398                     l4352:
  4529                           
  4530                           ;AECUL_Modules/Keypad/KeyPad.c: 35:                 *Value = btn_values[L_rows_counter][
      +                          2];
  4531   001398  5021               	movf	Keypad_Get_Value@L_rows_counter^0,w,c
  4532   00139A  0D04               	mullw	4
  4533   00139C  CFF3 F01D          	movff	prodl,??_Keypad_Get_Value
  4534   0013A0  0E02               	movlw	2
  4535   0013A2  261D               	addwf	??_Keypad_Get_Value^0,f,c
  4536   0013A4  501D               	movf	??_Keypad_Get_Value^0,w,c
  4537   0013A6  0F21               	addlw	low _btn_values
  4538   0013A8  6E1E               	movwf	(??_Keypad_Get_Value+1)^0,c
  4539   0013AA  C01E  FFF6         	movff	??_Keypad_Get_Value+1,tblptrl
  4540   0013AE                     	if	1	;There is more than 1 active tblptr byte
  4541   0013AE  0E10               	movlw	high __smallconst
  4542   0013B0  6EF7               	movwf	tblptrh,c
  4543   0013B2                     	endif
  4544   0013B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4545   0013B2  6AF8               	clrf	tblptru,c
  4546   0013B4                     	endif
  4547   0013B4                     	if	0	;tblptru may be non-zero
  4548   0013B4                     	endif
  4549   0013B4  501C               	movf	Keypad_Get_Value@Value^0,w,c
  4550   0013B6  6ED9               	movwf	fsr2l,c
  4551   0013B8  6ADA               	clrf	fsr2h,c
  4552   0013BA  0008               	tblrd		*
  4553   0013BC  CFF5 FFDF          	movff	tablat,indf2
  4554                           
  4555                           ;AECUL_Modules/Keypad/KeyPad.c: 36:                 break;
  4556   0013C0  EF0B  F00A         	goto	l4360
  4557   0013C4                     l4354:
  4558                           
  4559                           ;AECUL_Modules/Keypad/KeyPad.c: 38:                 *Value = btn_values[L_rows_counter][
      +                          3];
  4560   0013C4  5021               	movf	Keypad_Get_Value@L_rows_counter^0,w,c
  4561   0013C6  0D04               	mullw	4
  4562   0013C8  CFF3 F01D          	movff	prodl,??_Keypad_Get_Value
  4563   0013CC  0E03               	movlw	3
  4564   0013CE  261D               	addwf	??_Keypad_Get_Value^0,f,c
  4565   0013D0  501D               	movf	??_Keypad_Get_Value^0,w,c
  4566   0013D2  0F21               	addlw	low _btn_values
  4567   0013D4  6E1E               	movwf	(??_Keypad_Get_Value+1)^0,c
  4568   0013D6  C01E  FFF6         	movff	??_Keypad_Get_Value+1,tblptrl
  4569   0013DA                     	if	1	;There is more than 1 active tblptr byte
  4570   0013DA  0E10               	movlw	high __smallconst
  4571   0013DC  6EF7               	movwf	tblptrh,c
  4572   0013DE                     	endif
  4573   0013DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4574   0013DE  6AF8               	clrf	tblptru,c
  4575   0013E0                     	endif
  4576   0013E0                     	if	0	;tblptru may be non-zero
  4577   0013E0                     	endif
  4578   0013E0  501C               	movf	Keypad_Get_Value@Value^0,w,c
  4579   0013E2  6ED9               	movwf	fsr2l,c
  4580   0013E4  6ADA               	clrf	fsr2h,c
  4581   0013E6  0008               	tblrd		*
  4582   0013E8  CFF5 FFDF          	movff	tablat,indf2
  4583                           
  4584                           ;AECUL_Modules/Keypad/KeyPad.c: 39:                 break;
  4585   0013EC  EF0B  F00A         	goto	l4360
  4586   0013F0                     l4358:
  4587   0013F0  501F               	movf	Keypad_Get_Value@mask^0,w,c
  4588                           
  4589                           ; Switch size 1, requested type "simple"
  4590                           ; Number of cases is 4, Range of values is 16 to 128
  4591                           ; switch strategies available:
  4592                           ; Name         Instructions Cycles
  4593                           ; simple_byte           13     7 (average)
  4594                           ;	Chosen strategy is simple_byte
  4595   0013F2  0A10               	xorlw	16	; case 16
  4596   0013F4  B4D8               	btfsc	status,2,c
  4597   0013F6  EFA4  F009         	goto	l4348
  4598   0013FA  0A30               	xorlw	48	; case 32
  4599   0013FC  B4D8               	btfsc	status,2,c
  4600   0013FE  EFB6  F009         	goto	l4350
  4601   001402  0A60               	xorlw	96	; case 64
  4602   001404  B4D8               	btfsc	status,2,c
  4603   001406  EFCC  F009         	goto	l4352
  4604   00140A  0AC0               	xorlw	192	; case 128
  4605   00140C  B4D8               	btfsc	status,2,c
  4606   00140E  EFE2  F009         	goto	l4354
  4607   001412  EF0B  F00A         	goto	l4360
  4608   001416                     l4360:
  4609                           
  4610                           ;AECUL_Modules/Keypad/KeyPad.c: 43:         val=val<<1;
  4611   001416  5020               	movf	Keypad_Get_Value@val^0,w,c
  4612   001418  2420               	addwf	Keypad_Get_Value@val^0,w,c
  4613   00141A  6E20               	movwf	Keypad_Get_Value@val^0,c
  4614   00141C                     
  4615                           ;AECUL_Modules/Keypad/KeyPad.c: 44:         _delay((unsigned long)((10)*(16000000/4000.0
      +                          )));
  4616   00141C  0E34               	movlw	52
  4617   00141E  6E1D               	movwf	??_Keypad_Get_Value^0,c
  4618   001420  0EF2               	movlw	242
  4619   001422                     u3087:
  4620   001422  2EE8               	decfsz	wreg,f,c
  4621   001424  D7FE               	bra	u3087
  4622   001426  2E1D               	decfsz	??_Keypad_Get_Value^0,f,c
  4623   001428  D7FC               	bra	u3087
  4624                           
  4625                           ;AECUL_Modules/Keypad/KeyPad.c: 45:     }
  4626   00142A  2A21               	incf	Keypad_Get_Value@L_rows_counter^0,f,c
  4627   00142C  0E03               	movlw	3
  4628   00142E  6421               	cpfsgt	Keypad_Get_Value@L_rows_counter^0,c
  4629   001430  EF1C  F00A         	goto	u2041
  4630   001434  EF1E  F00A         	goto	u2040
  4631   001438                     u2041:
  4632   001438  EF9A  F009         	goto	l4342
  4633   00143C                     u2040:
  4634   00143C  0012               	return		;funcret
  4635   00143E                     __end_of_Keypad_Get_Value:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function _I2C_Write1ByteRegister *****************
  4639 ;; Defined at:
  4640 ;;		line 91 in file "mcc_generated_files/i2c_host/src/i2c_master_example.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  address         1    wreg     unsigned char 
  4643 ;;  reg             1   36[COMRAM] unsigned char 
  4644 ;;  data            1   37[COMRAM] unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  address         1   38[COMRAM] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;Total ram usage:        3 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; Hardware stack levels required when called: 10
  4663 ;; This function calls:
  4664 ;;		_I2C_Close
  4665 ;;		_I2C_MasterWrite
  4666 ;;		_I2C_Open
  4667 ;;		_I2C_SetAddressNackCallback
  4668 ;;		_I2C_SetBuffer
  4669 ;;		_I2C_SetDataCompleteCallback
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;;		_EEPROM_24c02c_write_Byte
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text37
  4677   001DE2                     __ptext37:
  4678                           	callstack 0
  4679   001DE2                     _I2C_Write1ByteRegister:
  4680                           	callstack 20
  4681                           
  4682                           ;incstack = 0
  4683                           ;I2C_Write1ByteRegister@address stored from wreg
  4684   001DE2  6E27               	movwf	I2C_Write1ByteRegister@address^0,c
  4685   001DE4                     l4322:
  4686   001DE4  5027               	movf	I2C_Write1ByteRegister@address^0,w,c
  4687   001DE6  ECC1  F00C         	call	_I2C_Open
  4688   001DEA  0900               	iorlw	0
  4689   001DEC  B4D8               	btfsc	status,2,c
  4690   001DEE  EFFB  F00E         	goto	u2021
  4691   001DF2  EFFD  F00E         	goto	u2020
  4692   001DF6                     u2021:
  4693   001DF6  EFF2  F00E         	goto	l4322
  4694   001DFA                     u2020:
  4695   001DFA                     
  4696                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 94:     I2C_SetDataCompleteCallb
      +                          ack(wr1RegCompleteHandler,&data);
  4697   001DFA  0E56               	movlw	low _wr1RegCompleteHandler
  4698   001DFC  6E21               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  4699   001DFE  0E23               	movlw	high _wr1RegCompleteHandler
  4700   001E00  6E22               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  4701   001E02  0E26               	movlw	low I2C_Write1ByteRegister@data
  4702   001E04  6E23               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  4703   001E06  6A24               	clrf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  4704   001E08  EC89  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  4705   001E0C                     
  4706                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  4707   001E0C  0E25               	movlw	low I2C_Write1ByteRegister@reg
  4708   001E0E  6E1C               	movwf	I2C_SetBuffer@buffer^0,c
  4709   001E10  6A1D               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  4710   001E12  0E00               	movlw	0
  4711   001E14  6E1F               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4712   001E16  0E01               	movlw	1
  4713   001E18  6E1E               	movwf	I2C_SetBuffer@bufferSize^0,c
  4714   001E1A  EC2B  F012         	call	_I2C_SetBuffer	;wreg free
  4715   001E1E                     
  4716                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 96:     I2C_SetAddressNackCallba
      +                          ck((0),(0));
  4717   001E1E  0E00               	movlw	0
  4718   001E20  6E21               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4719   001E22  0E00               	movlw	0
  4720   001E24  6E22               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4721   001E26  0E00               	movlw	0
  4722   001E28  6E23               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4723   001E2A  0E00               	movlw	0
  4724   001E2C  6E24               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4725   001E2E  EC95  F012         	call	_I2C_SetAddressNackCallback	;wreg free
  4726   001E32                     
  4727                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 97:     I2C_MasterWrite();
  4728   001E32  EC14  F013         	call	_I2C_MasterWrite	;wreg free
  4729   001E36                     l4332:
  4730   001E36  EC95  F011         	call	_I2C_Close	;wreg free
  4731   001E3A  06E8               	decf	wreg,f,c
  4732   001E3C  B4D8               	btfsc	status,2,c
  4733   001E3E  EF23  F00F         	goto	u2031
  4734   001E42  EF25  F00F         	goto	u2030
  4735   001E46                     u2031:
  4736   001E46  EF1B  F00F         	goto	l4332
  4737   001E4A                     u2030:
  4738   001E4A  0012               	return		;funcret
  4739   001E4C                     __end_of_I2C_Write1ByteRegister:
  4740                           	callstack 0
  4741                           
  4742 ;; *************** function _I2C_SetDataCompleteCallback *****************
  4743 ;; Defined at:
  4744 ;;		line 274 in file "mcc_generated_files/i2c_host/src/mssp.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  cb              2   32[COMRAM] PTR FTN(PTR void ,)enum 
  4747 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  4748 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
  4749 ;;  ptr             2   34[COMRAM] PTR void 
  4750 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4751 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;Total ram usage:        4 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 8
  4770 ;; This function calls:
  4771 ;;		_I2C_SetCallback
  4772 ;; This function is called by:
  4773 ;;		_I2C_Read1ByteRegister
  4774 ;;		_I2C_Write1ByteRegister
  4775 ;;		_I2C_Read2ByteRegister
  4776 ;;		_I2C_Write2ByteRegister
  4777 ;;		_I2C_ReadDataBlock
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text38
  4782   002512                     __ptext38:
  4783                           	callstack 0
  4784   002512                     _I2C_SetDataCompleteCallback:
  4785                           	callstack 20
  4786   002512                     
  4787                           ;mcc_generated_files/i2c_host/src/mssp.c: 274: void I2C_SetDataCompleteCallback(i2c_call
      +                          back_t cb, void *ptr);mcc_generated_files/i2c_host/src/mssp.c: 275: {;mcc_generated_file
      +                          s/i2c_host/src/mssp.c: 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  4788   002512  C021  F01C         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  4789   002516  C022  F01D         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  4790   00251A  C023  F01E         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  4791   00251E  C024  F01F         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  4792   002522  0E00               	movlw	0
  4793   002524  EC26  F00F         	call	_I2C_SetCallback
  4794   002528  0012               	return		;funcret
  4795   00252A                     __end_of_I2C_SetDataCompleteCallback:
  4796                           	callstack 0
  4797                           
  4798 ;; *************** function _I2C_SetBuffer *****************
  4799 ;; Defined at:
  4800 ;;		line 264 in file "mcc_generated_files/i2c_host/src/mssp.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  buffer          2   27[COMRAM] PTR void 
  4803 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  4804 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  4805 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4806 ;;  bufferSize      2   29[COMRAM] unsigned int 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;Total ram usage:        4 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 7
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_I2C_Read1ByteRegister
  4829 ;;		_I2C_Write1ByteRegister
  4830 ;;		_I2C_Read2ByteRegister
  4831 ;;		_I2C_Write2ByteRegister
  4832 ;;		_I2C_WriteNBytes
  4833 ;;		_I2C_ReadNBytes
  4834 ;;		_I2C_ReadDataBlock
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text39
  4839   002456                     __ptext39:
  4840                           	callstack 0
  4841   002456                     _I2C_SetBuffer:
  4842                           	callstack 21
  4843   002456                     
  4844                           ;mcc_generated_files/i2c_host/src/mssp.c: 264: void I2C_SetBuffer(void *buffer, size_t b
      +                          ufferSize);mcc_generated_files/i2c_host/src/mssp.c: 265: {;mcc_generated_files/i2c_host/
      +                          src/mssp.c: 266:     if(I2C_Status.bufferFree)
  4845   002456  0100               	movlb	0	; () banked
  4846   002458  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  4847   00245A  EF31  F012         	goto	u1631
  4848   00245E  EF33  F012         	goto	u1630
  4849   002462                     u1631:
  4850   002462  EF3C  F012         	goto	l589
  4851   002466                     u1630:
  4852   002466                     
  4853                           ; BSR set to: 0
  4854                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 268:         I2C_Status.data_ptr = buffer;
  4855   002466  C01C  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  4856   00246A  C01D  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  4857   00246E                     
  4858                           ; BSR set to: 0
  4859                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:         I2C_Status.data_length = bufferSi
      +                          ze;
  4860   00246E  C01E  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  4861   002472  C01F  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  4862   002476                     
  4863                           ; BSR set to: 0
  4864                           ;mcc_generated_files/i2c_host/src/mssp.c: 270:         I2C_Status.bufferFree = 0;
  4865   002476  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  4866   002478                     l589:
  4867                           
  4868                           ; BSR set to: 0
  4869   002478  0012               	return		;funcret
  4870   00247A                     __end_of_I2C_SetBuffer:
  4871                           	callstack 0
  4872                           
  4873 ;; *************** function _I2C_SetAddressNackCallback *****************
  4874 ;; Defined at:
  4875 ;;		line 284 in file "mcc_generated_files/i2c_host/src/mssp.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  cb              2   32[COMRAM] PTR FTN(PTR void ,)enum 
  4878 ;;		 -> NULL(1), 
  4879 ;;  ptr             2   34[COMRAM] PTR void 
  4880 ;;		 -> NULL(0), 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;Total ram usage:        4 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; Hardware stack levels required when called: 8
  4899 ;; This function calls:
  4900 ;;		_I2C_SetCallback
  4901 ;; This function is called by:
  4902 ;;		_I2C_Read1ByteRegister
  4903 ;;		_I2C_Write1ByteRegister
  4904 ;;		_I2C_Read2ByteRegister
  4905 ;;		_I2C_Write2ByteRegister
  4906 ;;		_I2C_WriteNBytes
  4907 ;;		_I2C_ReadDataBlock
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text40
  4912   00252A                     __ptext40:
  4913                           	callstack 0
  4914   00252A                     _I2C_SetAddressNackCallback:
  4915                           	callstack 20
  4916   00252A                     
  4917                           ;mcc_generated_files/i2c_host/src/mssp.c: 284: void I2C_SetAddressNackCallback(i2c_callb
      +                          ack_t cb, void *ptr);mcc_generated_files/i2c_host/src/mssp.c: 285: {;mcc_generated_files
      +                          /i2c_host/src/mssp.c: 286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4918   00252A  C021  F01C         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  4919   00252E  C022  F01D         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  4920   002532  C023  F01E         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  4921   002536  C024  F01F         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  4922   00253A  0E02               	movlw	2
  4923   00253C  EC26  F00F         	call	_I2C_SetCallback
  4924   002540  0012               	return		;funcret
  4925   002542                     __end_of_I2C_SetAddressNackCallback:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _I2C_SetCallback *****************
  4929 ;; Defined at:
  4930 ;;		line 304 in file "mcc_generated_files/i2c_host/src/mssp.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  idx             1    wreg     enum E2728
  4933 ;;  cb              2   27[COMRAM] PTR FTN(PTR void ,)enum 
  4934 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  4935 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
  4936 ;;  ptr             2   29[COMRAM] PTR void 
  4937 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4938 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  idx             1   31[COMRAM] enum E2728
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;Total ram usage:        5 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; Hardware stack levels required when called: 7
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_I2C_SetDataCompleteCallback
  4961 ;;		_I2C_SetAddressNackCallback
  4962 ;;		_I2C_SetWriteCollisionCallback
  4963 ;;		_I2C_SetDataNackCallback
  4964 ;;		_I2C_SetTimeoutCallback
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text41
  4969   001E4C                     __ptext41:
  4970                           	callstack 0
  4971   001E4C                     _I2C_SetCallback:
  4972                           	callstack 20
  4973                           
  4974                           ;incstack = 0
  4975                           ;I2C_SetCallback@idx stored from wreg
  4976   001E4C  6E20               	movwf	I2C_SetCallback@idx^0,c
  4977   001E4E                     
  4978                           ;mcc_generated_files/i2c_host/src/mssp.c: 304: static void I2C_SetCallback(i2c_callbackI
      +                          ndex_t idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_host/src/mssp.c: 305: 
      +                          {;mcc_generated_files/i2c_host/src/mssp.c: 306:     if(cb)
  4979   001E4E  501C               	movf	I2C_SetCallback@cb^0,w,c
  4980   001E50  101D               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  4981   001E52  B4D8               	btfsc	status,2,c
  4982   001E54  EF2E  F00F         	goto	u1481
  4983   001E58  EF30  F00F         	goto	u1480
  4984   001E5C                     u1481:
  4985   001E5C  EF46  F00F         	goto	l3674
  4986   001E60                     u1480:
  4987   001E60                     
  4988                           ;mcc_generated_files/i2c_host/src/mssp.c: 307:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 308:         I2C_Status.callbackTable[idx] = cb;
  4989   001E60  5020               	movf	I2C_SetCallback@idx^0,w,c
  4990   001E62  0D02               	mullw	2
  4991   001E64  50F3               	movf	243,w,c
  4992   001E66  0F60               	addlw	low _I2C_Status
  4993   001E68  6ED9               	movwf	fsr2l,c
  4994   001E6A  6ADA               	clrf	fsr2h,c
  4995   001E6C  C01C  FFDE         	movff	I2C_SetCallback@cb,postinc2
  4996   001E70  C01D  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  4997                           
  4998                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:         I2C_Status.callbackPayload[idx] =
      +                           ptr;
  4999   001E74  5020               	movf	I2C_SetCallback@idx^0,w,c
  5000   001E76  0D02               	mullw	2
  5001   001E78  50F3               	movf	243,w,c
  5002   001E7A  0F6C               	addlw	low (_I2C_Status+12)
  5003   001E7C  6ED9               	movwf	fsr2l,c
  5004   001E7E  6ADA               	clrf	fsr2h,c
  5005   001E80  C01E  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  5006   001E84  C01F  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  5007                           
  5008                           ;mcc_generated_files/i2c_host/src/mssp.c: 310:     }
  5009   001E88  EF58  F00F         	goto	l612
  5010   001E8C                     l3674:
  5011                           
  5012                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 313:         I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  5013   001E8C  5020               	movf	I2C_SetCallback@idx^0,w,c
  5014   001E8E  0D02               	mullw	2
  5015   001E90  50F3               	movf	243,w,c
  5016   001E92  0F60               	addlw	low _I2C_Status
  5017   001E94  6ED9               	movwf	fsr2l,c
  5018   001E96  6ADA               	clrf	fsr2h,c
  5019   001E98  0EB4               	movlw	low _I2C_CallbackReturnStop
  5020   001E9A  6EDE               	movwf	postinc2,c
  5021   001E9C  0E26               	movlw	high _I2C_CallbackReturnStop
  5022   001E9E  6EDD               	movwf	postdec2,c
  5023                           
  5024                           ;mcc_generated_files/i2c_host/src/mssp.c: 314:         I2C_Status.callbackPayload[idx] =
      +                           (0);
  5025   001EA0  5020               	movf	I2C_SetCallback@idx^0,w,c
  5026   001EA2  0D02               	mullw	2
  5027   001EA4  50F3               	movf	243,w,c
  5028   001EA6  0F6C               	addlw	low (_I2C_Status+12)
  5029   001EA8  6ED9               	movwf	fsr2l,c
  5030   001EAA  6ADA               	clrf	fsr2h,c
  5031   001EAC  6ADE               	clrf	postinc2,c
  5032   001EAE  6ADD               	clrf	postdec2,c
  5033   001EB0                     l612:
  5034   001EB0  0012               	return		;funcret
  5035   001EB2                     __end_of_I2C_SetCallback:
  5036                           	callstack 0
  5037                           
  5038 ;; *************** function _I2C_Open *****************
  5039 ;; Defined at:
  5040 ;;		line 176 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  address         1    wreg     unsigned char 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  address         1   29[COMRAM] unsigned char 
  5045 ;;  returnValue     1   30[COMRAM] enum E93
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      enum E93
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;Total ram usage:        2 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 8
  5062 ;; This function calls:
  5063 ;;		_I2C_MasterClearIrq
  5064 ;;		_I2C_MasterEnableIrq
  5065 ;;		_I2C_MasterOpen
  5066 ;;		_I2C_SetInterruptHandler
  5067 ;; This function is called by:
  5068 ;;		_I2C_Read1ByteRegister
  5069 ;;		_I2C_Write1ByteRegister
  5070 ;;		_I2C_Read2ByteRegister
  5071 ;;		_I2C_Write2ByteRegister
  5072 ;;		_I2C_WriteNBytes
  5073 ;;		_I2C_ReadNBytes
  5074 ;;		_I2C_ReadDataBlock
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text42
  5079   001982                     __ptext42:
  5080                           	callstack 0
  5081   001982                     _I2C_Open:
  5082                           	callstack 20
  5083                           
  5084                           ;incstack = 0
  5085                           ;I2C_Open@address stored from wreg
  5086   001982  6E1E               	movwf	I2C_Open@address^0,c
  5087   001984                     
  5088                           ;mcc_generated_files/i2c_host/src/mssp.c: 176: i2c_error_t I2C_Open(i2c_address_t addres
      +                          s);mcc_generated_files/i2c_host/src/mssp.c: 177: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 178:     i2c_error_t returnValue = I2C_BUSY;
  5089   001984  0E01               	movlw	1
  5090   001986  6E1F               	movwf	I2C_Open@returnValue^0,c
  5091   001988                     
  5092                           ;mcc_generated_files/i2c_host/src/mssp.c: 180:     if(!I2C_Status.inUse)
  5093   001988  0100               	movlb	0	; () banked
  5094   00198A  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  5095   00198C  EFCA  F00C         	goto	u1621
  5096   001990  EFCC  F00C         	goto	u1620
  5097   001994                     u1621:
  5098   001994  EF0E  F00D         	goto	l3854
  5099   001998                     u1620:
  5100   001998                     
  5101                           ; BSR set to: 0
  5102                           ;mcc_generated_files/i2c_host/src/mssp.c: 181:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 182:         I2C_Status.address = address;
  5103   001998  C01E  F07C         	movff	I2C_Open@address,_I2C_Status+28
  5104   00199C                     
  5105                           ; BSR set to: 0
  5106                           ;mcc_generated_files/i2c_host/src/mssp.c: 183:         I2C_Status.busy = 0;
  5107   00199C  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5108   00199E                     
  5109                           ; BSR set to: 0
  5110                           ;mcc_generated_files/i2c_host/src/mssp.c: 184:         I2C_Status.inUse = 1;
  5111   00199E  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  5112   0019A0                     
  5113                           ; BSR set to: 0
  5114                           ;mcc_generated_files/i2c_host/src/mssp.c: 185:         I2C_Status.addressNackCheck = 0;
  5115   0019A0  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5116   0019A2                     
  5117                           ; BSR set to: 0
  5118                           ;mcc_generated_files/i2c_host/src/mssp.c: 186:         I2C_Status.state = I2C_RESET;
  5119   0019A2  0E0E               	movlw	14
  5120   0019A4  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5121   0019A6                     
  5122                           ; BSR set to: 0
  5123                           ;mcc_generated_files/i2c_host/src/mssp.c: 187:         I2C_Status.time_out_value = 500;
  5124   0019A6  0E01               	movlw	1
  5125   0019A8  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  5126   0019AA  0EF4               	movlw	244
  5127   0019AC  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  5128   0019AE                     
  5129                           ; BSR set to: 0
  5130                           ;mcc_generated_files/i2c_host/src/mssp.c: 188:         I2C_Status.bufferFree = 1;
  5131   0019AE  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5132   0019B0                     
  5133                           ; BSR set to: 0
  5134                           ;mcc_generated_files/i2c_host/src/mssp.c: 191:         I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE]=I2C_CallbackReturnStop;
  5135   0019B0  0EB4               	movlw	low _I2C_CallbackReturnStop
  5136   0019B2  6F60               	movwf	_I2C_Status& (0+255),b
  5137   0019B4  0E26               	movlw	high _I2C_CallbackReturnStop
  5138   0019B6  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  5139   0019B8                     
  5140                           ; BSR set to: 0
  5141                           ;mcc_generated_files/i2c_host/src/mssp.c: 192:         I2C_Status.callbackPayload[I2C_DA
      +                          TA_COMPLETE] = (0);
  5142   0019B8  0E00               	movlw	0
  5143   0019BA  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  5144   0019BC  0E00               	movlw	0
  5145   0019BE  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  5146   0019C0                     
  5147                           ; BSR set to: 0
  5148                           ;mcc_generated_files/i2c_host/src/mssp.c: 193:         I2C_Status.callbackTable[I2C_WRIT
      +                          E_COLLISION]=I2C_CallbackReturnStop;
  5149   0019C0  0EB4               	movlw	low _I2C_CallbackReturnStop
  5150   0019C2  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  5151   0019C4  0E26               	movlw	high _I2C_CallbackReturnStop
  5152   0019C6  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  5153   0019C8                     
  5154                           ; BSR set to: 0
  5155                           ;mcc_generated_files/i2c_host/src/mssp.c: 194:         I2C_Status.callbackPayload[I2C_WR
      +                          ITE_COLLISION] = (0);
  5156   0019C8  0E00               	movlw	0
  5157   0019CA  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  5158   0019CC  0E00               	movlw	0
  5159   0019CE  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  5160   0019D0                     
  5161                           ; BSR set to: 0
  5162                           ;mcc_generated_files/i2c_host/src/mssp.c: 195:         I2C_Status.callbackTable[I2C_ADDR
      +                          _NACK]=I2C_CallbackReturnStop;
  5163   0019D0  0EB4               	movlw	low _I2C_CallbackReturnStop
  5164   0019D2  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  5165   0019D4  0E26               	movlw	high _I2C_CallbackReturnStop
  5166   0019D6  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  5167   0019D8                     
  5168                           ; BSR set to: 0
  5169                           ;mcc_generated_files/i2c_host/src/mssp.c: 196:         I2C_Status.callbackPayload[I2C_AD
      +                          DR_NACK] = (0);
  5170   0019D8  0E00               	movlw	0
  5171   0019DA  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  5172   0019DC  0E00               	movlw	0
  5173   0019DE  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  5174   0019E0                     
  5175                           ; BSR set to: 0
  5176                           ;mcc_generated_files/i2c_host/src/mssp.c: 197:         I2C_Status.callbackTable[I2C_DATA
      +                          _NACK]=I2C_CallbackReturnStop;
  5177   0019E0  0EB4               	movlw	low _I2C_CallbackReturnStop
  5178   0019E2  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  5179   0019E4  0E26               	movlw	high _I2C_CallbackReturnStop
  5180   0019E6  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  5181   0019E8                     
  5182                           ; BSR set to: 0
  5183                           ;mcc_generated_files/i2c_host/src/mssp.c: 198:         I2C_Status.callbackPayload[I2C_DA
      +                          TA_NACK] = (0);
  5184   0019E8  0E00               	movlw	0
  5185   0019EA  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  5186   0019EC  0E00               	movlw	0
  5187   0019EE  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  5188   0019F0                     
  5189                           ; BSR set to: 0
  5190                           ;mcc_generated_files/i2c_host/src/mssp.c: 199:         I2C_Status.callbackTable[I2C_TIME
      +                          OUT]=I2C_CallbackReturnReset;
  5191   0019F0  0EB0               	movlw	low _I2C_CallbackReturnReset
  5192   0019F2  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  5193   0019F4  0E26               	movlw	high _I2C_CallbackReturnReset
  5194   0019F6  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  5195   0019F8                     
  5196                           ; BSR set to: 0
  5197                           ;mcc_generated_files/i2c_host/src/mssp.c: 200:         I2C_Status.callbackPayload[I2C_TI
      +                          MEOUT] = (0);
  5198   0019F8  0E00               	movlw	0
  5199   0019FA  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  5200   0019FC  0E00               	movlw	0
  5201   0019FE  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  5202   001A00                     
  5203                           ; BSR set to: 0
  5204                           ;mcc_generated_files/i2c_host/src/mssp.c: 202:         I2C_SetInterruptHandler(I2C_Maste
      +                          rIsr);
  5205   001A00  0E76               	movlw	low _I2C_MasterIsr
  5206   001A02  6E1C               	movwf	I2C_SetInterruptHandler@InterruptHandler^0,c
  5207   001A04  0E26               	movlw	high _I2C_MasterIsr
  5208   001A06  6E1D               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)^0,c
  5209   001A08  EC0F  F013         	call	_I2C_SetInterruptHandler	;wreg free
  5210   001A0C                     
  5211                           ;mcc_generated_files/i2c_host/src/mssp.c: 203:         I2C_MasterClearIrq();
  5212   001A0C  EC4E  F013         	call	_I2C_MasterClearIrq	;wreg free
  5213   001A10                     
  5214                           ;mcc_generated_files/i2c_host/src/mssp.c: 204:         I2C_MasterOpen();
  5215   001A10  EC4F  F012         	call	_I2C_MasterOpen	;wreg free
  5216   001A14                     
  5217                           ;mcc_generated_files/i2c_host/src/mssp.c: 205:         I2C_MasterEnableIrq();
  5218   001A14  EC46  F013         	call	_I2C_MasterEnableIrq	;wreg free
  5219   001A18                     
  5220                           ;mcc_generated_files/i2c_host/src/mssp.c: 206:         returnValue = I2C_NOERR;
  5221   001A18  0E00               	movlw	0
  5222   001A1A  6E1F               	movwf	I2C_Open@returnValue^0,c
  5223   001A1C                     l3854:
  5224                           
  5225                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return returnValue;
  5226   001A1C  501F               	movf	I2C_Open@returnValue^0,w,c
  5227   001A1E  0012               	return		;funcret
  5228   001A20                     __end_of_I2C_Open:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _I2C_SetInterruptHandler *****************
  5232 ;; Defined at:
  5233 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  InterruptHan    2   27[COMRAM] PTR FTN()void 
  5236 ;;		 -> I2C_MasterIsr(1), 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, status,2, status,0
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;Total ram usage:        2 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; Hardware stack levels required when called: 7
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_I2C_Open
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text43
  5263   00261E                     __ptext43:
  5264                           	callstack 0
  5265   00261E                     _I2C_SetInterruptHandler:
  5266                           	callstack 20
  5267   00261E                     
  5268                           ;mcc_generated_files/i2c_host/src/mssp.c: 299: void I2C_SetInterruptHandler(void (* Inte
      +                          rruptHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 300: {;mcc_generated_files
      +                          /i2c_host/src/mssp.c: 301:     MSSP_InterruptHandler = InterruptHandler;
  5269   00261E  C01C  F050         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  5270   002622  C01D  F051         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  5271   002626  0012               	return		;funcret
  5272   002628                     __end_of_I2C_SetInterruptHandler:
  5273                           	callstack 0
  5274                           
  5275 ;; *************** function _I2C_MasterOpen *****************
  5276 ;; Defined at:
  5277 ;;		line 544 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      _Bool 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;Total ram usage:        0 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 7
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_I2C_Open
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text44
  5306   00249E                     __ptext44:
  5307                           	callstack 0
  5308   00249E                     _I2C_MasterOpen:
  5309                           	callstack 20
  5310   00249E                     
  5311                           ;mcc_generated_files/i2c_host/src/mssp.c: 546:     if(!SSPCON1bits.SSPEN)
  5312   00249E  BAC6               	btfsc	198,5,c	;volatile
  5313   0024A0  EF54  F012         	goto	u1451
  5314   0024A4  EF56  F012         	goto	u1450
  5315   0024A8                     u1451:
  5316   0024A8  EF5F  F012         	goto	l731
  5317   0024AC                     u1450:
  5318   0024AC                     
  5319                           ;mcc_generated_files/i2c_host/src/mssp.c: 547:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 548:         SSPSTAT = 0x80;
  5320   0024AC  0E80               	movlw	128
  5321   0024AE  6EC7               	movwf	199,c	;volatile
  5322                           
  5323                           ;mcc_generated_files/i2c_host/src/mssp.c: 549:         SSPCON1 = 0x08;
  5324   0024B0  0E08               	movlw	8
  5325   0024B2  6EC6               	movwf	198,c	;volatile
  5326                           
  5327                           ;mcc_generated_files/i2c_host/src/mssp.c: 550:         SSPCON2 = 0x00;
  5328   0024B4  0E00               	movlw	0
  5329   0024B6  6EC5               	movwf	197,c	;volatile
  5330                           
  5331                           ;mcc_generated_files/i2c_host/src/mssp.c: 551:         SSPADD = 0x27;
  5332   0024B8  0E27               	movlw	39
  5333   0024BA  6EC8               	movwf	200,c	;volatile
  5334   0024BC                     
  5335                           ;mcc_generated_files/i2c_host/src/mssp.c: 552:         SSPCON1bits.SSPEN = 1;
  5336   0024BC  8AC6               	bsf	198,5,c	;volatile
  5337   0024BE                     l731:
  5338   0024BE  0012               	return		;funcret
  5339   0024C0                     __end_of_I2C_MasterOpen:
  5340                           	callstack 0
  5341                           
  5342 ;; *************** function _I2C_MasterEnableIrq *****************
  5343 ;; Defined at:
  5344 ;;		line 627 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		None
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;Total ram usage:        0 bytes
  5363 ;; Hardware stack levels used: 1
  5364 ;; Hardware stack levels required when called: 7
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_I2C_Open
  5369 ;;		_I2C_SetTimeOut
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text45
  5374   00268C                     __ptext45:
  5375                           	callstack 0
  5376   00268C                     _I2C_MasterEnableIrq:
  5377                           	callstack 20
  5378   00268C                     
  5379                           ;mcc_generated_files/i2c_host/src/mssp.c: 629:     PIE1bits.SSPIE = 1;
  5380   00268C  869D               	bsf	157,3,c	;volatile
  5381   00268E  0012               	return		;funcret
  5382   002690                     __end_of_I2C_MasterEnableIrq:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function _I2C_MasterWrite *****************
  5386 ;; Defined at:
  5387 ;;		line 252 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      enum E93
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used: 1
  5407 ;; Hardware stack levels required when called: 9
  5408 ;; This function calls:
  5409 ;;		_I2C_MasterOperation
  5410 ;; This function is called by:
  5411 ;;		_I2C_Read1ByteRegister
  5412 ;;		_I2C_Write1ByteRegister
  5413 ;;		_I2C_Read2ByteRegister
  5414 ;;		_I2C_Write2ByteRegister
  5415 ;;		_I2C_WriteNBytes
  5416 ;;		_I2C_ReadDataBlock
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text46
  5421   002628                     __ptext46:
  5422                           	callstack 0
  5423   002628                     _I2C_MasterWrite:
  5424                           	callstack 19
  5425   002628                     
  5426                           ;mcc_generated_files/i2c_host/src/mssp.c: 254:     return I2C_MasterOperation(0);;	Retur
      +                          n value of _I2C_MasterWrite is never used
  5427   002628  0E00               	movlw	0
  5428   00262A  ECEF  F010         	call	_I2C_MasterOperation
  5429   00262E  0012               	return		;funcret
  5430   002630                     __end_of_I2C_MasterWrite:
  5431                           	callstack 0
  5432                           
  5433 ;; *************** function _I2C_MasterOperation *****************
  5434 ;; Defined at:
  5435 ;;		line 226 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  read            1    wreg     _Bool 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  read            1   27[COMRAM] _Bool 
  5440 ;;  returnValue     1   28[COMRAM] enum E93
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      enum E93
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;Total ram usage:        2 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 8
  5457 ;; This function calls:
  5458 ;;		_I2C_MasterStart
  5459 ;; This function is called by:
  5460 ;;		_I2C_MasterWrite
  5461 ;;		_I2C_MasterRead
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text47
  5466   0021DE                     __ptext47:
  5467                           	callstack 0
  5468   0021DE                     _I2C_MasterOperation:
  5469                           	callstack 19
  5470                           
  5471                           ;incstack = 0
  5472                           ;I2C_MasterOperation@read stored from wreg
  5473   0021DE  6E1C               	movwf	I2C_MasterOperation@read^0,c
  5474   0021E0                     
  5475                           ;mcc_generated_files/i2c_host/src/mssp.c: 226: i2c_error_t I2C_MasterOperation(_Bool rea
      +                          d);mcc_generated_files/i2c_host/src/mssp.c: 227: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 228:     i2c_error_t returnValue = I2C_BUSY;
  5476   0021E0  0E01               	movlw	1
  5477   0021E2  6E1D               	movwf	I2C_MasterOperation@returnValue^0,c
  5478   0021E4                     
  5479                           ;mcc_generated_files/i2c_host/src/mssp.c: 229:     if(!I2C_Status.busy)
  5480   0021E4  0100               	movlb	0	; () banked
  5481   0021E6  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5482   0021E8  EFF8  F010         	goto	u1461
  5483   0021EC  EFFA  F010         	goto	u1460
  5484   0021F0                     u1461:
  5485   0021F0  EF0D  F011         	goto	l3666
  5486   0021F4                     u1460:
  5487   0021F4                     
  5488                           ; BSR set to: 0
  5489                           ;mcc_generated_files/i2c_host/src/mssp.c: 230:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 231:         I2C_Status.busy = 1;
  5490   0021F4  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  5491   0021F6                     
  5492                           ; BSR set to: 0
  5493                           ;mcc_generated_files/i2c_host/src/mssp.c: 232:         returnValue = I2C_NOERR;
  5494   0021F6  0E00               	movlw	0
  5495   0021F8  6E1D               	movwf	I2C_MasterOperation@returnValue^0,c
  5496   0021FA                     
  5497                           ; BSR set to: 0
  5498                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:         if(read)
  5499   0021FA  501C               	movf	I2C_MasterOperation@read^0,w,c
  5500   0021FC  B4D8               	btfsc	status,2,c
  5501   0021FE  EF03  F011         	goto	u1471
  5502   002202  EF05  F011         	goto	u1470
  5503   002206                     u1471:
  5504   002206  EF09  F011         	goto	l3662
  5505   00220A                     u1470:
  5506   00220A                     
  5507                           ; BSR set to: 0
  5508                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 236:             I2C_Status.state = I2C_SEND_ADR_READ;
  5509   00220A  0E01               	movlw	1
  5510   00220C  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5511                           
  5512                           ;mcc_generated_files/i2c_host/src/mssp.c: 237:         }
  5513   00220E  EF0B  F011         	goto	l3664
  5514   002212                     l3662:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;mcc_generated_files/i2c_host/src/mssp.c: 239:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 240:             I2C_Status.state = I2C_SEND_ADR_WRITE;
  5518   002212  0E02               	movlw	2
  5519   002214  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5520   002216                     l3664:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;mcc_generated_files/i2c_host/src/mssp.c: 242:         I2C_MasterStart();
  5524   002216  EC48  F013         	call	_I2C_MasterStart	;wreg free
  5525   00221A                     l3666:
  5526                           
  5527                           ;mcc_generated_files/i2c_host/src/mssp.c: 244:     return returnValue;
  5528   00221A  501D               	movf	I2C_MasterOperation@returnValue^0,w,c
  5529   00221C  0012               	return		;funcret
  5530   00221E                     __end_of_I2C_MasterOperation:
  5531                           	callstack 0
  5532                           
  5533 ;; *************** function _I2C_MasterStart *****************
  5534 ;; Defined at:
  5535 ;;		line 589 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1    wreg      void 
  5542 ;; Registers used:
  5543 ;;		None
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used: 1
  5555 ;; Hardware stack levels required when called: 7
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_I2C_MasterOperation
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text48
  5564   002690                     __ptext48:
  5565                           	callstack 0
  5566   002690                     _I2C_MasterStart:
  5567                           	callstack 19
  5568   002690                     
  5569                           ;mcc_generated_files/i2c_host/src/mssp.c: 591:     SSPCON2bits.SEN = 1;
  5570   002690  80C5               	bsf	197,0,c	;volatile
  5571   002692  0012               	return		;funcret
  5572   002694                     __end_of_I2C_MasterStart:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _I2C_Close *****************
  5576 ;; Defined at:
  5577 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;		None
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  returnValue     1   27[COMRAM] enum E93
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      enum E93
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;Total ram usage:        1 bytes
  5596 ;; Hardware stack levels used: 1
  5597 ;; Hardware stack levels required when called: 8
  5598 ;; This function calls:
  5599 ;;		_I2C_MasterClearIrq
  5600 ;;		_I2C_MasterClose
  5601 ;;		_I2C_MasterDisableIrq
  5602 ;; This function is called by:
  5603 ;;		_I2C_Read1ByteRegister
  5604 ;;		_I2C_Write1ByteRegister
  5605 ;;		_I2C_Read2ByteRegister
  5606 ;;		_I2C_Write2ByteRegister
  5607 ;;		_I2C_WriteNBytes
  5608 ;;		_I2C_ReadNBytes
  5609 ;;		_I2C_ReadDataBlock
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text49
  5614   00232A                     __ptext49:
  5615                           	callstack 0
  5616   00232A                     _I2C_Close:
  5617                           	callstack 20
  5618   00232A                     
  5619                           ;mcc_generated_files/i2c_host/src/mssp.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  5620   00232A  0E01               	movlw	1
  5621   00232C  6E1C               	movwf	I2C_Close@returnValue^0,c
  5622   00232E                     
  5623                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     if(!I2C_Status.busy)
  5624   00232E  0100               	movlb	0	; () banked
  5625   002330  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5626   002332  EF9D  F011         	goto	u1641
  5627   002336  EF9F  F011         	goto	u1640
  5628   00233A                     u1641:
  5629   00233A  EFA9  F011         	goto	l3884
  5630   00233E                     u1640:
  5631   00233E                     
  5632                           ; BSR set to: 0
  5633                           ;mcc_generated_files/i2c_host/src/mssp.c: 215:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 216:         I2C_Status.inUse = 0;
  5634   00233E  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  5635                           
  5636                           ;mcc_generated_files/i2c_host/src/mssp.c: 217:         I2C_Status.address = 0xff;
  5637   002340  697C               	setf	(_I2C_Status+28)& (0+255),b
  5638   002342                     
  5639                           ; BSR set to: 0
  5640                           ;mcc_generated_files/i2c_host/src/mssp.c: 218:         I2C_MasterClearIrq();
  5641   002342  EC4E  F013         	call	_I2C_MasterClearIrq	;wreg free
  5642                           
  5643                           ;mcc_generated_files/i2c_host/src/mssp.c: 219:         I2C_MasterDisableIrq();
  5644   002346  EC4A  F013         	call	_I2C_MasterDisableIrq	;wreg free
  5645                           
  5646                           ;mcc_generated_files/i2c_host/src/mssp.c: 220:         I2C_MasterClose();
  5647   00234A  EC4C  F013         	call	_I2C_MasterClose	;wreg free
  5648   00234E                     
  5649                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:         returnValue = I2C_Status.error;
  5650   00234E  C082  F01C         	movff	_I2C_Status+34,I2C_Close@returnValue
  5651   002352                     l3884:
  5652                           
  5653                           ;mcc_generated_files/i2c_host/src/mssp.c: 223:     return returnValue;
  5654   002352  501C               	movf	I2C_Close@returnValue^0,w,c
  5655   002354  0012               	return		;funcret
  5656   002356                     __end_of_I2C_Close:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function _I2C_MasterDisableIrq *****************
  5660 ;; Defined at:
  5661 ;;		line 637 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;		None
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;		None
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		None
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;Total ram usage:        0 bytes
  5680 ;; Hardware stack levels used: 1
  5681 ;; Hardware stack levels required when called: 7
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_I2C_Close
  5686 ;;		_I2C_SetTimeOut
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text50
  5691   002694                     __ptext50:
  5692                           	callstack 0
  5693   002694                     _I2C_MasterDisableIrq:
  5694                           	callstack 20
  5695   002694                     
  5696                           ;mcc_generated_files/i2c_host/src/mssp.c: 639:     PIE1bits.SSPIE = 0;
  5697   002694  969D               	bcf	157,3,c	;volatile
  5698   002696  0012               	return		;funcret
  5699   002698                     __end_of_I2C_MasterDisableIrq:
  5700                           	callstack 0
  5701                           
  5702 ;; *************** function _I2C_MasterClose *****************
  5703 ;; Defined at:
  5704 ;;		line 558 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;		None
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;		None
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		None
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;Total ram usage:        0 bytes
  5723 ;; Hardware stack levels used: 1
  5724 ;; Hardware stack levels required when called: 7
  5725 ;; This function calls:
  5726 ;;		Nothing
  5727 ;; This function is called by:
  5728 ;;		_I2C_Close
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text51
  5733   002698                     __ptext51:
  5734                           	callstack 0
  5735   002698                     _I2C_MasterClose:
  5736                           	callstack 20
  5737   002698                     
  5738                           ;mcc_generated_files/i2c_host/src/mssp.c: 561:     SSPCON1bits.SSPEN = 0;
  5739   002698  9AC6               	bcf	198,5,c	;volatile
  5740   00269A  0012               	return		;funcret
  5741   00269C                     __end_of_I2C_MasterClose:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _I2C_MasterClearIrq *****************
  5745 ;; Defined at:
  5746 ;;		line 642 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		None
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 7
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_I2C_Open
  5771 ;;		_I2C_Close
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text52
  5776   00269C                     __ptext52:
  5777                           	callstack 0
  5778   00269C                     _I2C_MasterClearIrq:
  5779                           	callstack 20
  5780   00269C                     
  5781                           ;mcc_generated_files/i2c_host/src/mssp.c: 644:     PIR1bits.SSPIF = 0;
  5782   00269C  969E               	bcf	158,3,c	;volatile
  5783   00269E  0012               	return		;funcret
  5784   0026A0                     __end_of_I2C_MasterClearIrq:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  5788 ;; Defined at:
  5789 ;;		line 90 in file "mcc_generated_files/system/src/interrupt.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;Total ram usage:       10 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; Hardware stack levels required when called: 6
  5810 ;; This function calls:
  5811 ;;		NULL
  5812 ;;		_I2C_MasterIsr
  5813 ;; This function is called by:
  5814 ;;		Interrupt level 2
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	intcode
  5819   000008                     __pintcode:
  5820                           	callstack 0
  5821   000008                     _INTERRUPT_InterruptManagerHigh:
  5822                           	callstack 19
  5823                           
  5824                           ;incstack = 0
  5825   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5826   00000A  CFFA F012          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  5827   00000E  CFFB F013          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  5828   000012  CFD9 F014          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  5829   000016  CFDA F015          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  5830   00001A  CFF3 F016          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+4
  5831   00001E  CFF4 F017          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+5
  5832   000022  CFF6 F018          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  5833   000026  CFF7 F019          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  5834   00002A  CFF8 F01A          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  5835   00002E  CFF5 F01B          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  5836   000032                     
  5837                           ;mcc_generated_files/system/src/interrupt.c: 93:     if(PIE2bits.BCLIE == 1 && PIR2bits.
      +                          BCLIF == 1)
  5838   000032  A6A0               	btfss	160,3,c	;volatile
  5839   000034  EF1E  F000         	goto	i2u257_41
  5840   000038  EF20  F000         	goto	i2u257_40
  5841   00003C                     i2u257_41:
  5842   00003C  EF35  F000         	goto	i2l874
  5843   000040                     i2u257_40:
  5844   000040  A6A1               	btfss	161,3,c	;volatile
  5845   000042  EF25  F000         	goto	i2u258_41
  5846   000046  EF27  F000         	goto	i2u258_40
  5847   00004A                     i2u258_41:
  5848   00004A  EF35  F000         	goto	i2l874
  5849   00004E                     i2u258_40:
  5850   00004E                     i2l4922:
  5851                           
  5852                           ;mcc_generated_files/system/src/interrupt.c: 94:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 95:         MSSP_InterruptHandler();
  5853   00004E  D802               	call	i2u259_48
  5854   000050  EF33  F000         	goto	i2u259_49
  5855   000054                     i2u259_48:
  5856   000054  0005               	push	
  5857   000056  6EFA               	movwf	pclath,c
  5858   000058  5050               	movf	_MSSP_InterruptHandler^0,w,c
  5859   00005A  6EFD               	movwf	tosl,c
  5860   00005C  5051               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  5861   00005E  6EFE               	movwf	tosh,c
  5862   000060  6AFF               	clrf	tosu,c
  5863   000062  50FA               	movf	pclath,w,c
  5864   000064  0012               	return		;indir
  5865   000066                     i2u259_49:
  5866                           
  5867                           ;mcc_generated_files/system/src/interrupt.c: 96:     }
  5868   000066  EF45  F000         	goto	i2l878
  5869   00006A                     i2l874:
  5870   00006A  A69D               	btfss	157,3,c	;volatile
  5871   00006C  EF3A  F000         	goto	i2u260_41
  5872   000070  EF3C  F000         	goto	i2u260_40
  5873   000074                     i2u260_41:
  5874   000074  EF45  F000         	goto	i2l878
  5875   000078                     i2u260_40:
  5876   000078  A69E               	btfss	158,3,c	;volatile
  5877   00007A  EF41  F000         	goto	i2u261_41
  5878   00007E  EF43  F000         	goto	i2u261_40
  5879   000082                     i2u261_41:
  5880   000082  EF45  F000         	goto	i2l878
  5881   000086                     i2u261_40:
  5882   000086  EF27  F000         	goto	i2l4922
  5883   00008A                     i2l878:
  5884   00008A  C01B  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  5885   00008E  C01A  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  5886   000092  C019  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  5887   000096  C018  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  5888   00009A  C017  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+5,prodh
  5889   00009E  C016  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+4,prodl
  5890   0000A2  C015  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  5891   0000A6  C014  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  5892   0000AA  C013  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  5893   0000AE  C012  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  5894   0000B2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5895   0000B4  0011               	retfie		f
  5896   0000B6                     __end_of_INTERRUPT_InterruptManagerHigh:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _I2C_MasterIsr *****************
  5900 ;; Defined at:
  5901 ;;		line 318 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; Hardware stack levels required when called: 5
  5922 ;; This function calls:
  5923 ;;		_I2C_MasterFsm
  5924 ;; This function is called by:
  5925 ;;		_I2C_Open
  5926 ;;		_INTERRUPT_InterruptManagerHigh
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text54
  5931   002676                     __ptext54:
  5932                           	callstack 0
  5933   002676                     _I2C_MasterIsr:
  5934                           	callstack 19
  5935   002676                     
  5936                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:     I2C_MasterFsm();
  5937   002676  ECBA  F00E         	call	_I2C_MasterFsm	;wreg free
  5938   00267A  0012               	return		;funcret
  5939   00267C                     __end_of_I2C_MasterIsr:
  5940                           	callstack 0
  5941                           
  5942 ;; *************** function _I2C_MasterFsm *****************
  5943 ;; Defined at:
  5944 ;;		line 323 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;Total ram usage:        3 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 4
  5965 ;; This function calls:
  5966 ;;		_I2C_DO_ADDRESS_NACK
  5967 ;;		_I2C_DO_IDLE
  5968 ;;		_I2C_DO_RCEN
  5969 ;;		_I2C_DO_RESET
  5970 ;;		_I2C_DO_RX
  5971 ;;		_I2C_DO_RX_ACK
  5972 ;;		_I2C_DO_RX_NACK_RESTART
  5973 ;;		_I2C_DO_RX_NACK_STOP
  5974 ;;		_I2C_DO_SEND_ADR_READ
  5975 ;;		_I2C_DO_SEND_ADR_WRITE
  5976 ;;		_I2C_DO_SEND_RESTART
  5977 ;;		_I2C_DO_SEND_RESTART_READ
  5978 ;;		_I2C_DO_SEND_RESTART_WRITE
  5979 ;;		_I2C_DO_SEND_STOP
  5980 ;;		_I2C_DO_TX
  5981 ;;		_I2C_DO_TX_EMPTY
  5982 ;;		_I2C_MasterIsNack
  5983 ;;		i2_I2C_MasterClearIrq
  5984 ;; This function is called by:
  5985 ;;		_I2C_MasterIsr
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text55
  5990   001D74                     __ptext55:
  5991                           	callstack 0
  5992   001D74                     _I2C_MasterFsm:
  5993                           	callstack 19
  5994   001D74                     
  5995                           ;mcc_generated_files/i2c_host/src/mssp.c: 325:     I2C_MasterClearIrq();
  5996   001D74  EC50  F013         	call	i2_I2C_MasterClearIrq	;wreg free
  5997   001D78                     
  5998                           ;mcc_generated_files/i2c_host/src/mssp.c: 327:     if(I2C_Status.addressNackCheck && I2C
      +                          _MasterIsNack())
  5999   001D78  0100               	movlb	0	; () banked
  6000   001D7A  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  6001   001D7C  EFC2  F00E         	goto	i2u199_41
  6002   001D80  EFC4  F00E         	goto	i2u199_40
  6003   001D84                     i2u199_41:
  6004   001D84  EFD1  F00E         	goto	i2l4284
  6005   001D88                     i2u199_40:
  6006   001D88                     
  6007                           ; BSR set to: 0
  6008   001D88  ECC2  F012         	call	_I2C_MasterIsNack	;wreg free
  6009   001D8C  0900               	iorlw	0
  6010   001D8E  B4D8               	btfsc	status,2,c
  6011   001D90  EFCC  F00E         	goto	i2u200_41
  6012   001D94  EFCE  F00E         	goto	i2u200_40
  6013   001D98                     i2u200_41:
  6014   001D98  EFD1  F00E         	goto	i2l4284
  6015   001D9C                     i2u200_40:
  6016   001D9C                     
  6017                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 329:         I2C_Status.state = I2C_ADDRESS_NACK;
  6018   001D9C  0E0F               	movlw	15
  6019   001D9E  0100               	movlb	0	; () banked
  6020   001DA0  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  6021   001DA2                     i2l4284:
  6022                           
  6023                           ;mcc_generated_files/i2c_host/src/mssp.c: 331:     I2C_Status.state = i2c_fsmStateTable[
      +                          I2C_Status.state]();
  6024   001DA2  0100               	movlb	0	; () banked
  6025   001DA4  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  6026   001DA6  0D02               	mullw	2
  6027   001DA8  50F3               	movf	243,w,c
  6028   001DAA  0F01               	addlw	low _i2c_fsmStateTable
  6029   001DAC  6E0F               	movwf	??_I2C_MasterFsm^0,c
  6030   001DAE  C00F  FFF6         	movff	??_I2C_MasterFsm,tblptrl
  6031   001DB2                     	if	1	;There is more than 1 active tblptr byte
  6032   001DB2  0E10               	movlw	high __smallconst
  6033   001DB4  6EF7               	movwf	tblptrh,c
  6034   001DB6                     	endif
  6035   001DB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6036   001DB6  6AF8               	clrf	tblptru,c
  6037   001DB8                     	endif
  6038   001DB8                     	if	0	;tblptru may be non-zero
  6039   001DB8                     	endif
  6040   001DB8  0009               	tblrd		*+
  6041   001DBA  CFF5 F010          	movff	tablat,??_I2C_MasterFsm+1
  6042   001DBE  0009               	tblrd		*+
  6043   001DC0  CFF5 F011          	movff	tablat,??_I2C_MasterFsm+2
  6044   001DC4  D802               	call	i2u201_48
  6045   001DC6  EFEE  F00E         	goto	i2u201_49
  6046   001DCA                     i2u201_48:
  6047   001DCA  0005               	push	
  6048   001DCC  6EFA               	movwf	pclath,c
  6049   001DCE  5010               	movf	(??_I2C_MasterFsm+1)^0,w,c
  6050   001DD0  6EFD               	movwf	tosl,c
  6051   001DD2  5011               	movf	(??_I2C_MasterFsm+2)^0,w,c
  6052   001DD4  6EFE               	movwf	tosh,c
  6053   001DD6  6AFF               	clrf	tosu,c
  6054   001DD8  50FA               	movf	pclath,w,c
  6055   001DDA  0012               	return		;indir
  6056   001DDC                     i2u201_49:
  6057   001DDC  0100               	movlb	0	; () banked
  6058   001DDE  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  6059   001DE0                     
  6060                           ; BSR set to: 0
  6061   001DE0  0012               	return		;funcret
  6062   001DE2                     __end_of_I2C_MasterFsm:
  6063                           	callstack 0
  6064                           
  6065 ;; *************** function i2_I2C_MasterClearIrq *****************
  6066 ;; Defined at:
  6067 ;;		line 642 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		None
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_I2C_MasterFsm
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text56
  6095   0026A0                     __ptext56:
  6096                           	callstack 0
  6097   0026A0                     i2_I2C_MasterClearIrq:
  6098                           	callstack 22
  6099   0026A0                     
  6100                           ;mcc_generated_files/i2c_host/src/mssp.c: 644:     PIR1bits.SSPIF = 0;
  6101   0026A0  969E               	bcf	158,3,c	;volatile
  6102   0026A2  0012               	return		;funcret
  6103   0026A4                     __end_ofi2_I2C_MasterClearIrq:
  6104                           	callstack 0
  6105                           
  6106 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  6107 ;; Defined at:
  6108 ;;		line 501 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      enum E2710
  6115 ;; Registers used:
  6116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;Total ram usage:        2 bytes
  6127 ;; Hardware stack levels used: 1
  6128 ;; Hardware stack levels required when called: 3
  6129 ;; This function calls:
  6130 ;;		NULL
  6131 ;;		_I2C_CallbackReturnReset
  6132 ;;		_I2C_CallbackReturnStop
  6133 ;;		_I2C_DO_SEND_RESTART
  6134 ;;		_I2C_DO_SEND_STOP
  6135 ;;		_rd1RegCompleteHandler
  6136 ;;		_rd2RegCompleteHandler
  6137 ;;		_rdBlkRegCompleteHandler
  6138 ;;		_wr1RegCompleteHandler
  6139 ;;		_wr2RegCompleteHandler
  6140 ;; This function is called by:
  6141 ;;		_I2C_MasterFsm
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text57
  6146   001EB2                     __ptext57:
  6147                           	callstack 0
  6148   001EB2                     _I2C_DO_ADDRESS_NACK:
  6149                           	callstack 19
  6150   001EB2                     
  6151                           ;mcc_generated_files/i2c_host/src/mssp.c: 503:     I2C_Status.addressNackCheck = 0;
  6152   001EB2  0100               	movlb	0	; () banked
  6153   001EB4  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  6154   001EB6                     
  6155                           ; BSR set to: 0
  6156                           ;mcc_generated_files/i2c_host/src/mssp.c: 504:     I2C_Status.error = I2C_FAIL;
  6157   001EB6  0E02               	movlw	2
  6158   001EB8  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  6159                           
  6160                           ;mcc_generated_files/i2c_host/src/mssp.c: 505:     switch(I2C_Status.callbackTable[I2C_A
      +                          DDR_NACK](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  6161   001EBA  EF67  F00F         	goto	i2l4036
  6162   001EBE                     i2l4026:
  6163                           
  6164                           ;mcc_generated_files/i2c_host/src/mssp.c: 509:             return I2C_DO_SEND_RESTART();
  6165   001EBE  EC28  F013         	call	_I2C_DO_SEND_RESTART	;wreg free
  6166   001EC2  EF8B  F00F         	goto	i2l710
  6167   001EC6                     i2l4030:
  6168                           
  6169                           ;mcc_generated_files/i2c_host/src/mssp.c: 511:             return I2C_DO_SEND_STOP();
  6170   001EC6  EC24  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  6171   001ECA  EF8B  F00F         	goto	i2l710
  6172   001ECE                     i2l4036:
  6173                           
  6174                           ; BSR set to: 0
  6175   001ECE  C070  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  6176   001ED2  C071  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  6177   001ED6  D802               	call	i2u171_48
  6178   001ED8  EF77  F00F         	goto	i2u171_49
  6179   001EDC                     i2u171_48:
  6180   001EDC  0005               	push	
  6181   001EDE  6EFA               	movwf	pclath,c
  6182   001EE0  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  6183   001EE2  6EFD               	movwf	tosl,c
  6184   001EE4  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  6185   001EE6  6EFE               	movwf	tosh,c
  6186   001EE8  6AFF               	clrf	tosu,c
  6187   001EEA  50FA               	movf	pclath,w,c
  6188   001EEC  0012               	return		;indir
  6189   001EEE                     i2u171_49:
  6190   001EEE  6E0D               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  6191   001EF0  6A0E               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  6192                           
  6193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6194                           ; Switch size 1, requested type "simple"
  6195                           ; Number of cases is 1, Range of values is 0 to 0
  6196                           ; switch strategies available:
  6197                           ; Name         Instructions Cycles
  6198                           ; simple_byte            4     3 (average)
  6199                           ;	Chosen strategy is simple_byte
  6200   001EF2  500E               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  6201   001EF4  0A00               	xorlw	0	; case 0
  6202   001EF6  B4D8               	btfsc	status,2,c
  6203   001EF8  EF80  F00F         	goto	i2l5602
  6204   001EFC  EF63  F00F         	goto	i2l4030
  6205   001F00                     i2l5602:
  6206                           
  6207                           ; Switch size 1, requested type "simple"
  6208                           ; Number of cases is 2, Range of values is 2 to 3
  6209                           ; switch strategies available:
  6210                           ; Name         Instructions Cycles
  6211                           ; simple_byte            7     4 (average)
  6212                           ;	Chosen strategy is simple_byte
  6213   001F00  500D               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  6214   001F02  0A02               	xorlw	2	; case 2
  6215   001F04  B4D8               	btfsc	status,2,c
  6216   001F06  EF5F  F00F         	goto	i2l4026
  6217   001F0A  0A01               	xorlw	1	; case 3
  6218   001F0C  B4D8               	btfsc	status,2,c
  6219   001F0E  EF5F  F00F         	goto	i2l4026
  6220   001F12  EF63  F00F         	goto	i2l4030
  6221   001F16                     i2l710:
  6222   001F16  0012               	return		;funcret
  6223   001F18                     __end_of_I2C_DO_ADDRESS_NACK:
  6224                           	callstack 0
  6225                           
  6226 ;; *************** function _I2C_DO_RESET *****************
  6227 ;; Defined at:
  6228 ;;		line 495 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      enum E2710
  6235 ;; Registers used:
  6236 ;;		wreg, status,2
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_I2C_MasterFsm
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text58
  6256   0025C8                     __ptext58:
  6257                           	callstack 0
  6258   0025C8                     _I2C_DO_RESET:
  6259                           	callstack 22
  6260   0025C8                     
  6261                           ;mcc_generated_files/i2c_host/src/mssp.c: 497:     I2C_Status.busy = 0;
  6262   0025C8  0100               	movlb	0	; () banked
  6263   0025CA  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  6264   0025CC                     
  6265                           ; BSR set to: 0
  6266                           ;mcc_generated_files/i2c_host/src/mssp.c: 498:     I2C_Status.error = I2C_NOERR;
  6267   0025CC  0E00               	movlw	0
  6268   0025CE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  6269   0025D0                     
  6270                           ; BSR set to: 0
  6271                           ;mcc_generated_files/i2c_host/src/mssp.c: 499:     return I2C_RESET;
  6272   0025D0  0E0E               	movlw	14
  6273   0025D2                     
  6274                           ; BSR set to: 0
  6275   0025D2  0012               	return		;funcret
  6276   0025D4                     __end_of_I2C_DO_RESET:
  6277                           	callstack 0
  6278                           
  6279 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  6280 ;; Defined at:
  6281 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      enum E2710
  6288 ;; Registers used:
  6289 ;;		wreg, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;Total ram usage:        0 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 1
  6302 ;; This function calls:
  6303 ;;		_I2C_MasterSendNack
  6304 ;; This function is called by:
  6305 ;;		_I2C_DO_RX
  6306 ;;		_I2C_MasterFsm
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text59
  6311   002630                     __ptext59:
  6312                           	callstack 0
  6313   002630                     _I2C_DO_RX_NACK_RESTART:
  6314                           	callstack 21
  6315   002630                     
  6316                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     I2C_MasterSendNack();
  6317   002630  EC41  F013         	call	_I2C_MasterSendNack	;wreg free
  6318   002634                     
  6319                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     return I2C_SEND_RESTART;
  6320   002634  0E09               	movlw	9
  6321   002636  0012               	return		;funcret
  6322   002638                     __end_of_I2C_DO_RX_NACK_RESTART:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  6326 ;; Defined at:
  6327 ;;		line 483 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      enum E2710
  6334 ;; Registers used:
  6335 ;;		wreg, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; Hardware stack levels required when called: 1
  6348 ;; This function calls:
  6349 ;;		_I2C_MasterSendNack
  6350 ;; This function is called by:
  6351 ;;		_I2C_DO_RX
  6352 ;;		_I2C_MasterFsm
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text60
  6357   002638                     __ptext60:
  6358                           	callstack 0
  6359   002638                     _I2C_DO_RX_NACK_STOP:
  6360                           	callstack 21
  6361   002638                     
  6362                           ;mcc_generated_files/i2c_host/src/mssp.c: 485:     I2C_MasterSendNack();
  6363   002638  EC41  F013         	call	_I2C_MasterSendNack	;wreg free
  6364   00263C                     
  6365                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     return I2C_SEND_STOP;
  6366   00263C  0E0A               	movlw	10
  6367   00263E  0012               	return		;funcret
  6368   002640                     __end_of_I2C_DO_RX_NACK_STOP:
  6369                           	callstack 0
  6370                           
  6371 ;; *************** function _I2C_DO_RX_ACK *****************
  6372 ;; Defined at:
  6373 ;;		line 476 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      enum E2710
  6380 ;; Registers used:
  6381 ;;		wreg, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;Total ram usage:        0 bytes
  6392 ;; Hardware stack levels used: 1
  6393 ;; Hardware stack levels required when called: 1
  6394 ;; This function calls:
  6395 ;;		_I2C_MasterSendAck
  6396 ;; This function is called by:
  6397 ;;		_I2C_MasterFsm
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text61
  6402   002640                     __ptext61:
  6403                           	callstack 0
  6404   002640                     _I2C_DO_RX_ACK:
  6405                           	callstack 21
  6406   002640                     
  6407                           ;mcc_generated_files/i2c_host/src/mssp.c: 478:     I2C_MasterSendAck();
  6408   002640  EC3E  F013         	call	_I2C_MasterSendAck	;wreg free
  6409   002644                     
  6410                           ;mcc_generated_files/i2c_host/src/mssp.c: 479:     return I2C_RCEN;
  6411   002644  0E05               	movlw	5
  6412   002646  0012               	return		;funcret
  6413   002648                     __end_of_I2C_DO_RX_ACK:
  6414                           	callstack 0
  6415                           
  6416 ;; *************** function _I2C_DO_SEND_STOP *****************
  6417 ;; Defined at:
  6418 ;;		line 470 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      enum E2710
  6425 ;; Registers used:
  6426 ;;		wreg, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;Total ram usage:        0 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 1
  6439 ;; This function calls:
  6440 ;;		_I2C_MasterStop
  6441 ;; This function is called by:
  6442 ;;		_I2C_DO_TX
  6443 ;;		_I2C_DO_TX_EMPTY
  6444 ;;		_I2C_DO_ADDRESS_NACK
  6445 ;;		_I2C_MasterFsm
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text62
  6450   002648                     __ptext62:
  6451                           	callstack 0
  6452   002648                     _I2C_DO_SEND_STOP:
  6453                           	callstack 20
  6454   002648                     
  6455                           ;mcc_generated_files/i2c_host/src/mssp.c: 472:     I2C_MasterStop();
  6456   002648  EC5C  F013         	call	_I2C_MasterStop	;wreg free
  6457   00264C                     
  6458                           ;mcc_generated_files/i2c_host/src/mssp.c: 473:     return I2C_IDLE;
  6459   00264C  0E00               	movlw	0
  6460   00264E  0012               	return		;funcret
  6461   002650                     __end_of_I2C_DO_SEND_STOP:
  6462                           	callstack 0
  6463                           
  6464 ;; *************** function _I2C_DO_SEND_RESTART *****************
  6465 ;; Defined at:
  6466 ;;		line 464 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;		None
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;		None
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  1    wreg      enum E2710
  6473 ;; Registers used:
  6474 ;;		wreg, cstack
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;Total ram usage:        0 bytes
  6485 ;; Hardware stack levels used: 1
  6486 ;; Hardware stack levels required when called: 1
  6487 ;; This function calls:
  6488 ;;		_I2C_MasterEnableRestart
  6489 ;; This function is called by:
  6490 ;;		_I2C_DO_TX_EMPTY
  6491 ;;		_I2C_DO_ADDRESS_NACK
  6492 ;;		_I2C_MasterFsm
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text63
  6497   002650                     __ptext63:
  6498                           	callstack 0
  6499   002650                     _I2C_DO_SEND_RESTART:
  6500                           	callstack 20
  6501   002650                     
  6502                           ;mcc_generated_files/i2c_host/src/mssp.c: 466:     I2C_MasterEnableRestart();
  6503   002650  EC5E  F013         	call	_I2C_MasterEnableRestart	;wreg free
  6504   002654                     
  6505                           ;mcc_generated_files/i2c_host/src/mssp.c: 467:     return I2C_SEND_ADR_READ;
  6506   002654  0E01               	movlw	1
  6507   002656  0012               	return		;funcret
  6508   002658                     __end_of_I2C_DO_SEND_RESTART:
  6509                           	callstack 0
  6510                           
  6511 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  6512 ;; Defined at:
  6513 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      enum E2710
  6520 ;; Registers used:
  6521 ;;		wreg, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used: 1
  6533 ;; Hardware stack levels required when called: 1
  6534 ;; This function calls:
  6535 ;;		_I2C_MasterEnableRestart
  6536 ;; This function is called by:
  6537 ;;		_I2C_DO_TX
  6538 ;;		_I2C_MasterFsm
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text64
  6543   002658                     __ptext64:
  6544                           	callstack 0
  6545   002658                     _I2C_DO_SEND_RESTART_WRITE:
  6546                           	callstack 20
  6547   002658                     
  6548                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     I2C_MasterEnableRestart();
  6549   002658  EC5E  F013         	call	_I2C_MasterEnableRestart	;wreg free
  6550   00265C                     
  6551                           ;mcc_generated_files/i2c_host/src/mssp.c: 460:     return I2C_SEND_ADR_WRITE;
  6552   00265C  0E02               	movlw	2
  6553   00265E  0012               	return		;funcret
  6554   002660                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  6555                           	callstack 0
  6556                           
  6557 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6558 ;; Defined at:
  6559 ;;		line 451 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;		None
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      enum E2710
  6566 ;; Registers used:
  6567 ;;		wreg, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;Total ram usage:        0 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; Hardware stack levels required when called: 1
  6580 ;; This function calls:
  6581 ;;		_I2C_MasterEnableRestart
  6582 ;; This function is called by:
  6583 ;;		_I2C_DO_TX
  6584 ;;		_I2C_MasterFsm
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text65
  6589   002660                     __ptext65:
  6590                           	callstack 0
  6591   002660                     _I2C_DO_SEND_RESTART_READ:
  6592                           	callstack 20
  6593   002660                     
  6594                           ;mcc_generated_files/i2c_host/src/mssp.c: 453:     I2C_MasterEnableRestart();
  6595   002660  EC5E  F013         	call	_I2C_MasterEnableRestart	;wreg free
  6596   002664                     
  6597                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return I2C_SEND_ADR_READ;
  6598   002664  0E01               	movlw	1
  6599   002666  0012               	return		;funcret
  6600   002668                     __end_of_I2C_DO_SEND_RESTART_READ:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function _I2C_DO_RCEN *****************
  6604 ;; Defined at:
  6605 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      enum E2710
  6612 ;; Registers used:
  6613 ;;		wreg, cstack
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;Total ram usage:        0 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; Hardware stack levels required when called: 1
  6626 ;; This function calls:
  6627 ;;		_I2C_MasterStartRx
  6628 ;; This function is called by:
  6629 ;;		_I2C_MasterFsm
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text66
  6634   0025D4                     __ptext66:
  6635                           	callstack 0
  6636   0025D4                     _I2C_DO_RCEN:
  6637                           	callstack 21
  6638   0025D4                     
  6639                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     I2C_Status.addressNackCheck = 0;
  6640   0025D4  0100               	movlb	0	; () banked
  6641   0025D6  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  6642   0025D8                     
  6643                           ; BSR set to: 0
  6644                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     I2C_MasterStartRx();
  6645   0025D8  EC56  F013         	call	_I2C_MasterStartRx	;wreg free
  6646   0025DC                     
  6647                           ;mcc_generated_files/i2c_host/src/mssp.c: 408:     return I2C_RX;
  6648   0025DC  0E04               	movlw	4
  6649   0025DE  0012               	return		;funcret
  6650   0025E0                     __end_of_I2C_DO_RCEN:
  6651                           	callstack 0
  6652                           
  6653 ;; *************** function _I2C_DO_RX *****************
  6654 ;; Defined at:
  6655 ;;		line 380 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;		None
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      enum E2710
  6662 ;; Registers used:
  6663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;Total ram usage:        2 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; Hardware stack levels required when called: 3
  6676 ;; This function calls:
  6677 ;;		NULL
  6678 ;;		_I2C_CallbackReturnReset
  6679 ;;		_I2C_CallbackReturnStop
  6680 ;;		_I2C_DO_RX_NACK_RESTART
  6681 ;;		_I2C_DO_RX_NACK_STOP
  6682 ;;		_I2C_MasterGetRxData
  6683 ;;		_I2C_MasterSendAck
  6684 ;;		_rd1RegCompleteHandler
  6685 ;;		_rd2RegCompleteHandler
  6686 ;;		_rdBlkRegCompleteHandler
  6687 ;;		_wr1RegCompleteHandler
  6688 ;;		_wr2RegCompleteHandler
  6689 ;; This function is called by:
  6690 ;;		_I2C_MasterFsm
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text67
  6695   0018DC                     __ptext67:
  6696                           	callstack 0
  6697   0018DC                     _I2C_DO_RX:
  6698                           	callstack 19
  6699   0018DC                     
  6700                           ;mcc_generated_files/i2c_host/src/mssp.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGe
      +                          tRxData();
  6701   0018DC  EC54  F013         	call	_I2C_MasterGetRxData	;wreg free
  6702   0018E0  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  6703   0018E4  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  6704   0018E8  6EDF               	movwf	indf2,c
  6705   0018EA  0100               	movlb	0	; () banked
  6706   0018EC  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  6707   0018EE  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  6708   0018F0                     
  6709                           ; BSR set to: 0
  6710                           ;mcc_generated_files/i2c_host/src/mssp.c: 383:     if(--I2C_Status.data_length)
  6711   0018F0  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  6712   0018F2  A0D8               	btfss	status,0,c
  6713   0018F4  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  6714   0018F6  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  6715   0018F8  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  6716   0018FA  B4D8               	btfsc	status,2,c
  6717   0018FC  EF82  F00C         	goto	i2u168_41
  6718   001900  EF84  F00C         	goto	i2u168_40
  6719   001904                     i2u168_41:
  6720   001904  EF89  F00C         	goto	i2l647
  6721   001908                     i2u168_40:
  6722   001908                     
  6723                           ; BSR set to: 0
  6724                           ;mcc_generated_files/i2c_host/src/mssp.c: 384:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 385:         I2C_MasterSendAck();
  6725   001908  EC3E  F013         	call	_I2C_MasterSendAck	;wreg free
  6726   00190C                     
  6727                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:         return I2C_RCEN;
  6728   00190C  0E05               	movlw	5
  6729   00190E  EFC0  F00C         	goto	i2l648
  6730   001912                     i2l647:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;mcc_generated_files/i2c_host/src/mssp.c: 389:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 390:         I2C_Status.bufferFree = 1;
  6734   001912  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  6735                           
  6736                           ;mcc_generated_files/i2c_host/src/mssp.c: 391:         switch(I2C_Status.callbackTable[I
      +                          2C_DATA_COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6737   001914  EF94  F00C         	goto	i2l3970
  6738   001918                     i2l3960:
  6739                           
  6740                           ;mcc_generated_files/i2c_host/src/mssp.c: 395:                 return I2C_DO_RX_NACK_RES
      +                          TART();
  6741   001918  EC18  F013         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  6742   00191C  EFC0  F00C         	goto	i2l648
  6743   001920                     i2l3964:
  6744                           
  6745                           ;mcc_generated_files/i2c_host/src/mssp.c: 399:                 return I2C_DO_RX_NACK_STO
      +                          P();
  6746   001920  EC1C  F013         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  6747   001924  EFC0  F00C         	goto	i2l648
  6748   001928                     i2l3970:
  6749                           
  6750                           ; BSR set to: 0
  6751   001928  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  6752   00192C  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  6753   001930  D802               	call	i2u169_48
  6754   001932  EFA4  F00C         	goto	i2u169_49
  6755   001936                     i2u169_48:
  6756   001936  0005               	push	
  6757   001938  6EFA               	movwf	pclath,c
  6758   00193A  5160               	movf	_I2C_Status& (0+255),w,b
  6759   00193C  6EFD               	movwf	tosl,c
  6760   00193E  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  6761   001940  6EFE               	movwf	tosh,c
  6762   001942  6AFF               	clrf	tosu,c
  6763   001944  50FA               	movf	pclath,w,c
  6764   001946  0012               	return		;indir
  6765   001948                     i2u169_49:
  6766   001948  6E0D               	movwf	??_I2C_DO_RX^0,c
  6767   00194A  6A0E               	clrf	(??_I2C_DO_RX+1)^0,c
  6768                           
  6769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6770                           ; Switch size 1, requested type "simple"
  6771                           ; Number of cases is 1, Range of values is 0 to 0
  6772                           ; switch strategies available:
  6773                           ; Name         Instructions Cycles
  6774                           ; simple_byte            4     3 (average)
  6775                           ;	Chosen strategy is simple_byte
  6776   00194C  500E               	movf	(??_I2C_DO_RX+1)^0,w,c
  6777   00194E  0A00               	xorlw	0	; case 0
  6778   001950  B4D8               	btfsc	status,2,c
  6779   001952  EFAD  F00C         	goto	i2l5604
  6780   001956  EF90  F00C         	goto	i2l3964
  6781   00195A                     i2l5604:
  6782                           
  6783                           ; Switch size 1, requested type "simple"
  6784                           ; Number of cases is 4, Range of values is 1 to 4
  6785                           ; switch strategies available:
  6786                           ; Name         Instructions Cycles
  6787                           ; simple_byte           13     7 (average)
  6788                           ;	Chosen strategy is simple_byte
  6789   00195A  500D               	movf	??_I2C_DO_RX^0,w,c
  6790   00195C  0A01               	xorlw	1	; case 1
  6791   00195E  B4D8               	btfsc	status,2,c
  6792   001960  EF90  F00C         	goto	i2l3964
  6793   001964  0A03               	xorlw	3	; case 2
  6794   001966  B4D8               	btfsc	status,2,c
  6795   001968  EF8C  F00C         	goto	i2l3960
  6796   00196C  0A01               	xorlw	1	; case 3
  6797   00196E  B4D8               	btfsc	status,2,c
  6798   001970  EF8C  F00C         	goto	i2l3960
  6799   001974  0A07               	xorlw	7	; case 4
  6800   001976  B4D8               	btfsc	status,2,c
  6801   001978  EF90  F00C         	goto	i2l3964
  6802   00197C  EF90  F00C         	goto	i2l3964
  6803   001980                     i2l648:
  6804   001980  0012               	return		;funcret
  6805   001982                     __end_of_I2C_DO_RX:
  6806                           	callstack 0
  6807                           
  6808 ;; *************** function _I2C_DO_TX *****************
  6809 ;; Defined at:
  6810 ;;		line 356 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      enum E2710
  6817 ;; Registers used:
  6818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;Total ram usage:        2 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; Hardware stack levels required when called: 3
  6831 ;; This function calls:
  6832 ;;		NULL
  6833 ;;		_I2C_CallbackReturnReset
  6834 ;;		_I2C_CallbackReturnStop
  6835 ;;		_I2C_DO_SEND_RESTART_READ
  6836 ;;		_I2C_DO_SEND_RESTART_WRITE
  6837 ;;		_I2C_DO_SEND_STOP
  6838 ;;		_I2C_MasterIsNack
  6839 ;;		_I2C_MasterSendTxData
  6840 ;;		_rd1RegCompleteHandler
  6841 ;;		_rd2RegCompleteHandler
  6842 ;;		_rdBlkRegCompleteHandler
  6843 ;;		_wr1RegCompleteHandler
  6844 ;;		_wr2RegCompleteHandler
  6845 ;; This function is called by:
  6846 ;;		_I2C_MasterFsm
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text68
  6851   001818                     __ptext68:
  6852                           	callstack 0
  6853   001818                     _I2C_DO_TX:
  6854                           	callstack 19
  6855   001818                     
  6856                           ;mcc_generated_files/i2c_host/src/mssp.c: 358:     if(I2C_MasterIsNack())
  6857   001818  ECC2  F012         	call	_I2C_MasterIsNack	;wreg free
  6858   00181C  0900               	iorlw	0
  6859   00181E  B4D8               	btfsc	status,2,c
  6860   001820  EF14  F00C         	goto	i2u165_41
  6861   001824  EF16  F00C         	goto	i2u165_40
  6862   001828                     i2u165_41:
  6863   001828  EF51  F00C         	goto	i2l631
  6864   00182C                     i2u165_40:
  6865   00182C  EF24  F00C         	goto	i2l3930
  6866   001830                     i2l3916:
  6867                           
  6868                           ;mcc_generated_files/i2c_host/src/mssp.c: 363:                 return I2C_DO_SEND_RESTAR
      +                          T_READ();
  6869   001830  EC30  F013         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  6870   001834  EF6D  F00C         	goto	i2l634
  6871   001838                     i2l3920:
  6872                           
  6873                           ;mcc_generated_files/i2c_host/src/mssp.c: 365:                   return I2C_DO_SEND_REST
      +                          ART_WRITE();
  6874   001838  EC2C  F013         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  6875   00183C  EF6D  F00C         	goto	i2l634
  6876   001840                     i2l3924:
  6877                           
  6878                           ;mcc_generated_files/i2c_host/src/mssp.c: 369:                 return I2C_DO_SEND_STOP()
      +                          ;
  6879   001840  EC24  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  6880   001844  EF6D  F00C         	goto	i2l634
  6881   001848                     i2l3930:
  6882   001848  C072  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  6883   00184C  C073  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  6884   001850  D802               	call	i2u166_48
  6885   001852  EF35  F00C         	goto	i2u166_49
  6886   001856                     i2u166_48:
  6887   001856  0005               	push	
  6888   001858  6EFA               	movwf	pclath,c
  6889   00185A  0100               	movlb	0	; () banked
  6890   00185C  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  6891   00185E  6EFD               	movwf	tosl,c
  6892   001860  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  6893   001862  6EFE               	movwf	tosh,c
  6894   001864  6AFF               	clrf	tosu,c
  6895   001866  50FA               	movf	pclath,w,c
  6896   001868  0012               	return		;indir
  6897   00186A                     i2u166_49:
  6898   00186A  6E0D               	movwf	??_I2C_DO_TX^0,c
  6899   00186C  6A0E               	clrf	(??_I2C_DO_TX+1)^0,c
  6900                           
  6901                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6902                           ; Switch size 1, requested type "simple"
  6903                           ; Number of cases is 1, Range of values is 0 to 0
  6904                           ; switch strategies available:
  6905                           ; Name         Instructions Cycles
  6906                           ; simple_byte            4     3 (average)
  6907                           ;	Chosen strategy is simple_byte
  6908   00186E  500E               	movf	(??_I2C_DO_TX+1)^0,w,c
  6909   001870  0A00               	xorlw	0	; case 0
  6910   001872  B4D8               	btfsc	status,2,c
  6911   001874  EF3E  F00C         	goto	i2l5606
  6912   001878  EF20  F00C         	goto	i2l3924
  6913   00187C                     i2l5606:
  6914                           
  6915                           ; Switch size 1, requested type "simple"
  6916                           ; Number of cases is 4, Range of values is 1 to 4
  6917                           ; switch strategies available:
  6918                           ; Name         Instructions Cycles
  6919                           ; simple_byte           13     7 (average)
  6920                           ;	Chosen strategy is simple_byte
  6921   00187C  500D               	movf	??_I2C_DO_TX^0,w,c
  6922   00187E  0A01               	xorlw	1	; case 1
  6923   001880  B4D8               	btfsc	status,2,c
  6924   001882  EF20  F00C         	goto	i2l3924
  6925   001886  0A03               	xorlw	3	; case 2
  6926   001888  B4D8               	btfsc	status,2,c
  6927   00188A  EF18  F00C         	goto	i2l3916
  6928   00188E  0A01               	xorlw	1	; case 3
  6929   001890  B4D8               	btfsc	status,2,c
  6930   001892  EF1C  F00C         	goto	i2l3920
  6931   001896  0A07               	xorlw	7	; case 4
  6932   001898  B4D8               	btfsc	status,2,c
  6933   00189A  EF20  F00C         	goto	i2l3924
  6934   00189E  EF20  F00C         	goto	i2l3924
  6935   0018A2                     i2l631:
  6936                           
  6937                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 374:         I2C_Status.addressNackCheck = 0;
  6938   0018A2  0100               	movlb	0	; () banked
  6939   0018A4  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  6940   0018A6                     
  6941                           ; BSR set to: 0
  6942                           ;mcc_generated_files/i2c_host/src/mssp.c: 375:         I2C_MasterSendTxData(*I2C_Status.
      +                          data_ptr++);
  6943   0018A6  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  6944   0018AA  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  6945   0018AE  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  6946   0018B0  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  6947   0018B2  50DF               	movf	indf2,w,c
  6948   0018B4  EC34  F013         	call	_I2C_MasterSendTxData
  6949   0018B8                     
  6950                           ;mcc_generated_files/i2c_host/src/mssp.c: 376:         return (--I2C_Status.data_length)
      +                          ?I2C_TX:I2C_TX_EMPTY;
  6951   0018B8  0100               	movlb	0	; () banked
  6952   0018BA  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  6953   0018BC  A0D8               	btfss	status,0,c
  6954   0018BE  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  6955   0018C0  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  6956   0018C2  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  6957   0018C4  A4D8               	btfss	status,2,c
  6958   0018C6  EF67  F00C         	goto	i2u167_41
  6959   0018CA  EF69  F00C         	goto	i2u167_40
  6960   0018CE                     i2u167_41:
  6961   0018CE  EF6C  F00C         	goto	i2l3938
  6962   0018D2                     i2u167_40:
  6963   0018D2                     
  6964                           ; BSR set to: 0
  6965   0018D2  0E06               	movlw	6
  6966   0018D4  EF6D  F00C         	goto	i2l634
  6967   0018D8                     i2l3938:
  6968                           
  6969                           ; BSR set to: 0
  6970   0018D8  0E03               	movlw	3
  6971   0018DA                     i2l634:
  6972   0018DA  0012               	return		;funcret
  6973   0018DC                     __end_of_I2C_DO_TX:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6977 ;; Defined at:
  6978 ;;		line 349 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      enum E2710
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;Total ram usage:        0 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 1
  6999 ;; This function calls:
  7000 ;;		_I2C_MasterSendTxData
  7001 ;; This function is called by:
  7002 ;;		_I2C_MasterFsm
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text69
  7007   0025BA                     __ptext69:
  7008                           	callstack 0
  7009   0025BA                     _I2C_DO_SEND_ADR_WRITE:
  7010                           	callstack 21
  7011   0025BA                     
  7012                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:     I2C_Status.addressNackCheck = 1;
  7013   0025BA  0100               	movlb	0	; () banked
  7014   0025BC  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  7015   0025BE                     
  7016                           ; BSR set to: 0
  7017                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_S
      +                          tatus.address));
  7018   0025BE  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  7019   0025C0  EC34  F013         	call	_I2C_MasterSendTxData
  7020   0025C4                     
  7021                           ;mcc_generated_files/i2c_host/src/mssp.c: 353:     return I2C_TX;
  7022   0025C4  0E03               	movlw	3
  7023   0025C6  0012               	return		;funcret
  7024   0025C8                     __end_of_I2C_DO_SEND_ADR_WRITE:
  7025                           	callstack 0
  7026                           
  7027 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  7028 ;; Defined at:
  7029 ;;		line 342 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      enum E2710
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 1
  7050 ;; This function calls:
  7051 ;;		_I2C_MasterSendTxData
  7052 ;; This function is called by:
  7053 ;;		_I2C_MasterFsm
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text70
  7058   0025AA                     __ptext70:
  7059                           	callstack 0
  7060   0025AA                     _I2C_DO_SEND_ADR_READ:
  7061                           	callstack 21
  7062   0025AA                     
  7063                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:     I2C_Status.addressNackCheck = 1;
  7064   0025AA  0100               	movlb	0	; () banked
  7065   0025AC  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  7066   0025AE                     
  7067                           ; BSR set to: 0
  7068                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_S
      +                          tatus.address | 1));
  7069   0025AE  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  7070   0025B0  0901               	iorlw	1
  7071   0025B2  EC34  F013         	call	_I2C_MasterSendTxData
  7072   0025B6                     
  7073                           ;mcc_generated_files/i2c_host/src/mssp.c: 346:     return I2C_RCEN;
  7074   0025B6  0E05               	movlw	5
  7075   0025B8  0012               	return		;funcret
  7076   0025BA                     __end_of_I2C_DO_SEND_ADR_READ:
  7077                           	callstack 0
  7078                           
  7079 ;; *************** function _I2C_DO_IDLE *****************
  7080 ;; Defined at:
  7081 ;;		line 335 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;		None
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  1    wreg      enum E2710
  7088 ;; Registers used:
  7089 ;;		wreg, status,2
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;Total ram usage:        0 bytes
  7100 ;; Hardware stack levels used: 1
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_I2C_MasterFsm
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text71
  7109   0025E0                     __ptext71:
  7110                           	callstack 0
  7111   0025E0                     _I2C_DO_IDLE:
  7112                           	callstack 22
  7113   0025E0                     
  7114                           ;mcc_generated_files/i2c_host/src/mssp.c: 337:     I2C_Status.busy = 0;
  7115   0025E0  0100               	movlb	0	; () banked
  7116   0025E2  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  7117   0025E4                     
  7118                           ; BSR set to: 0
  7119                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:     I2C_Status.error = I2C_NOERR;
  7120   0025E4  0E00               	movlw	0
  7121   0025E6  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  7122   0025E8                     
  7123                           ; BSR set to: 0
  7124                           ;mcc_generated_files/i2c_host/src/mssp.c: 339:     return I2C_RESET;
  7125   0025E8  0E0E               	movlw	14
  7126   0025EA                     
  7127                           ; BSR set to: 0
  7128   0025EA  0012               	return		;funcret
  7129   0025EC                     __end_of_I2C_DO_IDLE:
  7130                           	callstack 0
  7131                           
  7132 ;; *************** function _I2C_DO_TX_EMPTY *****************
  7133 ;; Defined at:
  7134 ;;		line 411 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;		None
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      enum E2710
  7141 ;; Registers used:
  7142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;Total ram usage:        2 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 3
  7155 ;; This function calls:
  7156 ;;		NULL
  7157 ;;		_I2C_CallbackReturnReset
  7158 ;;		_I2C_CallbackReturnStop
  7159 ;;		_I2C_DO_SEND_RESTART
  7160 ;;		_I2C_DO_SEND_STOP
  7161 ;;		_I2C_MasterSetIrq
  7162 ;;		_rd1RegCompleteHandler
  7163 ;;		_rd2RegCompleteHandler
  7164 ;;		_rdBlkRegCompleteHandler
  7165 ;;		_wr1RegCompleteHandler
  7166 ;;		_wr2RegCompleteHandler
  7167 ;; This function is called by:
  7168 ;;		_I2C_MasterFsm
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text72
  7173   001B28                     __ptext72:
  7174                           	callstack 0
  7175   001B28                     _I2C_DO_TX_EMPTY:
  7176                           	callstack 19
  7177   001B28                     
  7178                           ;mcc_generated_files/i2c_host/src/mssp.c: 413:     I2C_Status.bufferFree = 1;
  7179   001B28  0100               	movlb	0	; () banked
  7180   001B2A  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  7181                           
  7182                           ;mcc_generated_files/i2c_host/src/mssp.c: 414:     switch(I2C_Status.callbackTable[I2C_D
      +                          ATA_COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  7183   001B2C  EFA5  F00D         	goto	i2l4002
  7184   001B30                     i2l3986:
  7185                           
  7186                           ;mcc_generated_files/i2c_host/src/mssp.c: 418:             return I2C_DO_SEND_RESTART();
  7187   001B30  EC28  F013         	call	_I2C_DO_SEND_RESTART	;wreg free
  7188   001B34  EFD1  F00D         	goto	i2l665
  7189   001B38                     i2l3990:
  7190                           
  7191                           ;mcc_generated_files/i2c_host/src/mssp.c: 420:             I2C_MasterSetIrq();
  7192   001B38  EC52  F013         	call	_I2C_MasterSetIrq	;wreg free
  7193   001B3C                     
  7194                           ;mcc_generated_files/i2c_host/src/mssp.c: 421:             return I2C_TX;
  7195   001B3C  0E03               	movlw	3
  7196   001B3E  EFD1  F00D         	goto	i2l665
  7197   001B42                     i2l3996:
  7198                           
  7199                           ;mcc_generated_files/i2c_host/src/mssp.c: 424:             return I2C_DO_SEND_STOP();
  7200   001B42  EC24  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  7201   001B46  EFD1  F00D         	goto	i2l665
  7202   001B4A                     i2l4002:
  7203                           
  7204                           ; BSR set to: 0
  7205   001B4A  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  7206   001B4E  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  7207   001B52  D802               	call	i2u170_48
  7208   001B54  EFB5  F00D         	goto	i2u170_49
  7209   001B58                     i2u170_48:
  7210   001B58  0005               	push	
  7211   001B5A  6EFA               	movwf	pclath,c
  7212   001B5C  5160               	movf	_I2C_Status& (0+255),w,b
  7213   001B5E  6EFD               	movwf	tosl,c
  7214   001B60  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  7215   001B62  6EFE               	movwf	tosh,c
  7216   001B64  6AFF               	clrf	tosu,c
  7217   001B66  50FA               	movf	pclath,w,c
  7218   001B68  0012               	return		;indir
  7219   001B6A                     i2u170_49:
  7220   001B6A  6E0D               	movwf	??_I2C_DO_TX_EMPTY^0,c
  7221   001B6C  6A0E               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  7222                           
  7223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7224                           ; Switch size 1, requested type "simple"
  7225                           ; Number of cases is 1, Range of values is 0 to 0
  7226                           ; switch strategies available:
  7227                           ; Name         Instructions Cycles
  7228                           ; simple_byte            4     3 (average)
  7229                           ;	Chosen strategy is simple_byte
  7230   001B6E  500E               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  7231   001B70  0A00               	xorlw	0	; case 0
  7232   001B72  B4D8               	btfsc	status,2,c
  7233   001B74  EFBE  F00D         	goto	i2l5608
  7234   001B78  EFA1  F00D         	goto	i2l3996
  7235   001B7C                     i2l5608:
  7236                           
  7237                           ; Switch size 1, requested type "simple"
  7238                           ; Number of cases is 4, Range of values is 1 to 4
  7239                           ; switch strategies available:
  7240                           ; Name         Instructions Cycles
  7241                           ; simple_byte           13     7 (average)
  7242                           ;	Chosen strategy is simple_byte
  7243   001B7C  500D               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  7244   001B7E  0A01               	xorlw	1	; case 1
  7245   001B80  B4D8               	btfsc	status,2,c
  7246   001B82  EFA1  F00D         	goto	i2l3996
  7247   001B86  0A03               	xorlw	3	; case 2
  7248   001B88  B4D8               	btfsc	status,2,c
  7249   001B8A  EF98  F00D         	goto	i2l3986
  7250   001B8E  0A01               	xorlw	1	; case 3
  7251   001B90  B4D8               	btfsc	status,2,c
  7252   001B92  EF98  F00D         	goto	i2l3986
  7253   001B96  0A07               	xorlw	7	; case 4
  7254   001B98  B4D8               	btfsc	status,2,c
  7255   001B9A  EF9C  F00D         	goto	i2l3990
  7256   001B9E  EFA1  F00D         	goto	i2l3996
  7257   001BA2                     i2l665:
  7258   001BA2  0012               	return		;funcret
  7259   001BA4                     __end_of_I2C_DO_TX_EMPTY:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _I2C_MasterSetIrq *****************
  7263 ;; Defined at:
  7264 ;;		line 647 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		None
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_I2C_DO_TX_EMPTY
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text73
  7292   0026A4                     __ptext73:
  7293                           	callstack 0
  7294   0026A4                     _I2C_MasterSetIrq:
  7295                           	callstack 21
  7296   0026A4                     
  7297                           ;mcc_generated_files/i2c_host/src/mssp.c: 649:     PIR1bits.SSPIF = 1;
  7298   0026A4  869E               	bsf	158,3,c	;volatile
  7299   0026A6  0012               	return		;funcret
  7300   0026A8                     __end_of_I2C_MasterSetIrq:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function _I2C_MasterIsNack *****************
  7304 ;; Defined at:
  7305 ;;		line 599 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  1    wreg      _Bool 
  7312 ;; Registers used:
  7313 ;;		wreg
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;Total ram usage:        0 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_I2C_MasterFsm
  7329 ;;		_I2C_DO_TX
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text74
  7334   002584                     __ptext74:
  7335                           	callstack 0
  7336   002584                     _I2C_MasterIsNack:
  7337                           	callstack 22
  7338   002584                     
  7339                           ;mcc_generated_files/i2c_host/src/mssp.c: 601:     return SSPCON2bits.ACKSTAT;
  7340   002584  BCC5               	btfsc	197,6,c	;volatile
  7341   002586  EFC7  F012         	goto	i2u149_41
  7342   00258A  EFCA  F012         	goto	i2u149_40
  7343   00258E                     i2u149_41:
  7344   00258E  0E01               	movlw	1
  7345   002590  EFCB  F012         	goto	i2u149_46
  7346   002594                     i2u149_40:
  7347   002594  0E00               	movlw	0
  7348   002596                     i2u149_46:
  7349   002596  0012               	return		;funcret
  7350   002598                     __end_of_I2C_MasterIsNack:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function _I2C_MasterSendTxData *****************
  7354 ;; Defined at:
  7355 ;;		line 569 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  data            1    wreg     unsigned char 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  data            1    0[COMRAM] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;Total ram usage:        1 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_I2C_DO_SEND_ADR_READ
  7379 ;;		_I2C_DO_SEND_ADR_WRITE
  7380 ;;		_I2C_DO_TX
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text75
  7385   002668                     __ptext75:
  7386                           	callstack 0
  7387   002668                     _I2C_MasterSendTxData:
  7388                           	callstack 21
  7389                           
  7390                           ;incstack = 0
  7391                           ;I2C_MasterSendTxData@data stored from wreg
  7392   002668  6E01               	movwf	I2C_MasterSendTxData@data^0,c
  7393   00266A                     
  7394                           ;mcc_generated_files/i2c_host/src/mssp.c: 569: static __attribute__((inline)) void I2C_M
      +                          asterSendTxData(uint8_t data);mcc_generated_files/i2c_host/src/mssp.c: 570: {;mcc_genera
      +                          ted_files/i2c_host/src/mssp.c: 571:     SSPBUF = data;
  7395   00266A  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  7396   00266E  0012               	return		;funcret
  7397   002670                     __end_of_I2C_MasterSendTxData:
  7398                           	callstack 0
  7399                           
  7400 ;; *************** function _I2C_MasterSendAck *****************
  7401 ;; Defined at:
  7402 ;;		line 604 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;		None
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1    wreg      void 
  7409 ;; Registers used:
  7410 ;;		None
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7420 ;;Total ram usage:        0 bytes
  7421 ;; Hardware stack levels used: 1
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_I2C_DO_RX
  7426 ;;		_I2C_DO_RX_ACK
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text76
  7431   00267C                     __ptext76:
  7432                           	callstack 0
  7433   00267C                     _I2C_MasterSendAck:
  7434                           	callstack 21
  7435   00267C                     
  7436                           ;mcc_generated_files/i2c_host/src/mssp.c: 606:     SSPCON2bits.ACKDT = 0;
  7437   00267C  9AC5               	bcf	197,5,c	;volatile
  7438                           
  7439                           ;mcc_generated_files/i2c_host/src/mssp.c: 607:     SSPCON2bits.ACKEN = 1;
  7440   00267E  88C5               	bsf	197,4,c	;volatile
  7441   002680  0012               	return		;funcret
  7442   002682                     __end_of_I2C_MasterSendAck:
  7443                           	callstack 0
  7444                           
  7445 ;; *************** function _I2C_MasterGetRxData *****************
  7446 ;; Defined at:
  7447 ;;		line 564 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;		None
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      unsigned char 
  7454 ;; Registers used:
  7455 ;;		wreg, status,2
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;Total ram usage:        0 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_I2C_DO_RX
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text77
  7475   0026A8                     __ptext77:
  7476                           	callstack 0
  7477   0026A8                     _I2C_MasterGetRxData:
  7478                           	callstack 21
  7479   0026A8                     
  7480                           ;mcc_generated_files/i2c_host/src/mssp.c: 566:     return SSPBUF;
  7481   0026A8  50C9               	movf	201,w,c	;volatile
  7482   0026AA  0012               	return		;funcret
  7483   0026AC                     __end_of_I2C_MasterGetRxData:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _I2C_MasterSendNack *****************
  7487 ;; Defined at:
  7488 ;;		line 610 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      void 
  7495 ;; Registers used:
  7496 ;;		None
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;Total ram usage:        0 bytes
  7507 ;; Hardware stack levels used: 1
  7508 ;; This function calls:
  7509 ;;		Nothing
  7510 ;; This function is called by:
  7511 ;;		_I2C_DO_RX_NACK_STOP
  7512 ;;		_I2C_DO_RX_NACK_RESTART
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text78
  7517   002682                     __ptext78:
  7518                           	callstack 0
  7519   002682                     _I2C_MasterSendNack:
  7520                           	callstack 21
  7521   002682                     
  7522                           ;mcc_generated_files/i2c_host/src/mssp.c: 612:     SSPCON2bits.ACKDT = 1;
  7523   002682  8AC5               	bsf	197,5,c	;volatile
  7524                           
  7525                           ;mcc_generated_files/i2c_host/src/mssp.c: 613:     SSPCON2bits.ACKEN = 1;
  7526   002684  88C5               	bsf	197,4,c	;volatile
  7527   002686  0012               	return		;funcret
  7528   002688                     __end_of_I2C_MasterSendNack:
  7529                           	callstack 0
  7530                           
  7531 ;; *************** function _I2C_MasterStartRx *****************
  7532 ;; Defined at:
  7533 ;;		line 584 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;		None
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		None
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;Total ram usage:        0 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; This function calls:
  7554 ;;		Nothing
  7555 ;; This function is called by:
  7556 ;;		_I2C_DO_RCEN
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560                           	psect	text79
  7561   0026AC                     __ptext79:
  7562                           	callstack 0
  7563   0026AC                     _I2C_MasterStartRx:
  7564                           	callstack 21
  7565   0026AC                     
  7566                           ;mcc_generated_files/i2c_host/src/mssp.c: 586:     SSPCON2bits.RCEN = 1;
  7567   0026AC  86C5               	bsf	197,3,c	;volatile
  7568   0026AE  0012               	return		;funcret
  7569   0026B0                     __end_of_I2C_MasterStartRx:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function _I2C_CallbackReturnReset *****************
  7573 ;; Defined at:
  7574 ;;		line 526 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  funPtr          2    9[COMRAM] PTR void 
  7577 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7578 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      enum E98
  7583 ;; Registers used:
  7584 ;;		wreg
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;Total ram usage:        2 bytes
  7595 ;; Hardware stack levels used: 1
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_I2C_Open
  7600 ;;		_I2C_DO_TX
  7601 ;;		_I2C_DO_RX
  7602 ;;		_I2C_DO_TX_EMPTY
  7603 ;;		_I2C_DO_ADDRESS_NACK
  7604 ;;		_I2C_DO_RX_EMPTY
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text80
  7609   0026B0                     __ptext80:
  7610                           	callstack 0
  7611   0026B0                     _I2C_CallbackReturnReset:
  7612                           	callstack 21
  7613   0026B0                     
  7614                           ;mcc_generated_files/i2c_host/src/mssp.c: 526: i2c_operations_t I2C_CallbackReturnReset(
      +                          void *funPtr);mcc_generated_files/i2c_host/src/mssp.c: 527: {;mcc_generated_files/i2c_ho
      +                          st/src/mssp.c: 528:     return I2C_RESET_LINK;
  7615   0026B0  0E05               	movlw	5
  7616   0026B2  0012               	return		;funcret
  7617   0026B4                     __end_of_I2C_CallbackReturnReset:
  7618                           	callstack 0
  7619                           
  7620 ;; *************** function _I2C_CallbackReturnStop *****************
  7621 ;; Defined at:
  7622 ;;		line 521 in file "mcc_generated_files/i2c_host/src/mssp.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  funPtr          2    9[COMRAM] PTR void 
  7625 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7626 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      enum E98
  7631 ;; Registers used:
  7632 ;;		wreg
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;Total ram usage:        2 bytes
  7643 ;; Hardware stack levels used: 1
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_I2C_Open
  7648 ;;		_I2C_SetCallback
  7649 ;;		i2_I2C_SetCallback
  7650 ;;		_I2C_DO_TX
  7651 ;;		_I2C_DO_RX
  7652 ;;		_I2C_DO_TX_EMPTY
  7653 ;;		_I2C_DO_ADDRESS_NACK
  7654 ;;		_I2C_DO_RX_EMPTY
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text81
  7659   0026B4                     __ptext81:
  7660                           	callstack 0
  7661   0026B4                     _I2C_CallbackReturnStop:
  7662                           	callstack 21
  7663   0026B4                     
  7664                           ;mcc_generated_files/i2c_host/src/mssp.c: 521: i2c_operations_t I2C_CallbackReturnStop(v
      +                          oid *funPtr);mcc_generated_files/i2c_host/src/mssp.c: 522: {;mcc_generated_files/i2c_hos
      +                          t/src/mssp.c: 523:     return I2C_STOP;
  7665   0026B4  0E01               	movlw	1
  7666   0026B6  0012               	return		;funcret
  7667   0026B8                     __end_of_I2C_CallbackReturnStop:
  7668                           	callstack 0
  7669                           
  7670 ;; *************** function _rdBlkRegCompleteHandler *****************
  7671 ;; Defined at:
  7672 ;;		line 170 in file "mcc_generated_files/i2c_host/src/i2c_master_example.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  ptr             2    9[COMRAM] PTR void 
  7675 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7676 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1    wreg      enum E98
  7681 ;; Registers used:
  7682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7692 ;;Total ram usage:        3 bytes
  7693 ;; Hardware stack levels used: 1
  7694 ;; Hardware stack levels required when called: 2
  7695 ;; This function calls:
  7696 ;;		i2_I2C_SetBuffer
  7697 ;;		i2_I2C_SetDataCompleteCallback
  7698 ;; This function is called by:
  7699 ;;		_I2C_ReadDataBlock
  7700 ;;		_I2C_DO_TX
  7701 ;;		_I2C_DO_RX
  7702 ;;		_I2C_DO_TX_EMPTY
  7703 ;;		_I2C_DO_ADDRESS_NACK
  7704 ;;		_I2C_DO_RX_EMPTY
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text82
  7709   00219C                     __ptext82:
  7710                           	callstack 0
  7711   00219C                     _rdBlkRegCompleteHandler:
  7712                           	callstack 19
  7713   00219C                     
  7714                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 170: static i2c_operations_t rdB
      +                          lkRegCompleteHandler(void *ptr);mcc_generated_files/i2c_host/src/i2c_master_example.c: 1
      +                          71: {;mcc_generated_files/i2c_host/src/i2c_master_example.c: 172:     I2C_SetBuffer(((i2
      +                          c_buffer_t *)ptr)->data,((i2c_buffer_t*)ptr)->len);
  7715   00219C  EE20 F002          	lfsr	2,2
  7716   0021A0  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  7717   0021A2  26D9               	addwf	fsr2l,f,c
  7718   0021A4  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  7719   0021A6  22DA               	addwfc	fsr2h,f,c
  7720   0021A8  50DF               	movf	indf2,w,c
  7721   0021AA  6E0C               	movwf	??_rdBlkRegCompleteHandler^0,c
  7722   0021AC  C00C  F001         	movff	??_rdBlkRegCompleteHandler,i2I2C_SetBuffer@buffer
  7723   0021B0  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
  7724   0021B2  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  7725   0021B6  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  7726   0021BA  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
  7727   0021BE  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
  7728   0021C2  EC3D  F012         	call	i2_I2C_SetBuffer	;wreg free
  7729   0021C6                     
  7730                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 173:     I2C_SetDataCompleteCall
      +                          back((0),(0));
  7731   0021C6  0E00               	movlw	0
  7732   0021C8  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7733   0021CA  0E00               	movlw	0
  7734   0021CC  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7735   0021CE  0E00               	movlw	0
  7736   0021D0  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7737   0021D2  0E00               	movlw	0
  7738   0021D4  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7739   0021D6  ECA1  F012         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7740   0021DA                     
  7741                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 174:     return I2C_RESTART_READ
      +                          ;
  7742   0021DA  0E02               	movlw	2
  7743   0021DC  0012               	return		;funcret
  7744   0021DE                     __end_of_rdBlkRegCompleteHandler:
  7745                           	callstack 0
  7746                           
  7747 ;; *************** function _wr1RegCompleteHandler *****************
  7748 ;; Defined at:
  7749 ;;		line 156 in file "mcc_generated_files/i2c_host/src/i2c_master_example.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  ptr             2    9[COMRAM] PTR void 
  7752 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7753 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      enum E98
  7758 ;; Registers used:
  7759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;Total ram usage:        2 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; Hardware stack levels required when called: 2
  7772 ;; This function calls:
  7773 ;;		i2_I2C_SetBuffer
  7774 ;;		i2_I2C_SetDataCompleteCallback
  7775 ;; This function is called by:
  7776 ;;		_I2C_Write1ByteRegister
  7777 ;;		_I2C_DO_TX
  7778 ;;		_I2C_DO_RX
  7779 ;;		_I2C_DO_TX_EMPTY
  7780 ;;		_I2C_DO_ADDRESS_NACK
  7781 ;;		_I2C_DO_RX_EMPTY
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text83
  7786   002356                     __ptext83:
  7787                           	callstack 0
  7788   002356                     _wr1RegCompleteHandler:
  7789                           	callstack 19
  7790   002356                     
  7791                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 156: static i2c_operations_t wr1
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/i2c_host/src/i2c_master_example.c: 157
      +                          : {;mcc_generated_files/i2c_host/src/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1)
      +                          ;
  7792   002356  C00A  F001         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  7793   00235A  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  7794   00235E  0E00               	movlw	0
  7795   002360  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  7796   002362  0E01               	movlw	1
  7797   002364  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  7798   002366  EC3D  F012         	call	i2_I2C_SetBuffer	;wreg free
  7799   00236A                     
  7800                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 159:     I2C_SetDataCompleteCall
      +                          back((0),(0));
  7801   00236A  0E00               	movlw	0
  7802   00236C  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7803   00236E  0E00               	movlw	0
  7804   002370  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7805   002372  0E00               	movlw	0
  7806   002374  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7807   002376  0E00               	movlw	0
  7808   002378  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7809   00237A  ECA1  F012         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7810   00237E                     
  7811                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7812   00237E  0E04               	movlw	4
  7813   002380  0012               	return		;funcret
  7814   002382                     __end_of_wr1RegCompleteHandler:
  7815                           	callstack 0
  7816                           
  7817 ;; *************** function _rd2RegCompleteHandler *****************
  7818 ;; Defined at:
  7819 ;;		line 149 in file "mcc_generated_files/i2c_host/src/i2c_master_example.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  ptr             2    9[COMRAM] PTR void 
  7822 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7823 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      enum E98
  7828 ;; Registers used:
  7829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;Total ram usage:        2 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; Hardware stack levels required when called: 2
  7842 ;; This function calls:
  7843 ;;		i2_I2C_SetBuffer
  7844 ;;		i2_I2C_SetDataCompleteCallback
  7845 ;; This function is called by:
  7846 ;;		_I2C_Read2ByteRegister
  7847 ;;		_I2C_DO_TX
  7848 ;;		_I2C_DO_RX
  7849 ;;		_I2C_DO_TX_EMPTY
  7850 ;;		_I2C_DO_ADDRESS_NACK
  7851 ;;		_I2C_DO_RX_EMPTY
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text84
  7856   002382                     __ptext84:
  7857                           	callstack 0
  7858   002382                     _rd2RegCompleteHandler:
  7859                           	callstack 19
  7860   002382                     
  7861                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 149: static i2c_operations_t rd2
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/i2c_host/src/i2c_master_example.c: 150
      +                          : {;mcc_generated_files/i2c_host/src/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2)
      +                          ;
  7862   002382  C00A  F001         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  7863   002386  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  7864   00238A  0E00               	movlw	0
  7865   00238C  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  7866   00238E  0E02               	movlw	2
  7867   002390  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  7868   002392  EC3D  F012         	call	i2_I2C_SetBuffer	;wreg free
  7869   002396                     
  7870                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 152:     I2C_SetDataCompleteCall
      +                          back((0),(0));
  7871   002396  0E00               	movlw	0
  7872   002398  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7873   00239A  0E00               	movlw	0
  7874   00239C  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7875   00239E  0E00               	movlw	0
  7876   0023A0  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7877   0023A2  0E00               	movlw	0
  7878   0023A4  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7879   0023A6  ECA1  F012         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7880   0023AA                     
  7881                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 153:     return I2C_RESTART_READ
      +                          ;
  7882   0023AA  0E02               	movlw	2
  7883   0023AC  0012               	return		;funcret
  7884   0023AE                     __end_of_rd2RegCompleteHandler:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function _rd1RegCompleteHandler *****************
  7888 ;; Defined at:
  7889 ;;		line 142 in file "mcc_generated_files/i2c_host/src/i2c_master_example.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  ptr             2    9[COMRAM] PTR void 
  7892 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7893 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      enum E98
  7898 ;; Registers used:
  7899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;Total ram usage:        2 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 2
  7912 ;; This function calls:
  7913 ;;		i2_I2C_SetBuffer
  7914 ;;		i2_I2C_SetDataCompleteCallback
  7915 ;; This function is called by:
  7916 ;;		_I2C_Read1ByteRegister
  7917 ;;		_I2C_DO_TX
  7918 ;;		_I2C_DO_RX
  7919 ;;		_I2C_DO_TX_EMPTY
  7920 ;;		_I2C_DO_ADDRESS_NACK
  7921 ;;		_I2C_DO_RX_EMPTY
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text85
  7926   0023AE                     __ptext85:
  7927                           	callstack 0
  7928   0023AE                     _rd1RegCompleteHandler:
  7929                           	callstack 19
  7930   0023AE                     
  7931                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 142: static i2c_operations_t rd1
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/i2c_host/src/i2c_master_example.c: 143
      +                          : {;mcc_generated_files/i2c_host/src/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1)
      +                          ;
  7932   0023AE  C00A  F001         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  7933   0023B2  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  7934   0023B6  0E00               	movlw	0
  7935   0023B8  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  7936   0023BA  0E01               	movlw	1
  7937   0023BC  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  7938   0023BE  EC3D  F012         	call	i2_I2C_SetBuffer	;wreg free
  7939   0023C2                     
  7940                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 145:     I2C_SetDataCompleteCall
      +                          back((0),(0));
  7941   0023C2  0E00               	movlw	0
  7942   0023C4  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7943   0023C6  0E00               	movlw	0
  7944   0023C8  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7945   0023CA  0E00               	movlw	0
  7946   0023CC  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7947   0023CE  0E00               	movlw	0
  7948   0023D0  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7949   0023D2  ECA1  F012         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7950   0023D6                     
  7951                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 146:     return I2C_RESTART_READ
      +                          ;
  7952   0023D6  0E02               	movlw	2
  7953   0023D8  0012               	return		;funcret
  7954   0023DA                     __end_of_rd1RegCompleteHandler:
  7955                           	callstack 0
  7956                           
  7957 ;; *************** function _wr2RegCompleteHandler *****************
  7958 ;; Defined at:
  7959 ;;		line 163 in file "mcc_generated_files/i2c_host/src/i2c_master_example.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  ptr             2    9[COMRAM] PTR void 
  7962 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7963 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      enum E98
  7968 ;; Registers used:
  7969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;Total ram usage:        2 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; Hardware stack levels required when called: 2
  7982 ;; This function calls:
  7983 ;;		i2_I2C_SetBuffer
  7984 ;;		i2_I2C_SetDataCompleteCallback
  7985 ;; This function is called by:
  7986 ;;		_I2C_Write2ByteRegister
  7987 ;;		_I2C_DO_TX
  7988 ;;		_I2C_DO_RX
  7989 ;;		_I2C_DO_TX_EMPTY
  7990 ;;		_I2C_DO_ADDRESS_NACK
  7991 ;;		_I2C_DO_RX_EMPTY
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text86
  7996   0023DA                     __ptext86:
  7997                           	callstack 0
  7998   0023DA                     _wr2RegCompleteHandler:
  7999                           	callstack 19
  8000   0023DA                     
  8001                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 163: static i2c_operations_t wr2
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/i2c_host/src/i2c_master_example.c: 164
      +                          : {;mcc_generated_files/i2c_host/src/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2)
      +                          ;
  8002   0023DA  C00A  F001         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  8003   0023DE  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  8004   0023E2  0E00               	movlw	0
  8005   0023E4  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  8006   0023E6  0E02               	movlw	2
  8007   0023E8  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  8008   0023EA  EC3D  F012         	call	i2_I2C_SetBuffer	;wreg free
  8009   0023EE                     
  8010                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 166:     I2C_SetDataCompleteCall
      +                          back((0),(0));
  8011   0023EE  0E00               	movlw	0
  8012   0023F0  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  8013   0023F2  0E00               	movlw	0
  8014   0023F4  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  8015   0023F6  0E00               	movlw	0
  8016   0023F8  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  8017   0023FA  0E00               	movlw	0
  8018   0023FC  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  8019   0023FE  ECA1  F012         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  8020   002402                     
  8021                           ;mcc_generated_files/i2c_host/src/i2c_master_example.c: 167:     return I2C_CONTINUE;
  8022   002402  0E04               	movlw	4
  8023   002404  0012               	return		;funcret
  8024   002406                     __end_of_wr2RegCompleteHandler:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
  8028 ;; Defined at:
  8029 ;;		line 274 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
  8032 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  8033 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
  8034 ;;  ptr             2    7[COMRAM] PTR void 
  8035 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8036 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;Total ram usage:        4 bytes
  8053 ;; Hardware stack levels used: 1
  8054 ;; Hardware stack levels required when called: 1
  8055 ;; This function calls:
  8056 ;;		i2_I2C_SetCallback
  8057 ;; This function is called by:
  8058 ;;		_rd1RegCompleteHandler
  8059 ;;		_rd2RegCompleteHandler
  8060 ;;		_wr1RegCompleteHandler
  8061 ;;		_wr2RegCompleteHandler
  8062 ;;		_rdBlkRegCompleteHandler
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text87
  8067   002542                     __ptext87:
  8068                           	callstack 0
  8069   002542                     i2_I2C_SetDataCompleteCallback:
  8070                           	callstack 19
  8071   002542                     
  8072                           ;mcc_generated_files/i2c_host/src/mssp.c: 274: void I2C_SetDataCompleteCallback(i2c_call
      +                          back_t cb, void *ptr);mcc_generated_files/i2c_host/src/mssp.c: 275: {;mcc_generated_file
      +                          s/i2c_host/src/mssp.c: 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  8073   002542  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
  8074   002546  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
  8075   00254A  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
  8076   00254E  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
  8077   002552  0E00               	movlw	0
  8078   002554  EC8C  F00F         	call	i2_I2C_SetCallback
  8079   002558  0012               	return		;funcret
  8080   00255A                     __end_ofi2_I2C_SetDataCompleteCallback:
  8081                           	callstack 0
  8082                           
  8083 ;; *************** function i2_I2C_SetCallback *****************
  8084 ;; Defined at:
  8085 ;;		line 304 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  idx             1    wreg     enum E2728
  8088 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
  8089 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  8090 ;;		 -> NULL(1), rd1RegCompleteHandler(1), 
  8091 ;;  ptr             2    2[COMRAM] PTR void 
  8092 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8093 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  idx             1    4[COMRAM] enum E2728
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8108 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;Total ram usage:        5 bytes
  8110 ;; Hardware stack levels used: 1
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		i2_I2C_SetDataCompleteCallback
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           	psect	text88
  8119   001F18                     __ptext88:
  8120                           	callstack 0
  8121   001F18                     i2_I2C_SetCallback:
  8122                           	callstack 19
  8123                           
  8124                           ;incstack = 0
  8125                           ;i2I2C_SetCallback@idx stored from wreg
  8126   001F18  6E05               	movwf	i2I2C_SetCallback@idx^0,c
  8127   001F1A                     
  8128                           ;mcc_generated_files/i2c_host/src/mssp.c: 304: static void I2C_SetCallback(i2c_callbackI
      +                          ndex_t idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_host/src/mssp.c: 305: 
      +                          {;mcc_generated_files/i2c_host/src/mssp.c: 306:     if(cb)
  8129   001F1A  5001               	movf	i2I2C_SetCallback@cb^0,w,c
  8130   001F1C  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
  8131   001F1E  B4D8               	btfsc	status,2,c
  8132   001F20  EF94  F00F         	goto	i2u139_41
  8133   001F24  EF96  F00F         	goto	i2u139_40
  8134   001F28                     i2u139_41:
  8135   001F28  EFAC  F00F         	goto	i2l3538
  8136   001F2C                     i2u139_40:
  8137   001F2C                     
  8138                           ;mcc_generated_files/i2c_host/src/mssp.c: 307:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 308:         I2C_Status.callbackTable[idx] = cb;
  8139   001F2C  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  8140   001F2E  0D02               	mullw	2
  8141   001F30  50F3               	movf	243,w,c
  8142   001F32  0F60               	addlw	low _I2C_Status
  8143   001F34  6ED9               	movwf	fsr2l,c
  8144   001F36  6ADA               	clrf	fsr2h,c
  8145   001F38  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
  8146   001F3C  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
  8147                           
  8148                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:         I2C_Status.callbackPayload[idx] =
      +                           ptr;
  8149   001F40  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  8150   001F42  0D02               	mullw	2
  8151   001F44  50F3               	movf	243,w,c
  8152   001F46  0F6C               	addlw	low (_I2C_Status+12)
  8153   001F48  6ED9               	movwf	fsr2l,c
  8154   001F4A  6ADA               	clrf	fsr2h,c
  8155   001F4C  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
  8156   001F50  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
  8157                           
  8158                           ;mcc_generated_files/i2c_host/src/mssp.c: 310:     }
  8159   001F54  EFBE  F00F         	goto	i2l612
  8160   001F58                     i2l3538:
  8161                           
  8162                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 313:         I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8163   001F58  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  8164   001F5A  0D02               	mullw	2
  8165   001F5C  50F3               	movf	243,w,c
  8166   001F5E  0F60               	addlw	low _I2C_Status
  8167   001F60  6ED9               	movwf	fsr2l,c
  8168   001F62  6ADA               	clrf	fsr2h,c
  8169   001F64  0EB4               	movlw	low _I2C_CallbackReturnStop
  8170   001F66  6EDE               	movwf	postinc2,c
  8171   001F68  0E26               	movlw	high _I2C_CallbackReturnStop
  8172   001F6A  6EDD               	movwf	postdec2,c
  8173                           
  8174                           ;mcc_generated_files/i2c_host/src/mssp.c: 314:         I2C_Status.callbackPayload[idx] =
      +                           (0);
  8175   001F6C  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  8176   001F6E  0D02               	mullw	2
  8177   001F70  50F3               	movf	243,w,c
  8178   001F72  0F6C               	addlw	low (_I2C_Status+12)
  8179   001F74  6ED9               	movwf	fsr2l,c
  8180   001F76  6ADA               	clrf	fsr2h,c
  8181   001F78  6ADE               	clrf	postinc2,c
  8182   001F7A  6ADD               	clrf	postdec2,c
  8183   001F7C                     i2l612:
  8184   001F7C  0012               	return		;funcret
  8185   001F7E                     __end_ofi2_I2C_SetCallback:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function i2_I2C_SetBuffer *****************
  8189 ;; Defined at:
  8190 ;;		line 264 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  buffer          2    0[COMRAM] PTR void 
  8193 ;;		 -> I2C_Read1ByteRegister@returnValue$data(3), I2C_Read2ByteRegister@returnValue$data(3), I2C_Write1ByteRegister@dat
      +a$data(3), I2C_Write2ByteRegister@data$data(3), 
  8194 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(3), I2C_Write2ByteRegister@reg(1), 
  8195 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  8196 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
  8197 ;;  bufferSize      2    2[COMRAM] unsigned int 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;Total ram usage:        4 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_rd1RegCompleteHandler
  8219 ;;		_rd2RegCompleteHandler
  8220 ;;		_wr1RegCompleteHandler
  8221 ;;		_wr2RegCompleteHandler
  8222 ;;		_rdBlkRegCompleteHandler
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text89
  8227   00247A                     __ptext89:
  8228                           	callstack 0
  8229   00247A                     i2_I2C_SetBuffer:
  8230                           	callstack 20
  8231   00247A                     
  8232                           ;mcc_generated_files/i2c_host/src/mssp.c: 264: void I2C_SetBuffer(void *buffer, size_t b
      +                          ufferSize);mcc_generated_files/i2c_host/src/mssp.c: 265: {;mcc_generated_files/i2c_host/
      +                          src/mssp.c: 266:     if(I2C_Status.bufferFree)
  8233   00247A  0100               	movlb	0	; () banked
  8234   00247C  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  8235   00247E  EF43  F012         	goto	i2u144_41
  8236   002482  EF45  F012         	goto	i2u144_40
  8237   002486                     i2u144_41:
  8238   002486  EF4E  F012         	goto	i2l589
  8239   00248A                     i2u144_40:
  8240   00248A                     
  8241                           ; BSR set to: 0
  8242                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 268:         I2C_Status.data_ptr = buffer;
  8243   00248A  C001  F07D         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
  8244   00248E  C002  F07E         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
  8245   002492                     
  8246                           ; BSR set to: 0
  8247                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:         I2C_Status.data_length = bufferSi
      +                          ze;
  8248   002492  C003  F07F         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
  8249   002496  C004  F080         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  8250   00249A                     
  8251                           ; BSR set to: 0
  8252                           ;mcc_generated_files/i2c_host/src/mssp.c: 270:         I2C_Status.bufferFree = 0;
  8253   00249A  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  8254   00249C                     i2l589:
  8255                           
  8256                           ; BSR set to: 0
  8257   00249C  0012               	return		;funcret
  8258   00249E                     __end_ofi2_I2C_SetBuffer:
  8259                           	callstack 0
  8260                           
  8261 ;; *************** function _I2C_MasterStop *****************
  8262 ;; Defined at:
  8263 ;;		line 594 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		None
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_I2C_DO_SEND_STOP
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text90
  8291   0026B8                     __ptext90:
  8292                           	callstack 0
  8293   0026B8                     _I2C_MasterStop:
  8294                           	callstack 20
  8295   0026B8                     
  8296                           ;mcc_generated_files/i2c_host/src/mssp.c: 596:     SSPCON2bits.PEN = 1;
  8297   0026B8  84C5               	bsf	197,2,c	;volatile
  8298   0026BA  0012               	return		;funcret
  8299   0026BC                     __end_of_I2C_MasterStop:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function _I2C_MasterEnableRestart *****************
  8303 ;; Defined at:
  8304 ;;		line 574 in file "mcc_generated_files/i2c_host/src/mssp.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;		None
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		None
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;Total ram usage:        0 bytes
  8323 ;; Hardware stack levels used: 1
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_I2C_DO_SEND_RESTART_READ
  8328 ;;		_I2C_DO_SEND_RESTART_WRITE
  8329 ;;		_I2C_DO_SEND_RESTART
  8330 ;;		_I2C_DO_RX_EMPTY
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text91
  8335   0026BC                     __ptext91:
  8336                           	callstack 0
  8337   0026BC                     _I2C_MasterEnableRestart:
  8338                           	callstack 20
  8339   0026BC                     
  8340                           ;mcc_generated_files/i2c_host/src/mssp.c: 576:     SSPCON2bits.RSEN = 1;
  8341   0026BC  82C5               	bsf	197,1,c	;volatile
  8342   0026BE  0012               	return		;funcret
  8343   0026C0                     __end_of_I2C_MasterEnableRestart:
  8344                           	callstack 0
  8345                           
  8346                           	psect	rparam
  8347   000000                     
  8348                           	psect	temp
  8349   00005A                     btemp:
  8350                           	callstack 0
  8351   00005A                     	ds	1
  8352   000000                     int$flags	set	btemp
  8353   000000                     wtemp8	set	btemp+1
  8354   000000                     ttemp5	set	btemp+1
  8355   000000                     ttemp6	set	btemp+4
  8356   000000                     ttemp7	set	btemp+8
  8357                           
  8358                           	psect	config
  8359                           
  8360                           ; Padding undefined space
  8361   300000                     	org	3145728
  8362   300000  FF                 	db	255
  8363                           
  8364                           ;Config register CONFIG1H @ 0x300001
  8365                           ;	Oscillator Selection bits
  8366                           ;	FOSC = HS, HS oscillator
  8367                           ;	Fail-Safe Clock Monitor Enable bit
  8368                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8369                           ;	Internal/External Oscillator Switchover bit
  8370                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8371   300001                     	org	3145729
  8372   300001  02                 	db	2
  8373                           
  8374                           ;Config register CONFIG2L @ 0x300002
  8375                           ;	Power-up Timer Enable bit
  8376                           ;	PWRTEN = OFF, PWRT disabled
  8377                           ;	Brown-out Reset Enable bits
  8378                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8379                           ;	Brown Out Reset Voltage bits
  8380                           ;	BORV = 18, VBOR set to 1.8 V nominal
  8381   300002                     	org	3145730
  8382   300002  1F                 	db	31
  8383                           
  8384                           ;Config register CONFIG2H @ 0x300003
  8385                           ;	Watchdog Timer Enable bit
  8386                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  8387                           ;	Watchdog Timer Postscale Select bits
  8388                           ;	WDTPS = 32768, 1:32768
  8389   300003                     	org	3145731
  8390   300003  1E                 	db	30
  8391                           
  8392                           ; Padding undefined space
  8393   300004                     	org	3145732
  8394   300004  FF                 	db	255
  8395                           
  8396                           ;Config register CONFIG3H @ 0x300005
  8397                           ;	CCP2 MUX bit
  8398                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8399                           ;	PORTB A/D Enable bit
  8400                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8401                           ;	Low-Power Timer1 Oscillator Enable bit
  8402                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8403                           ;	HFINTOSC Fast Start-up
  8404                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  8405                           ;	MCLR Pin Enable bit
  8406                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8407   300005                     	org	3145733
  8408   300005  89                 	db	137
  8409                           
  8410                           ;Config register CONFIG4L @ 0x300006
  8411                           ;	Stack Full/Underflow Reset Enable bit
  8412                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8413                           ;	Single-Supply ICSP Enable bit
  8414                           ;	LVP = ON, Single-Supply ICSP enabled
  8415                           ;	Extended Instruction Set Enable bit
  8416                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8417                           ;	Background Debugger Enable bit
  8418                           ;	DEBUG = 0x1, unprogrammed default
  8419   300006                     	org	3145734
  8420   300006  85                 	db	133
  8421                           
  8422                           ; Padding undefined space
  8423   300007                     	org	3145735
  8424   300007  FF                 	db	255
  8425                           
  8426                           ;Config register CONFIG5L @ 0x300008
  8427                           ;	Code Protection Block 0
  8428                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8429                           ;	Code Protection Block 1
  8430                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8431                           ;	Code Protection Block 2
  8432                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8433                           ;	Code Protection Block 3
  8434                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8435   300008                     	org	3145736
  8436   300008  0F                 	db	15
  8437                           
  8438                           ;Config register CONFIG5H @ 0x300009
  8439                           ;	Boot Block Code Protection bit
  8440                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8441                           ;	Data EEPROM Code Protection bit
  8442                           ;	CPD = OFF, Data EEPROM not code-protected
  8443   300009                     	org	3145737
  8444   300009  C0                 	db	192
  8445                           
  8446                           ;Config register CONFIG6L @ 0x30000A
  8447                           ;	Write Protection Block 0
  8448                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8449                           ;	Write Protection Block 1
  8450                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8451                           ;	Write Protection Block 2
  8452                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8453                           ;	Write Protection Block 3
  8454                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  8455   30000A                     	org	3145738
  8456   30000A  0F                 	db	15
  8457                           
  8458                           ;Config register CONFIG6H @ 0x30000B
  8459                           ;	Configuration Register Write Protection bit
  8460                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8461                           ;	Boot Block Write Protection bit
  8462                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8463                           ;	Data EEPROM Write Protection bit
  8464                           ;	WRTD = OFF, Data EEPROM not write-protected
  8465   30000B                     	org	3145739
  8466   30000B  E0                 	db	224
  8467                           
  8468                           ;Config register CONFIG7L @ 0x30000C
  8469                           ;	Table Read Protection Block 0
  8470                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8471                           ;	Table Read Protection Block 1
  8472                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8473                           ;	Table Read Protection Block 2
  8474                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8475                           ;	Table Read Protection Block 3
  8476                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8477   30000C                     	org	3145740
  8478   30000C  0F                 	db	15
  8479                           
  8480                           ;Config register CONFIG7H @ 0x30000D
  8481                           ;	Boot Block Table Read Protection bit
  8482                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8483   30000D                     	org	3145741
  8484   30000D  40                 	db	64
  8485                           tosu	equ	0xFFF
  8486                           tosh	equ	0xFFE
  8487                           tosl	equ	0xFFD
  8488                           stkptr	equ	0xFFC
  8489                           pclatu	equ	0xFFB
  8490                           pclath	equ	0xFFA
  8491                           pcl	equ	0xFF9
  8492                           tblptru	equ	0xFF8
  8493                           tblptrh	equ	0xFF7
  8494                           tblptrl	equ	0xFF6
  8495                           tablat	equ	0xFF5
  8496                           prodh	equ	0xFF4
  8497                           prodl	equ	0xFF3
  8498                           indf0	equ	0xFEF
  8499                           postinc0	equ	0xFEE
  8500                           postdec0	equ	0xFED
  8501                           preinc0	equ	0xFEC
  8502                           plusw0	equ	0xFEB
  8503                           fsr0h	equ	0xFEA
  8504                           fsr0l	equ	0xFE9
  8505                           wreg	equ	0xFE8
  8506                           indf1	equ	0xFE7
  8507                           postinc1	equ	0xFE6
  8508                           postdec1	equ	0xFE5
  8509                           preinc1	equ	0xFE4
  8510                           plusw1	equ	0xFE3
  8511                           fsr1h	equ	0xFE2
  8512                           fsr1l	equ	0xFE1
  8513                           bsr	equ	0xFE0
  8514                           indf2	equ	0xFDF
  8515                           postinc2	equ	0xFDE
  8516                           postdec2	equ	0xFDD
  8517                           preinc2	equ	0xFDC
  8518                           plusw2	equ	0xFDB
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    58
    Data        42
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      89
    BANK0           160      0     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    convert_uint8_to_string@str	PTR unsigned char  size(1) Largest target is 3
		 -> dummy(COMRAM[3]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), LCD_1$lcd_data(BANK0[8]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), LCD_1$lcd_data(BANK0[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), LCD_1$lcd_data(BANK0[8]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3291	PTR FTN(PTR void ,)enum E98 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_RX$3291$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3296	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$3303$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3285	PTR FTN(PTR void ,)enum E98 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX$3285$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3290	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3297	PTR FTN(PTR void ,)enum E98 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX_EMPTY$3297$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3302	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c_fsmStateTable	const PTR FTN()enum E2710[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_MasterFsm$3284	const PTR FTN()enum E2710 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E98 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E98 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E98 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E98[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[3]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[3]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[3]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@data$data(COMRAM[3]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    Keypad_Get_Value@Value	PTR unsigned char  size(1) Largest target is 1
		 -> KeyPad_Value(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllhl[1]), LATB(ABS[1]), LATC(ABS[1]), LATD(BITBIGSFRlllll[1]), 
		 -> LATE(BITBIGSFRlhl[1]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> dummy(COMRAM[3]), STR_7(CODE[11]), STR_8(CODE[11]), STR_9(CODE[7]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 11
		 -> dummy(COMRAM[3]), STR_7(CODE[11]), STR_8(CODE[11]), STR_9(CODE[7]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> LCD_1(BANK0[10]), 

    memset@p	PTR unsigned char  size(1) Largest target is 3
		 -> dummy(COMRAM[3]), 

    memset@p1	PTR void  size(1) Largest target is 3
		 -> dummy(COMRAM[3]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(ABS[1]), PORTC(ABS[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRllhl[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S585$data	PTR unsigned char  size(2) Largest target is 0

    S743$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S743$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S743$callbackTable	PTR FTN(PTR void ,)enum E98[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S743$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 3
		 -> dummy(COMRAM[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), dummy(COMRAM[3]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlhl[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(BITBIGSFRlllll[1]), 
		 -> TRISE(BITBIGSFRhllll[1]), 

    UART_Send_String@String	PTR unsigned char  size(2) Largest target is 26
		 -> RealTimeClockDS1307_Pack_Date(BANK0[9]), RealTimeClockDS1307_Pack_Time(BANK0[9]), STR_4(CODE[7]), STR_5(CODE[7]), 
		 -> STR_6(CODE[26]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint8_to_string
    _lcd_8bit_send_string_pos->_lcd_8bit_send_string
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _convert_uint8_to_string->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _TemSensor_TC74_Read_Temp->_I2C_Read1ByteRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _RealTimeClockDs1307_Get_Date_Time->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _Print_RealTimeClockDS1307->_UART_Send_String
    _UART_Send_String->_EUSART_Write
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   66217
             _I2C_Write1ByteRegister
                   _Keypad_Get_Value
          _Print_RealTimeClockDS1307
  _RealTimeClockDs1307_Get_Date_Time
                  _SYSTEM_Initialize
           _TemSensor_TC74_Read_Temp
            _convert_uint8_to_string
                        _keyPad_Init
                 _lcd_8bit_intialize
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             6     1      5   19184
                                             47 COMRAM     6     1      5
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3   10098
                                             43 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 4     1      3    7417
                                             43 COMRAM     4     1      3
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     4      2    7070
                                             37 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_intialize                                   4     3      1   13940
                                             43 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2    9230
                                             37 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    3239
                                             35 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   3     2      1    4042
                                             35 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    2957
                                             27 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         7     6      1     347
                                             27 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _keyPad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_string                              3     2      1    2526
                                             52 COMRAM     3     2      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    1558
                                             39 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                             34 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                             27 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                             27 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _TemSensor_TC74_Read_Temp                             2     2      0    6661
                                             39 COMRAM     2     2      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     534
                   _CLOCK_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClockDs1307_Get_Date_Time                    6     0      6    6615
                                             39 COMRAM     6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1    6615
                                             36 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _Print_RealTimeClockDS1307                            0     0      0     872
                   _UART_Send_String
 ---------------------------------------------------------------------------------
 (2) _UART_Send_String                                     8     4      4     872
                                             28 COMRAM     8     4      4
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Get_Value                                     6     5      1     367
                                             27 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2    6288
                                             36 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2218
                                             32 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1608
                                             27 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                             32 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                             27 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0     144
                                             29 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C_SetInterruptHandler                              2     0      2      98
                                             27 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0      46
                                             27 COMRAM     2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                             27 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                      10    10      0   17934
                                             17 COMRAM    10    10      0
                                NULL *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsr                                        0     0      0   17934
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterFsm                                        3     3      0   17934
                                             14 COMRAM     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (9) i2_I2C_MasterClearIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX_EMPTY                                      2     2      0    4467
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX                                            2     2      0    4489
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX                                            2     2      0    4467
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_ADDRESS_NACK                                  2     2      0    4467
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             3     1      2     858
                                              9 COMRAM     3     1      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) i2_I2C_SetDataCompleteCallback                       4     0      4     510
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (12) i2_I2C_SetCallback                                   5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2_I2C_SetBuffer                                     4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Write1ByteRegister
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterEnableIrq
       _I2C_MasterOpen
       _I2C_SetInterruptHandler
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
     _I2C_SetDataCompleteCallback
       _I2C_SetCallback
   _Keypad_Get_Value
   _Print_RealTimeClockDS1307
     _UART_Send_String
       _EUSART_Write
   _RealTimeClockDs1307_Get_Date_Time
     _I2C_Read1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
   _TemSensor_TC74_Read_Temp
     _I2C_Read1ByteRegister
   _convert_uint8_to_string
     _memset
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _keyPad_Init
   _lcd_8bit_intialize
     _gpio_pin_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_logic
     _lcd_8bit_send_command
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
         _gpio_pin_write_logic
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char_data
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      59       1       94.7%
BITBIGSFRhhlhh      1C      0       0      37        0.0%
BITBIGSFRlllll      1C      0       0      48        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhlhhhh      C      0       0      40        0.0%
BITBIGSFRhlhhhl      7      0       0      41        0.0%
BITBIGSFRhhll        6      0       0      39        0.0%
BITBIGSFRllhl        4      0       0      46        0.0%
BITBIGSFRlhl         4      0       0      45        0.0%
BITBIGSFRhllll       4      0       0      44        0.0%
BITBIGSFRhlhl        3      0       0      42        0.0%
BITBIGSFRhhlhl       2      0       0      38        0.0%
BITBIGSFRhlllh       1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD      49        0.0%
DATA                 0      0      BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 10 17:27:08 2024

                            ??_I2C_DO_SEND_ADR_READ 0001                                     _NVM_A6_Received 0052  
                           ??_I2C_DO_SEND_ADR_WRITE 0002                                         _SSPSTATbits 0FC7  
                                                l25 25F4                                                  l37 143C  
       __end_of_EUSART_OverrunErrorCallbackRegister 24DC               ??_EUSART_OverrunErrorCallbackRegister 001E  
              ?_EUSART_OverrunErrorCallbackRegister 001C                 _EUSART_OverrunErrorCallbackRegister 24C0  
                             ??_I2C_DO_SEND_RESTART 0001                                                 l120 1C8E  
                                               l113 172E                                                 l140 1B26  
                                               l303 154C                                                 l127 1C18  
                                               l216 209A                                                 l145 225A  
                                               l402 1E4A                                                 l226 25A8  
                                               l219 1816                                                 l236 214E  
                                               l324 203E                                                 l157 219A  
                                               l181 2454                                                 l191 1AA2  
                                               l612 1EB0                                                 l284 132A  
                                               l607 2626                                                 l384 1D72  
                                               l570 2354                                                 l562 2582  
                                               l731 24BE                                                 l811 2674  
                                               l901 2608                                                 l734 269A  
                                               l582 262E                                                 l566 1A1E  
                                               l814 268A                                                 l752 2692  
                                               l576 221C                                                 l592 2528  
                                               l914 25FE                                                 l773 268E  
                                               l589 2478                                                 l782 269E  
                                               l598 2540                                                 l779 2696  
                                               l948 2328                                                 l869 2292  
                                               l958 261C                                                 l975 2510  
                                               l888 2612                          ??_INT0_SetInterruptHandler 001E  
                                               _ret 0058                           ?_lcd_8bit_send_string_pos 0030  
                                               tosl 0FFD                                                 wreg 0FE8  
                       __end_of_lcd_8bit_set_cursor 1AA4                                        ?_keyPad_Init 0001  
                      ??_I2C_SetAddressNackCallback 0025                              _I2C_Write1ByteRegister 1DE2  
                          ??_I2C_CallbackReturnStop 000C                                        _I2C_DO_RESET 25C8  
                                              l1016 22C8                        __end_of_lcd_8bit_send_string 1B28  
                           ??_rd2RegCompleteHandler 000C                                                l1081 255C  
                                              l1084 256E                                                l1180 1218  
                                              l1149 15D8                                                l1094 24F6  
                                              l1098 24DA                                                l4100 1D0A  
                                              l4110 1D5C                                                l4102 1D20  
                                              l4112 1D70                                                l4104 1D32  
                                              l4200 22DC                                                l4106 1D44  
                                              l4050 24DC                                                l4042 2688  
                                              l4202 22DE                                                l4210 10A8  
                                              l4108 1D58                                                l4052 24EE  
                                              l4044 260A                                                l4300 22FA  
                                              l4060 1C98                                                l4220 10F4  
                                              l4212 10AE                                                l4204 1084  
                                              l5100 1C42                                                l4054 24C0  
                                              l4046 2600                                                l4310 2326  
                                              l4302 230E                                                l4070 1CCE  
                                              l4062 1CAA                                                l1662 1CFA  
                                              l4222 10F8                                                l4206 108C  
                                              l5110 1C72                                                l4320 1DE4  
                                              l4312 2614                                                l4056 24D2  
                                              l4048 25F6                                                l4304 2310  
                                              l4072 1CE4                                                l4064 1CB2  
                                              l1672 1FD8                                                l4080 1F7E  
                                              l4240 114A                                                l4224 1106  
                                              l4216 10B2                                                l4208 109E  
                                              l5112 1C82                                                l5120 1BB8  
                                              l4330 1E32                                                l4322 1DE4  
                                              l4314 2294                                                l4306 2316  
                                              l4074 1CEC                                                l4066 1CBA  
                                              l4058 1C90                                                l4090 1FC4  
                                              l4082 1F90                                                l4250 1186  
                                              l4242 115C                                                l4234 1116  
                                              l4226 110A                                                l4218 10E6  
                                              l5106 1C46                                                l5114 1C8C  
                                              l5130 1BD0                                                l5122 1BC0  
                                              l5210 1A24                                                l4332 1E36  
                                              l4324 1DFA                                                l4500 179E  
                                              l4316 22A8                                                l4308 2320  
                                              l4076 1CEE                                                l4068 1CC8  
                                              l4092 1FCC                                                l4084 1F98  
                                              l4252 11CC                                                l4244 1172  
                                              l4228 1112                                                l4260 1210  
                                              l5060 143E                                                l5108 1C70  
                                              l5300 1712                                                l5132 1BFA  
                                              l5124 1BCC                                                l5212 1A2A  
                                              l5220 1A7A                                                l1669 1D02  
                                              l4326 1E0C                                                l4350 136C  
                                              l4342 1334                                                l4270 2138  
                                              l4510 17EC                                                l4502 17A6  
                                              l4318 22B4                                                l4078 1CF4  
                                              l4094 1FD2                                                l4086 1FA0  
                                              l4254 11D6                                                l4246 117C  
                                              l4238 1148                                                l4334 25EC  
                                              l5150 12AC                                                l5142 121A  
                                              l5062 1452                                                l5302 171E  
                                              l5134 1BFC                                                l5118 1BA4  
                                              l5230 1AC0                                                l5214 1A3E  
                                              l5222 1AA0                                                l1679 1FE0  
                                              l3640 24BC                                                l3632 261E  
                                              l4328 1E1E                                                l4352 1398  
                                              l4360 1416                                                l4344 1338  
                                              l4336 132C                                                l4264 20F6  
                                              l4512 17FE                                                l4504 17AA  
                                              l4272 2570                                                l1848 22F8  
                                              l4088 1FAE                                                l4256 11D8  
                                              l4248 117E                                                l5144 122E  
                                              l5072 1520                                                l5064 1472  
                                              l5160 1FE2                                                l5304 172C  
                                              l5136 1C0C                                                l5232 1AEE  
                                              l5216 1A52                                                l5208 1A20  
                                              l5320 221E                                                l3634 269C  
                                              l3562 2690                                                l3650 21E0  
                                              l3810 1998                                                l4362 141C  
                                              l4354 13C4                                                l4346 133E  
                                              l4266 2102                                                l4506 17C2  
                                              l4098 1D06                                                l4274 2580  
                                              l4290 2266                                                l4530 2508  
                                              l4514 259A                                                l4258 11EA  
                                              l5154 12FC                                                l5146 124E  
                                              l5066 147A                                                l5074 154A  
                                              l5162 1FF2                                                l5090 2452  
                                              l5082 242E                                                l5138 1C16  
                                              l5234 1AF2                                                l5226 1AA4  
                                              l5218 1A66                                                l5322 222E  
                                              l3660 220A                                                l3652 21E4  
                                              l3644 268C                                                l3636 249E  
                                              l3820 19A6                                                l3812 199C  
                                              l4364 142C                                                l4348 1348  
                                              l4268 2134                                                l4508 17D4  
                                              l4292 2272                                                l4532 250C  
                                              l4524 24F8                                                l4516 259A  
                                              l4196 22CA                                                l4460 2156  
                                              l5148 1256                                                l5156 1328  
                                              l5068 14D0                                                l5164 2012  
                                              l5084 242E                                                l5236 1B24  
                                              l5228 1AB8                                                l5324 2236  
                                              l3646 2694                                                l3662 2212  
                                              l3654 21F4                                                l3638 24AC  
                                              l3830 19C8                                                l3822 19AE  
                                              l3814 199E                                                l3806 1984  
                                              l3670 1E4E                                                l4358 13F0  
                                              l4294 2274                                                l4286 2670  
                                              l4526 2500                                                l4518 25A6  
                                              l4198 22D2                                                l4462 2166  
                                              l5166 201A                                                l5086 243A  
                                              l5094 1C1A                                                l5270 1672  
                                              l5326 2246                                                l3648 2698  
                                              l3664 2216                                                l3656 21F6  
                                              l3840 19F0                                                l3832 19D0  
                                              l3824 19B0                                                l3816 19A0  
                                              l3808 1988                                                l3672 1E60  
                                              l4480 1742                                                l4472 2040  
                                              l4296 2282                                                l4288 225C  
                                              l4528 2504                                                l4464 216E  
                                              l5600 1534                                                l5168 203C  
                                              l5088 2444                                                l5096 1C2E  
                                              l5280 1684                                                l5264 1642  
                                              l5328 2258                                                l3658 21FA  
                                              l3666 221A                                                l3850 1A14  
                                              l3842 19F8                                                l3834 19D8  
                                              l3826 19B8                                                l3818 19A2  
                                              l3674 1E8C                                                l4490 176E  
                                              l4482 1746                                                l4474 2088  
                                              l4298 2284                                                l4466 2186  
                                              l4458 2152                                                l5098 1C36  
                                              l5290 16D6                                                l5282 1694  
                                              l5266 1656                                                l3852 1A18  
                                              l3844 1A00                                                l3836 19E0  
                                              l3828 19C0                                                l3860 2456  
                                              l4492 1776                                                l4484 174E  
                                              l4468 2198                                                l5292 16E2  
                                              l5284 16A6                                                l5276 1676  
                                              l5268 165E                                                l3870 2628  
                                              l3846 1A0C                                                l3838 19E8  
                                              l3854 1A1C                                                l3862 2466  
                                              l4494 177E                                                l4486 1756  
                                              l4478 1730                                                l5294 16EE  
                                              l5286 16B2                                                l5278 1682  
                                              l5470 1552                                                l3880 2342  
                                              l3848 1A10                                                l3864 246E  
                                              l3784 255C                                                l4496 1792  
                                              l4488 176A                                                l5296 16FA  
                                              l5288 16D0                                                l5480 1570  
                                              l5472 1554                                                l3882 234E  
                                              l3874 232A                                                l3866 2476  
                                              l3858 2512                                                l3786 256A  
                                              l4498 1796                                                l5298 1706  
                                              l5490 15BA                                                l5482 1574  
                                              l5474 1556                                                l3884 2352  
                                              l3876 232E                                                l3868 252A  
                                              l5492 160E                                                l5484 157C  
                                              l5476 1558                                                l5468 154E  
                                              l3878 233E                                                l5494 1620  
                                              l5486 1588                                                l5478 1562  
                                              l5496 1624                                                l5488 1598  
                                              l5498 1632                                                STR_1 1080  
                                              STR_4 1072                                                STR_5 1079  
                                              STR_6 103B                                                STR_7 1060  
                                              STR_8 1055                                                STR_9 106B  
                                              u2020 1DFA                                                u2021 1DF6  
                                              u2030 1E4A                                                u2110 2166  
                                              u2031 1E46                                                u2111 2162  
                                              u2040 143C                  lcd_8bit_send_command@l_pin_counter 002B  
                                              u2041 1438                                                u2121 2092  
                                              u3020 1598                                                _IOCB 0F7D  
                                              u3021 1594                                                _LATA 0F89  
                                              _LATB 0F8A                                                u3031 1618  
                                              _LATC 0F8B                                                _LATD 0F8C  
                                              _LATE 0F8D                                                u1450 24AC  
                                              u1451 24A8                                                u1460 21F4  
                                              u1620 1998                                                u1461 21F0  
                                              u1621 1994                                                u1470 220A  
                                              u1630 2466                                                u1471 2206  
                                              u1631 2462                                                u3047 169A  
                                              u1640 233E                                                u1480 1E60  
                                              u1560 256A                                                u1800 1D20  
                                              u1720 24EE                                                u1641 233A  
                                              u1481 1E5C                                                u1561 2566  
                                              u1801 1D1C                                                u1721 24EA  
                                              u3057 16B8                                                u1810 1D70  
                                              u1730 24D2                                                u1811 1D6C  
                                              u1731 24CE                                                u3067 16D2  
                                              u1740 1CAA                                                u1900 109E  
                                              u2700 1C82                                                u1741 1CA6  
                                              u1901 109A                                                u3077 243C  
                                              u2701 1C7E                                                u1750 1CC8  
                                              u1910 1106                                                u2710 1BB8  
                                              u3087 1422                                                u1751 1CC4  
                                              u1911 1102                                                u2711 1BB4  
                                              u1760 1CE4                                                u1920 1144  
                                              u2640 1452                                                u2800 2012  
                                              u1761 1CE0                                                u1921 1140  
                                              u2641 144E                                                u2801 200E  
                                              u1770 1F90                                                u1930 115C  
                                              u2650 1472                                                u2730 1C0C  
                                              u1771 1F8C                                                u1931 1158  
                                              u2651 146E                                                u2731 1C08  
                                              u1780 1FAE                                                u1940 1172  
                                              u2740 122E                                                u2724 1BEA  
                                              u2820 1AB8                                                u1781 1FAA  
                                              u1941 116E                                                u2741 122A  
                                              u2725 1BE6                                                u2821 1AB4  
                                              u1790 1FC4                                                u1950 11EA  
                                              u2750 124E                                                u2830 1AE6  
                                              u2910 222E                                                u1791 1FC0  
                                              u1951 11E6                                                u2751 124A  
                                              u2911 222A                                                u1960 1210  
                                              u2664 1498                                                u2680 1C2E  
                                              u2840 1B14                                                u1961 120C  
                                              u2665 1494                                                u2681 1C2A  
                                              u1970 2130                                                u1890 22F8  
                                              u2674 14EE                                                u2850 1B24  
                                              u1891 22F4                                                u2675 14EA  
                                              u2851 1B20                                                u1980 214E  
                                              u2780 1312                                                u2764 1274  
                                              u1981 214A                                                u2781 130C  
                                              u2765 1270                                                u2837 1ADC  
                                              u2774 12CA                                                u2790 1FF2  
                                              u2694 1C60                                                u2775 12C6  
                                              u2791 1FEE                                                u2695 1C5C  
                                              u2847 1B0A                                                u2880 1656  
                                              u1977 2126                                                u2881 1652  
                                              u2786 1314                                                u2890 1694  
                                              u2891 1690                                                _WPUB 0F7C  
                           ??_wr2RegCompleteHandler 000C                             __end_of_NVM_StatusClear 268C  
                                              _main 154E                            ?_I2C_CallbackReturnReset 000A  
                                              fsr0h 0FEA                                                indf0 0FEF  
                                              fsr2h 0FDA                                                fsr0l 0FE9  
                                              indf2 0FDF                                                fsr1l 0FE1  
                                              fsr2l 0FD9                                    __end_of_I2C_Open 1A20  
                                              btemp 005A                               ?i2_I2C_MasterClearIrq 0001  
                         ?_INT2_SetInterruptHandler 001C                                                prodh 0FF4  
                                              prodl 0FF3                                                start 00B6  
                _EUSART_DefaultOverrunErrorCallback 0000                             _I2C_SetInterruptHandler 261E  
                     __end_of_lcd_8bit_send_command 1C90                                        ___param_bank 0000  
                        ?_Print_RealTimeClockDS1307 0001                                _gpio_pin_write_logic 143E  
                                  ?_I2C_MasterClose 0001                                       ?_EUSART_Write 0001  
                                  ?_I2C_MasterStart 0001                                       _I2C_DO_RX_ACK 2640  
                                  ?_I2C_MasterWrite 0001                                               ?_main 0001  
                                             _EEADR 0FA9                               _I2C_Read1ByteRegister 1D04  
                                             _LCD_1 00BA                                     __end_of___lwdiv 1D04  
                                   __end_of___lwmod 1FE2                                               i2l441 23D8  
                                             i2l450 2404                                               i2l612 1F7C  
                                             i2l444 23AC                                               i2l453 21DC  
                                             i2l701 2636                                               i2l622 25EA  
                                             i2l710 1F16                                               i2l447 2380  
                                             i2l631 18A2                                               i2l615 267A  
                                             i2l704 25D2                                               i2l721 26B2  
                                             i2l625 25B8                                               i2l634 18DA  
                                             i2l619 1DE0                                               i2l740 266E  
                                             i2l628 25C6                                               i2l718 26B6  
                                             i2l743 26BE                                               i2l647 1912  
                                             i2l592 2558                                               i2l648 1980  
                                             i2l737 26AA                                               i2l761 2680  
                                             i2l665 1BA2                                               i2l755 26BA  
                                             i2l659 25DE                                               i2l683 2666  
                                             i2l764 2686                                               i2l692 264E  
                                             i2l589 249C                                               i2l749 26AE  
                                             i2l758 2596                                               i2l686 265E  
                                             i2l782 26A2                                               i2l695 2646  
                                             i2l785 26A6                                               i2l689 2656  
                                             i2l698 263E                                               i2l874 006A  
                                             i2l878 008A                                               _RCREG 0FAE  
                                             _RCSTA 0FAB                                               _SPBRG 0FAF  
                                             _PORTA 0F80                                               _PORTB 0F81  
                                             _PORTC 0F82                                               _PORTD 0F83  
                                             _PORTE 0F84                                   ??_I2C_DO_TX_EMPTY 000D  
                                             _TRISA 0F92                                               _TRISB 0F93  
                                             _TRISC 0F94                                               _TRISD 0F95  
                                             _TRISE 0F96                                               _TXREG 0FAD  
                                             _TXSTA 0FAC                                   __end_of_I2C_DO_RX 1982  
                                 __end_of_I2C_DO_TX 18DC                                     __end_of_dpowers 103B  
                                             _dummy 0055                                   __end_of_I2C_Close 2356  
                    I2C_MasterOperation@returnValue 001D                            ?_lcd_8bit_send_char_data 0026  
                     _RealTimeClockDS1307_Pack_Date 008A                             _I2C_MasterEnableRestart 26BC  
                     _RealTimeClockDS1307_Pack_Time 0093                            _INT1_SetInterruptHandler 2600  
                                             pclath 0FFA                                               pclatu 0FFB  
                                             tablat 0FF5                                    ?_I2C_SetCallback 001C  
                      I2C_SetAddressNackCallback@cb 0021                                               plusw0 0FEB  
                                             plusw2 0FDB                                               ttemp5 005B  
                                             ttemp6 005E                                               ttemp7 0062  
                                             status 0FD8                                               wtemp8 005B  
                                   __end_of_sprintf 121A                                   ?_I2C_DO_SEND_STOP 0001  
                                ??_I2C_DO_SEND_STOP 0001                                     __initialization 209C  
                             i2I2C_SetBuffer@buffer 0001                                        __end_of_main 1642  
                             ?_gpio_pin_write_logic 001C                           ?_I2C_DO_SEND_RESTART_READ 0001  
                 __end_of_Print_RealTimeClockDS1307 1818                                      ??_EUSART_Write 001C  
                                    ?_I2C_DO_RX_ACK 0001                              lcd_8bit_set_cursor@lcd 002C  
                            lcd_8bit_set_cursor@ret 002F                              lcd_8bit_set_cursor@row 002D  
                                     _lat_registers 00A6                                              ??_main 0038  
                                 ?_I2C_MasterIsNack 0001                                       __activetblptr 0003  
                                 ?_I2C_MasterSetIrq 0001                    __end_of_TemSensor_TC74_Read_Temp 25AA  
                                ??_I2C_MasterIsNack 0001  EUSART_OverrunErrorCallbackRegister@callbackHandler 001C  
EUSART_FramingErrorCallbackRegister@callbackHandler 001C                                  ??_I2C_MasterSetIrq 0001  
                        _EUSART_OverrunErrorHandler 0044                     __end_of_I2C_CallbackReturnReset 26B4  
                                            _EEADRH 0FAA                                              _EEDATA 0FA8  
                                            _EECON2 0FA7                       I2C_SetDataCompleteCallback@cb 0021  
                   i2I2C_SetDataCompleteCallback@cb 0006                                              _ANSELH 0F7F  
                                            i2l4002 1B4A                                              i2l4010 2644  
                                            i2l4014 25C8                                              i2l4030 1EC6  
                                            i2l4022 1EB2                                              i2l4008 2640  
                                            i2l4016 25CC                                              i2l4024 1EB6  
                                            i2l4018 25D0                                              i2l4026 1EBE  
                                            i2l4036 1ECE                                              i2l3600 2382  
                                            i2l3602 2396                                              i2l3610 236A  
                                            i2l3620 2402                                              i2l3604 23AA  
                                            i2l3612 237E                                              i2l3700 26A8  
                                            i2l3534 1F1A                                              i2l3536 1F2C  
                                            i2l3616 23DA                                              i2l3608 2356  
                                            i2l3624 219C                                              i2l3704 267C  
                                            i2l3720 2650                                              i2l3712 2638  
                                            i2l4096 26A0                                              i2l4280 1D88  
                                            i2l3570 247A                                              i2l3538 1F58  
                                            i2l3618 23EE                                              i2l3626 21C6  
                                            i2l3722 2654                                              i2l3714 263C  
                                            i2l3706 2630                                              i2l4282 1D9C  
                                            i2l4522 2676                                              i2l3564 26BC  
                                            i2l3572 248A                                              i2l3628 21DA  
                                            i2l3732 26B0                                              i2l3900 25B6  
                                            i2l3708 2634                                              i2l4284 1DA2  
                                            i2l4276 1D74                                              i2l3566 26B8  
                                            i2l3574 2492                                              i2l3718 26AC  
                                            i2l3726 26A4                                              i2l4278 1D78  
                                            i2l3576 249A                                              i2l3592 23AE  
                                            i2l3728 26B4                                              i2l3568 2682  
                                            i2l3680 266A                                              i2l3904 25BA  
                                            i2l3920 1838                                              i2l3912 1818  
                                            i2l3578 2542                                              i2l3594 23C2  
                                            i2l3906 25BE                                              i2l3930 1848  
                                            i2l3682 2660                                              i2l3690 265C  
                                            i2l5602 1F00                                              i2l3596 23D6  
                                            i2l3676 2584                                              i2l3908 25C4  
                                            i2l3932 18A6                                              i2l3924 1840  
                                            i2l3916 1830                                              i2l5604 195A  
                                            i2l3684 2664                                              i2l3934 18B8  
                                            i2l5606 187C                                              i2l3950 18F0  
                                            i2l3694 2648                                              i2l5608 1B7C  
                                            i2l3936 18D2                                              i2l3960 1918  
                                            i2l3952 1908                                              i2l3688 2658  
                                            i2l3696 264C                                              i2l4920 0040  
                                            i2l3890 25E4                                              i2l3938 18D8  
                                            i2l3970 1928                                              i2l3954 190C  
                                            i2l3946 18DC                                              i2l4922 004E  
                                            i2l3892 25E8                                              i2l3964 1920  
                                            i2l3948 18EA                                              i2l3980 25DC  
                                            i2l4924 0078                                              i2l3990 1B38  
                                            i2l4918 0032                                              i2l3992 1B3C  
                                            i2l3984 1B28                                              i2l3888 25E0  
                                            i2l3896 25AA                                              i2l3976 25D4  
                                            i2l3986 1B30                                              i2l3898 25AE  
                                            i2l3978 25D8                                              i2l3996 1B42  
                                            _OSCCON 0FD3                              ??i2_I2C_MasterClearIrq 0001  
                         ??_I2C_SetInterruptHandler 001E                                              _SPBRGH 0FB0  
                                            _SSPADD 0FC8                                    ?_NVM_StatusClear 0001  
                                            _SSPBUF 0FC9                                 _I2C_MasterEnableIrq 268C  
                               _I2C_MasterGetRxData 26A8                                       _I2C_MasterFsm 1D74  
                                     _I2C_MasterIsr 2676                                           ??___lwdiv 0020  
                                         ??___lwmod 0027                                _lcd_8bit_send_string 1AA4  
                                            _memset 22CA                                              clear_0 20DA  
                                            clear_1 20E6                                   I2C_SetCallback@cb 001C  
                            ?_I2C_Read1ByteRegister 0025                                              isa$std 0001  
                                     _I2C_SetBuffer 2456                                   ?_CLOCK_Initialize 0001  
                                 ?_UART_Send_String 001D                         lcd_8bit_send_string_pos@lcd 0030  
                       lcd_8bit_send_string_pos@ret 0035                         lcd_8bit_send_string_pos@row 0031  
                       lcd_8bit_send_string_pos@str 0033                        __end_of_I2C_MasterDisableIrq 2698  
           gpio_pin_direction_intialize@_pin_config 001C                                ?_I2C_MasterEnableIrq 0001  
                      _INT2_DefaultInterruptHandler 0000                                 _I2C_DO_ADDRESS_NACK 1EB2  
                                      __pdataCOMRAM 0058                                ?_I2C_MasterGetRxData 0001  
                                         ?_I2C_Open 0001                                  ??_CLOCK_Initialize 001C  
                                ??_UART_Send_String 0021                  __end_of_I2C_SetAddressNackCallback 2542  
                        _I2C_SetAddressNackCallback 252A                                        __mediumconst 0000  
                                            tblptrh 0FF7                                              tblptrl 0FF6  
                                            tblptru 0FF8                           ??_I2C_MasterEnableRestart 0001  
          INT2_SetInterruptHandler@InterruptHandler 001C            INT1_SetInterruptHandler@InterruptHandler 001C  
          INT0_SetInterruptHandler@InterruptHandler 001C             I2C_SetInterruptHandler@InterruptHandler 001C  
                                         ??_sprintf 002E                                    ??_NVM_Initialize 001C  
                  ??_INTERRUPT_InterruptManagerHigh 0012                     ?_INTERRUPT_InterruptManagerHigh 0001  
                                 _SYSTEM_Initialize 24F8                             _convert_uint8_to_string 2150  
                                        __accesstop 0060                             __end_of__initialization 20EC  
                               _I2C_MasterOperation 21DE                                  ?_SYSTEM_Initialize 0001  
                                     ___rparam_used 0001                                ?_I2C_DO_ADDRESS_NACK 0001  
                        convert_uint8_to_string@ret 0037                          convert_uint8_to_string@str 0035  
                           _rdBlkRegCompleteHandler 219C                              ??_gpio_pin_write_logic 001E  
                                    __pcstackCOMRAM 0001                                      ?_I2C_MasterFsm 0001  
                                    ?_I2C_MasterIsr 0001                                     ??_I2C_DO_RX_ACK 0001  
                                      __pidataBANK0 2406                              _I2C_CallbackReturnStop 26B4  
                               ??_SYSTEM_Initialize 001E                               ?_lcd_8bit_send_string 002C  
                                    ?_I2C_SetBuffer 001C                       __end_of_I2C_DO_SEND_ADR_WRITE 25C8  
                        ?_I2C_DO_SEND_RESTART_WRITE 0001                                ?_I2C_MasterOperation 0001  
                                _lcd_8bit_intialize 1642                               ??_I2C_MasterEnableIrq 001C  
                             ??_I2C_MasterGetRxData 0001                             ?_I2C_Write1ByteRegister 0025  
                                        ??_I2C_Open 001E                    __end_of_INT2_SetInterruptHandler 2600  
                        __end_of_I2C_MasterClearIrq 26A0                                 ?_lcd_8bit_intialize 002C  
                         __end_of_SYSTEM_Initialize 2512                            _TemSensor_TC74_Read_Temp 2598  
                                 _I2C_MasterSendAck 267C                                          __pbssBANK0 0060  
                              __end_of_EUSART_Write 2570                                       ??_I2C_DO_IDLE 0001  
                                     ??_I2C_DO_RCEN 0001                       __end_of_rd2RegCompleteHandler 23AE  
                      __end_of_I2C_MasterSendTxData 2670                                  ?_I2C_MasterSendAck 0001  
                             _INT0_InterruptHandler 004E                                   _I2C_MasterStartRx 26AC  
                             ??_I2C_DO_ADDRESS_NACK 000D                       __end_of_wr2RegCompleteHandler 2406  
                               _I2C_DO_RX_NACK_STOP 2638                               _rd1RegCompleteHandler 23AE  
                                ?_I2C_MasterStartRx 0001                          __end_of_I2C_MasterSendNack 2688  
                             _wr1RegCompleteHandler 2356                                 ??_I2C_MasterSendAck 0001  
                          rd1RegCompleteHandler@ptr 000A                                ??_lcd_8bit_intialize 002D  
                       __end_of_I2C_DO_SEND_RESTART 2658                                     _I2C_DO_TX_EMPTY 1B28  
                               I2C_SetBuffer@buffer 001C                         ??_Print_RealTimeClockDS1307 0025  
                               ??_I2C_MasterStartRx 0001                                             _BAUDCON 0FB8  
                                           ?_memset 001C                               ??_I2C_MasterOperation 001C  
      _RealTimeClockDs1307@RealTimeClockDs1307$F381 0038                      I2C_SetDataCompleteCallback@ptr 0023  
                  i2I2C_SetDataCompleteCallback@ptr 0008                      __end_of_I2C_Write1ByteRegister 1E4C  
                          ??_I2C_DO_RX_NACK_RESTART 0001                   __end_of_I2C_DO_SEND_RESTART_WRITE 2660  
                              ?_I2C_DO_RX_NACK_STOP 0001                          ??_INT1_SetInterruptHandler 001E  
                                       _Temp_A7_Val 0054                           __end_of_I2C_MasterSendAck 2682  
                                           _OSCTUNE 0F9B                 __end_of_lcd_8bit_send_enable_signal 2456  
                       _lcd_8bit_send_enable_signal 242E                           ??_convert_uint8_to_string 0036  
                                           _SSPCON1 0FC6                                             _SSPCON2 0FC5  
                                           _SSPSTAT 0FC7                           __end_of_I2C_MasterStartRx 26B0  
                              I2C_Close@returnValue 001C                                          _btn_values 1021  
                      ?_I2C_SetDataCompleteCallback 0021                                           _I2C_DO_RX 18DC  
                                         _I2C_DO_TX 1818                      lcd_8bit_send_enable_signal@lcd 0024  
                  __end_of_I2C_DO_SEND_RESTART_READ 2668                      lcd_8bit_send_enable_signal@ret 0025  
                      I2C_Read1ByteRegister@address 0026                                      _tris_registers 00B0  
                                         _I2C_Close 232A                                    _Keypad_Get_Value 132C  
                         ??_rdBlkRegCompleteHandler 000C                       ??_lcd_8bit_send_enable_signal 0025  
                         ?_INT0_SetInterruptHandler 001C                                _I2C_MasterDisableIrq 2694  
                                 ??i2_I2C_SetBuffer 0005                                     ??_I2C_MasterFsm 000F  
                                   ??_I2C_MasterIsr 0012                                             __Hparam 0000  
                                           __Lparam 0000                                 __end_of_I2C_DO_IDLE 25EC  
                               __end_of_I2C_DO_RCEN 25E0                              ??_lcd_8bit_send_string 002F  
                             _lcd_8bit_send_command 1C1A                                     ??_I2C_SetBuffer 0020  
                                           ___lwdiv 1C90                                             ___lwmod 1F7E  
                           I2C_SetBuffer@bufferSize 001E                                        __psmallconst 1000  
                                    _I2C_MasterOpen 249E                          __end_of_gpio_pin_intialize 2040  
                                           __pcinit 209C                                      _I2C_MasterStop 26B8  
                                    _I2C_Initialize 2570                                             __ramtop 1000  
                          _lcd_8bit_send_string_pos 221E                                             __ptext0 154E  
                                           __ptext1 221E                                             __ptext2 1A20  
                                           __ptext3 1AA4                                             __ptext4 1BA4  
                                           __ptext5 1642                                             __ptext6 1C1A  
                                           __ptext7 242E                                             __ptext8 1FE2  
                                           __ptext9 143E                               ??_I2C_DO_RX_NACK_STOP 0001  
                                           _dpowers 1031                                  I2C_SetCallback@idx 0020  
                          ??_PIN_MANAGER_Initialize 001C                       I2C_CallbackReturnReset@funPtr 000A  
                                I2C_SetCallback@ptr 001E                            wr1RegCompleteHandler@ptr 000A  
                         I2C_Write1ByteRegister@reg 0025                           _Print_RealTimeClockDS1307 1730  
                                           _sprintf 1084               lcd_8bit_intialize@l_data_pins_counter 002E  
                              end_of_initialization 20EC                            _INT2_SetInterruptHandler 25F6  
                                        ?_I2C_DO_RX 0001                                          ?_I2C_DO_TX 0001  
                                           memset@c 001D                                             memset@n 001F  
                                           memset@p 0021                                          ?_I2C_Close 0001  
                            ?_rd1RegCompleteHandler 000A                             __end_of_I2C_DO_TX_EMPTY 1BA4  
                                      _KeyPad_Value 0059                               ?_I2C_MasterDisableIrq 0001  
                                 _EUSART_Initialize 2294                              ?_wr1RegCompleteHandler 000A  
                             gpio_pin_intialize@ret 0026                                  ?_EUSART_Initialize 0001  
                                         _RCSTAbits 0FAB                     __end_of_convert_uint8_to_string 219C  
                                           postdec1 0FE5                                             postdec2 0FDD  
                           ??_I2C_Read1ByteRegister 0026                              __end_of_I2C_MasterOpen 24C0  
                                           postinc0 0FEE                                             postinc2 0FDE  
                            __end_of_I2C_MasterStop 26BC                              __end_of_I2C_Initialize 2584  
                               ??_EUSART_Initialize 001E                               _INT1_InterruptHandler 004C  
                   __end_of_rdBlkRegCompleteHandler 21DE                                _I2C_MasterSendTxData 2668  
                     gpio_pin_intialize@_pin_config 0024                                 Keypad_Get_Value@val 0020  
              __end_of_gpio_pin_direction_intialize 132C                        _gpio_pin_direction_intialize 121A  
                       ?_I2C_SetAddressNackCallback 0021                           __end_of_EUSART_Initialize 22CA  
                                       _I2C_DO_IDLE 25E0                                         _I2C_DO_RCEN 25D4  
                        rdBlkRegCompleteHandler@ptr 000A                       I2C_Write1ByteRegister@address 0027  
                                         _TXSTAbits 0FAC                             ?_I2C_CallbackReturnStop 000A  
                          _I2C_DO_SEND_RESTART_READ 2660                              ?_lcd_8bit_send_command 0026  
                                 i2_I2C_SetCallback 1F18                        I2C_CallbackReturnStop@funPtr 000A  
                    lcd_8bit_send_string_pos@column 0032                                     ?_I2C_MasterOpen 0001  
                      __end_of_INTERRUPT_Initialize 2294                                     ?_I2C_MasterStop 0001  
                                   ?_I2C_Initialize 0001                       convert_uint16_to_string@F2947 003E  
                           _I2C_CallbackReturnReset 26B0                            I2C_Read1ByteRegister@reg 0025  
                      _INT0_DefaultInterruptHandler 0000                                  ?i2_I2C_SetCallback 0001  
                   ??i2_I2C_SetDataCompleteCallback 000A                                         _BAUDCONbits 0FB8  
                                     __pidataCOMRAM 26C0                                        _EUSART_Write 255A  
                             ?_I2C_MasterSendTxData 0001                                      __end_of_memset 22FA  
                       ??_I2C_DO_SEND_RESTART_WRITE 0001                          ??_TemSensor_TC74_Read_Temp 0028  
                               ??i2_I2C_SetCallback 0005                                 start_initialization 209C  
                                     ??_keyPad_Init 001C                       ?_gpio_pin_direction_intialize 001C  
                                     ?_I2C_DO_RESET 0001                            ?_I2C_SetInterruptHandler 001C  
                                       ??_I2C_DO_RX 000D                                         ??_I2C_DO_TX 000D  
                                 ??_I2C_MasterClose 001C                              ??_I2C_MasterDisableIrq 001C  
                                       ??_I2C_Close 001C                                   ??_I2C_MasterStart 001C  
                                 ??_I2C_MasterWrite 001E                      __end_of_I2C_CallbackReturnStop 26B8  
                            _I2C_DO_RX_NACK_RESTART 2630                                    ?_I2C_DO_TX_EMPTY 0001  
                                _I2C_MasterClearIrq 269C                           __end_ofi2_I2C_SetCallback 1F7E  
                           _lcd_8bit_send_char_data 1BA4                          _EUSART_FramingErrorHandler 0046  
                       __end_of_I2C_MasterEnableIrq 2690                                 ?_I2C_MasterClearIrq 0001  
                       __end_of_I2C_MasterGetRxData 26AC                                         __pdataBANK0 009C  
                             __end_of_I2C_DO_RX_ACK 2648                                            ??_memset 0021  
                                  _I2C_DO_SEND_STOP 2648                                 _lcd_8bit_set_cursor 1A20  
                                 ??_I2C_SetCallback 0020                            lcd_8bit_send_command@lcd 0026  
                          lcd_8bit_send_command@ret 002A                                 I2C_Open@returnValue 001F  
                                _I2C_MasterSendNack 2682                            ?_I2C_MasterEnableRestart 0001  
                          __end_of_Keypad_Get_Value 143E                                   _i2c_fsmStateTable 1001  
                             _I2C_DO_SEND_ADR_WRITE 25BA                                         __pbssCOMRAM 0038  
                  __end_of_INT0_SetInterruptHandler 2614                                      ??_I2C_DO_RESET 0001  
                               ?_I2C_MasterSendNack 0001                        convert_uint8_to_string@value 0036  
                                   i2_I2C_SetBuffer 247A                        __end_of_I2C_DO_SEND_ADR_READ 25BA  
                              ??_I2C_MasterClearIrq 001C                         __end_of_I2C_DO_ADDRESS_NACK 1F18  
                              ?_lcd_8bit_set_cursor 002C                                    _I2C_MasterIsNack 2584  
                               __end_of_keyPad_Init 25F6                           _I2C_DO_SEND_RESTART_WRITE 2658  
                                       sprintf@flag 0030                               _INT2_InterruptHandler 004A  
                                       sprintf@prec 0031                     gpio_pin_direction_intialize@ret 0022  
                                  _I2C_MasterSetIrq 26A4                               _rd2RegCompleteHandler 2382  
                        ??_lcd_8bit_send_string_pos 0035                                    ___lwdiv@dividend 001C  
                            _PIN_MANAGER_Initialize 22FA                               _wr2RegCompleteHandler 23DA  
                         ??_I2C_CallbackReturnReset 000C                         __end_of_I2C_MasterOperation 221E  
                              ??_I2C_MasterSendNack 0001                            rd2RegCompleteHandler@ptr 000A  
                                         __pintcode 0008                         lcd_8bit_send_char_data@data 0027  
                   gpio_pin_write_logic@_pin_config 001C                                            ?___lwdiv 001C  
                                          ?___lwmod 0023                              ??_I2C_MasterSendTxData 0001  
                         __end_of_i2c_fsmStateTable 1021                           gpio_pin_write_logic@logic 001D  
                                 ??_NVM_StatusClear 001C                                         __smallconst 1000  
                        ??_INT2_SetInterruptHandler 001E                     __end_of_I2C_SetInterruptHandler 2628  
             __end_ofi2_I2C_SetDataCompleteCallback 255A                       i2_I2C_SetDataCompleteCallback 2542  
                           I2C_MasterOperation@read 001C                                            _I2C_Open 1982  
                                  ___lwdiv@quotient 0020                                            ?_sprintf 0028  
                                _gpio_pin_intialize 1FE2                             ??_rd1RegCompleteHandler 000C  
                              _INTERRUPT_Initialize 225C                               ??_lcd_8bit_set_cursor 002F  
                           ??_wr1RegCompleteHandler 000C                                    _CLOCK_Initialize 2614  
                                  _UART_Send_String 20F6                      ??_gpio_pin_direction_intialize 001D  
                         ??_lcd_8bit_send_char_data 0028                                 ?_gpio_pin_intialize 0024  
                         ?_INT1_SetInterruptHandler 001C                                            _IPR1bits 0F9F  
                                          _IPR2bits 0FA2                                            _PIE1bits 0F9D  
                                          _PIE2bits 0FA0                                   _eusartRxLastError 0048  
                                          i2u200_40 1D9C                                            i2u200_41 1D98  
                                          i2u201_48 1DCA                                            i2u201_49 1DDC  
                                          i2u144_40 248A                                            i2u144_41 2486  
                                          i2u139_40 1F2C                                            i2u170_48 1B58  
                                          i2u139_41 1F28                                            i2u170_49 1B6A  
                                          i2u171_48 1EDC                                            i2u260_40 0078  
                                          i2u171_49 1EEE                                            i2u260_41 0074  
                                          i2u149_40 2594                                            i2u165_40 182C  
                                          i2u261_40 0086                                            i2u149_41 258E  
                                          i2u165_41 1828                                            i2u261_41 0082  
                                          i2u149_46 2596                                            i2u167_40 18D2  
                                          i2u166_48 1856                                            i2u167_41 18CE  
                                          i2u166_49 186A                                            i2u168_40 1908  
                                          i2u168_41 1904                                            i2u257_40 0040  
                                          i2u257_41 003C                                            _PIR1bits 0F9E  
                                          i2u169_48 1936                                            i2u258_40 004E  
                                          i2u169_49 1948                                            i2u258_41 004A  
                                          _PIR2bits 0FA1                                            i2u259_48 0054  
                                          i2u259_49 0066                                            i2u199_40 1D88  
                                          i2u199_41 1D84                               __end_of_I2C_MasterFsm 1DE2  
                             __end_of_I2C_MasterIsr 267C                                            _RCONbits 0FD0  
                       __end_of_I2C_DO_RX_NACK_STOP 2640                     __end_of_I2C_MasterEnableRestart 26C0  
              lcd_8bit_send_char_data@l_pin_counter 002B                               lcd_8bit_intialize@lcd 002C  
                             lcd_8bit_intialize@ret 002F                       __end_of_I2C_Read1ByteRegister 1D74  
             TemSensor_TC74_Read_Temp@Received_Temp 0029                               __end_of_I2C_SetBuffer 247A  
                            ?_I2C_DO_SEND_ADR_WRITE 0001                             __end_ofi2_I2C_SetBuffer 249E  
                              ??_gpio_pin_intialize 0025                            I2C_MasterSendTxData@data 0001  
                          ?_convert_uint8_to_string 0035                      Keypad_Get_Value@L_rows_counter 0021  
                          wr2RegCompleteHandler@ptr 000A                           lcd_8bit_set_cursor@coulmn 002E  
                                       _keyPad_Init 25EC                             gpio_pin_write_logic@ret 0023  
                                       _INTCON2bits 0FF1                                         _INTCON3bits 0FF0  
                        ??_I2C_DO_SEND_RESTART_READ 0001                                           copy_data0 20B0  
                             ?_INTERRUPT_Initialize 0001                            ?_rdBlkRegCompleteHandler 000A  
                         i2I2C_SetBuffer@bufferSize 0003                            _INT0_SetInterruptHandler 260A  
                                        _I2C_Status 0060                                        ?_I2C_DO_IDLE 0001  
                                      ?_I2C_DO_RCEN 0001                              ?_rd2RegCompleteHandler 000A  
                           ??_lcd_8bit_send_command 0028                                          _EECON1bits 0FA6  
                                  ??_I2C_MasterOpen 001C                              ?_wr2RegCompleteHandler 000A  
                                  ??_I2C_MasterStop 0001                                    ??_I2C_Initialize 001C  
                                          __Hrparam 0000                                            __Lrparam 0000  
                              __end_of_I2C_DO_RESET 25D4                            ??_I2C_Write1ByteRegister 0027  
                              _I2C_DO_SEND_ADR_READ 25AA                     __end_of_lcd_8bit_send_char_data 1C1A  
                               _RealTimeClockDs1307 0084                                  __end_of_btn_values 1031  
                  I2C_Read1ByteRegister@returnValue 0027                        __end_ofi2_I2C_MasterClearIrq 26A4  
                                   _I2C_MasterClose 2698                       I2C_SetAddressNackCallback@ptr 0023  
                                        sprintf@val 0032                                     I2C_Open@address 001E  
                              i2I2C_SetCallback@idx 0005                                     _I2C_MasterStart 2690  
                              i2I2C_SetCallback@ptr 0003                                     _I2C_MasterWrite 2628  
                                   ___lwdiv@divisor 001E                          lcd_8bit_send_char_data@lcd 0026  
                                   ___lwdiv@counter 0022                          lcd_8bit_send_char_data@ret 002A  
                                          __ptext10 121A                                            __ptext11 25EC  
                                          __ptext20 2670                                            __ptext12 2150  
                                          __ptext21 2688                                            __ptext13 1084  
                                          __ptext30 2614                                            __ptext22 225C  
                                          __ptext14 1F7E                                            __ptext31 2040  
                                          __ptext23 25F6                                            __ptext15 1C90  
                                          __ptext40 252A                                            __ptext32 1D04  
                                          __ptext24 2600                                            __ptext16 22CA  
                                          __ptext41 1E4C                                            __ptext33 1730  
                                          __ptext25 260A                                            __ptext17 2598  
                                          __ptext50 2694                                            __ptext42 1982  
                                          __ptext34 20F6                                            __ptext26 2570  
                                          __ptext18 24F8                                            __ptext51 2698  
                                          __ptext43 261E                                            __ptext35 255A  
                                          __ptext27 2294                                            __ptext19 22FA  
                                          __ptext60 2638                                            __ptext52 269C  
                                          __ptext44 249E                                            __ptext36 132C  
                                          __ptext28 24C0                                            __ptext61 2640  
                                          __ptext45 268C                                            __ptext37 1DE2  
                                          __ptext29 24DC                                            __ptext70 25AA  
                                          __ptext62 2648                                            __ptext54 2676  
                                          __ptext46 2628                                            __ptext38 2512  
                                          __ptext71 25E0                                            __ptext63 2650  
                                          __ptext55 1D74                                            __ptext47 21DE  
                                          __ptext39 2456                                            __ptext80 26B0  
                                          __ptext72 1B28                                            __ptext64 2658  
                                          __ptext56 26A0                                            __ptext48 2690  
                                          __ptext81 26B4                                            __ptext73 26A4  
                                          __ptext65 2660                                            __ptext57 1EB2  
                                          __ptext49 232A                                            __ptext90 26B8  
                                          __ptext82 219C                                            __ptext74 2584  
                                          __ptext66 25D4                                            __ptext58 25C8  
                                          __ptext91 26BC                                            __ptext83 2356  
                                          __ptext75 2668                                            __ptext67 18DC  
                                          __ptext59 2630                                            __ptext84 2382  
                                          __ptext76 267C                                            __ptext68 1818  
                                          __ptext85 23AE                                            __ptext77 26A8  
                                          __ptext69 25BA                                            __ptext86 23DA  
                                          __ptext78 2682                                            __ptext87 2542  
                                          __ptext79 26AC                                            __ptext88 1F18  
                                          __ptext89 247A                 __end_of_I2C_SetDataCompleteCallback 252A  
                    ?i2_I2C_SetDataCompleteCallback 0006                         _I2C_SetDataCompleteCallback 2512  
                           ?_I2C_DO_RX_NACK_RESTART 0001                            __end_of_I2C_DO_SEND_STOP 2650  
                   UART_Send_String@str_len_counter 0023           __end_of_RealTimeClockDs1307_Get_Date_Time 209C  
               ??_RealTimeClockDs1307_Get_Date_Time 002E                  ?_RealTimeClockDs1307_Get_Date_Time 0028  
                 _RealTimeClockDs1307_Get_Date_Time 2040                    __end_of_lcd_8bit_send_string_pos 225C  
                                   _I2C_SetCallback 1E4C                       ??_I2C_SetDataCompleteCallback 0025  
                        I2C_Write1ByteRegister@data 0026                       UART_Send_String@String_Length 001F  
                                    _NVM_Initialize 2670                                            isa$xinst 0000  
                                          int$flags 005A                               ?_I2C_DO_SEND_ADR_READ 0001  
       __end_of_EUSART_FramingErrorCallbackRegister 24F8               ??_EUSART_FramingErrorCallbackRegister 001E  
              ?_EUSART_FramingErrorCallbackRegister 001C                 _EUSART_FramingErrorCallbackRegister 24DC  
                          __end_of_I2C_MasterIsNack 2598                        _INT1_DefaultInterruptHandler 0000  
                          __end_of_I2C_MasterSetIrq 26A8                                    ?i2_I2C_SetBuffer 0001  
                                 ?_Keypad_Get_Value 001C                                          _INTCONbits 0FF2  
                                ??_Keypad_Get_Value 001D                              ??_INTERRUPT_Initialize 001E  
                                          memset@p1 001C                      __end_of_I2C_DO_RX_NACK_RESTART 2638  
                      __end_of_gpio_pin_write_logic 154E                        ?_lcd_8bit_send_enable_signal 0024  
                                          intlevel2 0000                                           sprintf@ap 002F  
                                         sprintf@sp 0028                                 i2I2C_SetCallback@cb 0001  
                                  ___lwmod@dividend 0023                             ?_PIN_MANAGER_Initialize 0001  
                         ?_TemSensor_TC74_Read_Temp 0001                  _EUSART_DefaultFramingErrorCallback 0000  
                               _I2C_DO_SEND_RESTART 2650                              __end_of_NVM_Initialize 2676  
                                   _NVM_StatusClear 2688                             __end_of_I2C_MasterClose 269C  
                           __end_of_I2C_MasterStart 2694                             __end_of_I2C_MasterWrite 2630  
                          __end_of_CLOCK_Initialize 261E                            __end_of_UART_Send_String 2150  
            __end_of_INTERRUPT_InterruptManagerHigh 00B6                      _INTERRUPT_InterruptManagerHigh 0008  
                              ?_I2C_DO_SEND_RESTART 0001                                            sprintf@c 0034  
                                          sprintf@f 0029                               Keypad_Get_Value@Value 001C  
                                    _port_registers 009C                                     ___lwmod@divisor 0025  
                                   ___lwmod@counter 0027                    __end_of_INT1_SetInterruptHandler 260A  
                                       _SSPCON1bits 0FC6                                         _SSPCON2bits 0FC5  
                                   _NVM_A2_Received 0053                             lcd_8bit_send_string@lcd 002C  
                           lcd_8bit_send_string@ret 002F                             lcd_8bit_send_string@str 002D  
                                EUSART_Write@txData 001C                             __end_of_I2C_SetCallback 1EB2  
                    __end_of_PIN_MANAGER_Initialize 232A                                Keypad_Get_Value@mask 001F  
                     __end_of_rd1RegCompleteHandler 23DA                        lcd_8bit_send_command@command 0027  
                     __end_of_wr1RegCompleteHandler 2382                               _MSSP_InterruptHandler 0050  
                              i2_I2C_MasterClearIrq 26A0                              UART_Send_String@String 001D  
                                   ?_NVM_Initialize 0001                          __end_of_lcd_8bit_intialize 1730  
              TemSensor_TC74_Read_Temp@Temp_Address 0028  
